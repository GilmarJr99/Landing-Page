{
	// Controla se as ações embutidas estão sempre visíveis na exibição de Controle do Código-fonte.
	"scm.alwaysShowActions": false,

	// Controla se os repositórios devem sempre estar visíveis na exibição do Controle do Código-Fonte.
	"scm.alwaysShowRepositories": false,

	// Controla se a exibição do Controle do Código-Fonte deve revelar e selecionar arquivos automaticamente ao abri-los.
	"scm.autoReveal": true,

	// Controla o selo da contagem no ícone de Controle do Código-fonte na Barra de Atividade.
	//  - all: Mostrar a soma de todas as notificações de contagem dos Provedores de Controle do Código-fonte.
	//  - focused: Mostrar a notificação de contagem do Provedor de Controle do Código-fonte com foco.
	//  - off: Desabilitar a notificação de contagem do Controle do Código-fonte.
	"scm.countBadge": "all",

	// Controla o modo de exibição do repositório de Controle do Código-fonte padrão.
	//  - tree: Mostrar as alterações do repositório como uma árvore.
	//  - list: Mostrar as alterações do repositório como uma lista.
	"scm.defaultViewMode": "list",

	// Controla o repositório padrão de Controle de Fonte altera a ordem de classificação quando visto como uma lista.
	//  - name: Classifique as alterações do repositório por nome do arquivo.
	//  - path: Classifique as alterações do repositório para o caminho.
	//  - status: Classificar as alterações do repositório pelo status do Controle do Código-Fonte.
	"scm.defaultViewSortKey": "path",

	// Controla decorações de comparação no editor.
	//  - all: Mostrar as decorações de comparação em todas as localizações disponíveis.
	//  - gutter: Mostrar as decorações de comparação somente na medianiz do editor.
	//  - overview: Mostrar as decorações de comparação somente na régua de visão geral.
	//  - minimap: Mostrar as decorações de comparação somente no minimapa.
	//  - none: Não mostrar as decorações de comparação.
	"scm.diffDecorations": "all",

	// Controla o comportamento das decorações da medianiz de comparação do Controle do Código-Fonte.
	//  - diff: Mostrar a exibição de espiada de comparação embutida ao clicar.
	//  - none: Não fazer nada.
	"scm.diffDecorationsGutterAction": "diff",

	// Controla se um padrão é usado para as decorações de comparação na medianiz.
	"scm.diffDecorationsGutterPattern": {
		"added": false,
		"modified": true
	},

	// Controla a visibilidade do decorador de comparação do Controle do Código-fonte na medianiz.
	//  - always: Mostrar o decorador de comparação na medianiz a qualquer momento.
	//  - hover: Mostrar o decorador de comparação na medianiz somente no foco.
	"scm.diffDecorationsGutterVisibility": "always",

	// Controla a largura (px) das decorações de comparação na medianiz (adicionado a & modified).
	"scm.diffDecorationsGutterWidth": 3,

	// Controla se o espaço em branco à esquerda e à direita é ignorado nas decorações da medianiz de comparação do Controle do Código-fonte.
	//  - true: Ignore o espaço em branco à esquerda e à direita.
	//  - false: Não ignore o espaço em branco à esquerda e à direita.
	//  - inherit: Herdar de `diffEditor.ignoreTrimWhitespace`.
	"scm.diffDecorationsIgnoreTrimWhitespace": "false",

	// Controla a fonte da mensagem de entrada. Use 'default' para a família de fontes da interface do usuário do workbench, `editor` para o valor de `editor.fontFamily` ou uma família de fontes personalizada.
	"scm.inputFontFamily": "default",

	// Controla o tamanho da fonte da mensagem de entrada em pixels.
	"scm.inputFontSize": 13,

	// Controla os selos de contagem nos cabeçalhos do Provedor de Controle do Código-fonte. Estes cabeçalhos só aparecem quando há mais de um provedor.
	//  - hidden: Ocultar notificações de contagem do Provedor de Controle do Código-fonte.
	//  - auto: Somente mostrar a notificação de contagem para o Provedor de Controle do Código-fonte quando diferente de zero.
	//  - visible: Mostrar notificações de contagem do Provedor de Controle do Código-fonte.
	"scm.providerCountBadge": "hidden",

	// Controla a ordem de classificação dos repositórios na exibição de repositórios de controle do código-fonte.
	//  - discovery time: Os repositórios na exibição de Repositórios de Controle do Código-Fonte são classificados pela hora da descoberta. Os repositórios na exibição de Controle do Código-Fonte são classificadas na ordem em que foram selecionados.
	//  - name: Os repositórios nas exibições de Controle do Código-Fonte e Repositórios de Controle do Código-Fonte são classificados pelo nome do repositório.
	//  - path: Os repositórios nas exibições de Controle do Código-Fonte e Repositórios de Controle do Código-Fonte são classificados pelo caminho do repositório.
	"scm.repositories.sortOrder": "discovery time",

	// Controla quantos repositórios são visíveis na seção Repositórios de Controle do Código-fonte. Defina como `0` para poder redimensionar manualmente o modo de exibição.
	"scm.repositories.visible": 10,

	// Controla se um botão de ação pode ser mostrado na exibição do Controle do Código-Fonte.
	"scm.showActionButton": true,

	// Controla se o editor mostra CodeLens.
	"diffEditor.codeLens": false,

	// Quando habilitado, o editor de comparação ignora as alterações no espaço em branco à esquerda ou à direita.
	"diffEditor.ignoreTrimWhitespace": true,

	// Tempo limite em milissegundos após o cancelamento da computação de comparação. Use 0 para nenhum tempo limite.
	"diffEditor.maxComputationTime": 5000,

	// Tamanho máximo do arquivo em MB para calcular as diferenças. Use 0 para nenhum limite.
	"diffEditor.maxFileSize": 50,

	// Controla se o editor de comparação mostra indicadores +/- para alterações adicionadas/removidas.
	"diffEditor.renderIndicators": true,

	// Quando ativado, o editor de diferenças mostra setas em sua margem de glifo para reverter as alterações.
	"diffEditor.renderMarginRevertIcon": true,

	// Controla se o editor de comparação mostra a comparação lado a lado ou embutida.
	"diffEditor.renderSideBySide": true,

	// 
	//  - off: As linhas nunca serão quebradas.
	//  - on: As linhas serão quebradas na largura do visor.
	//  - inherit: As linhas serão quebradas automaticamente de acordo com a configuração de `editor.wordWrap`.
	"diffEditor.wordWrap": "inherit",

	// Controla se as sugestões devem ser aceitas em caracteres de confirmação. Por exemplo, no JavaScript, o ponto e vírgula (`;`) pode ser um caractere de confirmação que aceita uma sugestão e digita esse caractere.
	"editor.acceptSuggestionOnCommitCharacter": true,

	// Controla se as sugestões devem ser aceitas pressionando `Enter`, além de `Tab`. Ajuda a evitar ambiguidade entre a inserção de novas linhas ou a aceitação de sugestões.
	//  - on
	//  - smart: Somente aceitar uma sugestão com `Enter` quando ela fizer uma alteração textual.
	//  - off
	"editor.acceptSuggestionOnEnter": "on",

	// Controla o número de linhas no editor que podem ser lidas por um leitor de tela de uma vez. Quando detectamos um leitor de tela, definimos o padrão automaticamente como 500. Aviso: esta opção afeta o desempenho para números maiores que o padrão.
	"editor.accessibilityPageSize": 10,

	// Controla se o editor deve ser executado em um modo em que é otimizado para leitores de tela.
	//  - auto: O editor usará APIs de plataforma para detectar quando um Leitor de Tela está anexado.
	//  - on: O editor será otimizado permanentemente para uso com um Leitor de Tela.
	//  - off: O editor nunca será otimizado para uso com um Leitor de Tela.
	"editor.accessibilitySupport": "auto",

	// Controla se o editor deve fechar automaticamente os colchetes após o usuário adicionar um colchete de abertura.
	//  - always
	//  - languageDefined: Usar as configurações de linguagem para determinar quando fechar automaticamente os colchetes.
	//  - beforeWhitespace: Fechar automaticamente os colchetes somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingBrackets": "languageDefined",

	// Controla se o editor deve remover as aspas ou os colchetes de fechamento adjacentes durante a exclusão.
	//  - always
	//  - auto: Remover as aspas ou os colchetes de fechamento adjacentes somente se eles foram inseridos automaticamente.
	//  - never
	"editor.autoClosingDelete": "auto",

	// Controla se o editor deve digitar usando colchetes ou aspas de fechamento.
	//  - always
	//  - auto: Digitar usando colchetes ou aspas de fechamento somente se eles tiverem sido inseridos automaticamente.
	//  - never
	"editor.autoClosingOvertype": "auto",

	// Controla se o editor deverá fechar as aspas automaticamente depois que o usuário adicionar aspas de abertura.
	//  - always
	//  - languageDefined: Use as configurações de linguagem para determinar quando fechar as aspas automaticamente.
	//  - beforeWhitespace: Fechar automaticamente as aspas somente quando o cursor estiver à esquerda do espaço em branco.
	//  - never
	"editor.autoClosingQuotes": "languageDefined",

	// Controla se o editor deve ajustar automaticamente o recuo quando os usuários digitam, colam, movem ou recuam linhas.
	//  - none: O editor não inserirá o recuo automaticamente.
	//  - keep: O editor manterá o recuo da linha atual.
	//  - brackets: O editor manterá o recuo da linha atual e honrará os colchetes definidos por linguagem.
	//  - advanced: O editor manterá o recuo da linha atual, honrará os colchetes definidos por linguagem e invocará onEnterRules especiais definidos por linguagens.
	//  - full: O editor manterá o recuo da linha atual, honrará os colchetes definidos por linguagem, invocará onEnterRules especiais definidos por linguagens e honrará indentationRules definido por linguagens.
	"editor.autoIndent": "full",

	// Controla se o editor deve envolver as seleções automaticamente.
	//  - languageDefined: Usar as configurações de linguagem para determinar quando circundar as seleções automaticamente.
	//  - quotes: Colocar entre aspas, mas não entre colchetes.
	//  - brackets: Colocar entre colchetes, mas não entre aspas.
	//  - never
	"editor.autoSurround": "languageDefined",

	// Controla se a colorização do par de colchetes está habilitada ou não. Use `workbench.colorCustomizations` para substituir as cores de realce do colchete.
	"editor.bracketPairColorization.enabled": true,

	// Controla se cada tipo de colchete tem seu próprio pool de cores independente.
	"editor.bracketPairColorization.independentColorPoolPerBracketType": false,

	// Os tipos de ação de código a serem executados ao salvar.
	"editor.codeActionsOnSave": {},

	// Controla se o editor mostra CodeLens.
	"editor.codeLens": true,

	// Controla a família de fontes do CodeLens.
	"editor.codeLensFontFamily": "",

	// Controla o tamanho da fonte do CodeLens em pixels. Quando esta configuração é definida como `0`, será usado 90% do `editor.fontSize`.
	"editor.codeLensFontSize": 0,

	// Controla se o editor deve renderizar o seletor de cor e os decoradores de cor embutidos.
	"editor.colorDecorators": true,

	// Permite que a seleção com o mouse e as teclas faça a seleção de coluna.
	"editor.columnSelection": false,

	// Controla se linhas vazias devem ser ignoradas com as ações de alternância, adição ou remoção para comentários de linha.
	"editor.comments.ignoreEmptyLines": true,

	// Controla se um caractere de espaço é inserido durante o comentário.
	"editor.comments.insertSpace": true,

	// Controla se o realce de sintaxe deve ser copiado para a área de transferência.
	"editor.copyWithSyntaxHighlighting": true,

	// Controla o estilo de animação do cursor.
	"editor.cursorBlinking": "blink",

	// Controla se a animação de cursor suave deve ser habilitada.
	"editor.cursorSmoothCaretAnimation": false,

	// Controla o estilo do cursor.
	"editor.cursorStyle": "line",

	// Controla o número mínimo de linhas visíveis à esquerda e à direita ao redor do cursor. Conhecido como 'scrollOff' ou 'scrollOffset' em alguns outros editores.
	"editor.cursorSurroundingLines": 0,

	// Controla quando `cursorSurroundingLines` deve ser imposto.
	//  - default: `cursorSurroundingLines` é imposto somente quando disparado via teclado ou API.
	//  - all: `cursorSurroundingLines` é sempre imposto.
	"editor.cursorSurroundingLinesStyle": "default",

	// Controla a largura do cursor quando `editor.cursorStyle` está definido como `line`.
	"editor.cursorWidth": 0,

	// Define um formatador padrão que tem precedência sobre todas as outras configurações do formatador. Precisa ser o identificador de uma extensão que contribui com um formatador.
	//  - null: Nenhum
	//  - vscode.css-language-features: Fornece suporte de linguagem avançada para arquivos CSS, LESS e SCSS.
	//  - vscode.html-language-features: Fornece suporte de linguagem avançada para arquivos HTML e Handlebar
	//  - vscode.json-language-features: Fornece suporte de linguagem avançada para arquivos JSON.
	//  - vscode.markdown-language-features: Fornece suporte de linguagem avançada para Markdown.
	//  - vscode.php-language-features: Fornece suporte de linguagem avançada para arquivos do PHP.
	//  - esbenp.prettier-vscode: Code formatter using prettier
	//  - searKing.preview-vscode: A Markdown, ReStructured Text, HTML, Jade, Pug, Image, CSS, Mermaid previewer.
	//  - vscode.references-view: Referenciar os Resultados da pesquisa como modo de exibição estável e separado na barra lateral
	//  - vscode.search-result: Fornece recursos de linguagem e realce de sintaxe para resultados da pesquisa com guias.
	//  - vscode.typescript-language-features: Fornece suporte de linguagem avançada para JavaScript e TypeScript.
	//  - mcright.auto-save: Auto-Save files by switching between windows.
	//  - vscode.configuration-editing: Fornece recursos (IntelliSense avançado, correção automática) em arquivos de configuração, como arquivos de recomendação de extensão, de inicialização e de configuração.
	//  - vscode.debug-auto-launch: O auxiliar para o recurso de anexação automática quando as extensões de depuração de nó não estão ativas.
	//  - vscode.debug-server-ready: Abrir URI no navegador se o servidor em depuração estiver pronto.
	//  - vscode.emmet: Suporte Emmet para VS Code
	//  - vscode.extension-editing: Fornece funcionalidades de lint para extensões de criação.
	//  - yandeu.five-server: A better Live Server with instant updates, highlights and PHP support.
	//  - vscode.git: Integração SCM do Git
	//  - vscode.git-base: Seletor e contribuições estáticas do GIT.
	//  - vscode.github: Recursos do GitHub para VS Code
	//  - vscode.github-authentication: Provedor de Autenticação do GitHub
	//  - vscode.grunt: Extension to add Grunt capabilities to VS Code.
	//  - vscode.gulp: Extensão para adicionar funcionalidades do Gulp ao VSCode.
	//  - vscode.image-preview: Fornece a visualização de imagem interna do VS Code
	//  - vscode.ipynb: Fornece suporte básico para abrir e ler os arquivos de notebook .ipynb do Jupyter
	//  - vscode.jake: Extensão para adicionar funcionalidades do Jake ao VS Code.
	//  - ms-vscode.js-debug: An extension for debugging Node.js programs and Chrome.
	//  - ms-vscode.js-debug-companion: Companion extension to js-debug that provides capability for remote debugging
	//  - ritwickdey.LiveServer: Launch a development local Server with live reload feature for static & dynamic pages
	//  - vscode.markdown-math: Adiciona suporte matemático ao Markdown em notebooks.
	//  - PKief.material-icon-theme: Material Design Icons for Visual Studio Code
	//  - vscode.merge-conflict: Realce e comandos para conflitos de mesclagem embutida.
	//  - vscode.microsoft-authentication: Provedor de autenticação da Microsoft
	//  - vscode.npm: Extensão para adicionar suporte de tarefa para scripts npm.
	//  - ms-vscode-remote.remote-wsl-recommender: Recommends using the Windows Subsystem for Linux (WSL) and the Remote WSL extension.
	//  - vscode.simple-browser: Um modo de exibição da Web interno muito básico para exibir conteúdo da Web.
	//  - ms-edgedevtools.vscode-edge-devtools: Use the Microsoft Edge Tools from within VS Code to see your site's runtime HTML structure, alter its layout, fix styling issues as well as see your site's network requests.
	//  - firefox-devtools.vscode-firefox-debug: Debug your web application or browser extension in Firefox
	//  - ms-vscode.vscode-js-profile-table: Text visualizer for profiles taken from the JavaScript debugger
	"editor.defaultFormatter": null,

	// Controla se o gesto do mouse Ir para Definição sempre abre o widget de espiada.
	"editor.definitionLinkOpensInPeek": false,

	// Controla se `editor.tabSize#` e `#editor.insertSpaces` serão automaticamente detectados quando um arquivo for aberto com base no respectivo conteúdo.
	"editor.detectIndentation": true,

	// Controla se o editor deve permitir a movimentação de seleções por meio de arrastar e soltar.
	"editor.dragAndDrop": true,

	// Controla se você pode arrastar e soltar um arquivo em um editor de texto mantendo pressionada a tecla `shift` (em vez de abrir o arquivo em um editor).
	"editor.dropIntoEditor.enabled": true,

	// Controla se a cópia sem uma seleção copia a linha atual.
	"editor.emptySelectionClipboard": true,

	// Habilitar/desabilitar a execução de edições de extensões ao colar.
	"editor.experimental.pasteActions.enabled": false,

	// Mostra os escopos atuais aninhados durante a rolagem na parte superior do editor.
	"editor.experimental.stickyScroll.enabled": false,

	// Habilitar isso ajusta como o menu de ação do código é renderizado.
	"editor.experimental.useCustomCodeActionMenu": false,

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"editor.fastScrollSensitivity": 5,

	// Controla se Localizar Widget deve adicionar linhas extras na parte superior do editor. Quando true, você poderá rolar para além da primeira linha quando Localizar Widget estiver visível.
	"editor.find.addExtraSpaceOnTop": true,

	// Controla automaticamente a condição para habilitar a Localização na Seleção.
	//  - never: Nunca ativar Localizar na seleção automaticamente (padrão).
	//  - always: Sempre ativar Localizar na seleção automaticamente.
	//  - multiline: Ative Localizar na Seleção automaticamente quando várias linhas de conteúdo forem selecionadas.
	"editor.find.autoFindInSelection": "never",

	// Controla se o cursor deve ir para a localização de correspondências durante a digitação.
	"editor.find.cursorMoveOnType": true,

	// Controla se a pesquisa é reiniciada automaticamente do início (ou do fim) quando nenhuma correspondência adicional é encontrada.
	"editor.find.loop": true,

	// Controla se a cadeia de caracteres de pesquisa em Localizar Widget é propagada da seleção do editor.
	//  - never: Nunca propagar a cadeia de caracteres da pesquisa da seleção do editor.
	//  - always: Sempre propague a cadeia de caracteres de pesquisa da seleção do editor, incluindo a palavra na posição do cursor.
	//  - selection: Somente propagar a cadeia de caracteres da pesquisa da seleção do editor.
	"editor.find.seedSearchStringFromSelection": "always",

	// Controla se o editor tem a dobragem de código habilitada.
	"editor.folding": true,

	// Controla se o editor deve realçar intervalos dobrados.
	"editor.foldingHighlight": true,

	// Controla se o editor recolhe automaticamente os intervalos de importação.
	"editor.foldingImportsByDefault": false,

	// O número máximo de regiões dobráveis. Aumentar esse valor pode fazer com que o editor se torne menos responsivo quando a fonte atual tiver um grande número de regiões dobráveis.
	"editor.foldingMaximumRegions": 5000,

	// Controla a estratégia para os intervalos de dobragem de computação.
	//  - auto: Usar uma estratégia de dobragem específica a um linguagem, se disponível, senão usar uma baseada em recuo.
	//  - indentation: Usar a estratégia de dobragem baseada em recuo.
	"editor.foldingStrategy": "auto",

	// Controla a família de fontes.
	"editor.fontFamily": "Consolas, 'Courier New', monospace",

	// Configura as ligaturas de fonte ou os recursos de fonte. Pode ser um booliano para habilitar/desabilitar ligaturas ou uma cadeia de caracteres para o valor da propriedade 'font-feature-settings' do CSS.
	"editor.fontLigatures": false,

	// Controla o tamanho da fonte em pixels.
	"editor.fontSize": 14,

	// Controla a espessura da fonte. Aceita palavras-chave "normal" e "bold" ou números entre 1 e 1.000.
	"editor.fontWeight": "normal",

	// Controla se o editor deve formatar automaticamente o conteúdo colado. Um formatador precisa estar disponível e o formatador deve ser capaz de formatar um intervalo em um documento.
	"editor.formatOnPaste": false,

	// Formatar um arquivo ao salvar. Um formatador precisa estar disponível, o arquivo não deve ser salvo após o atraso e o editor não deve estar desligando.
	"editor.formatOnSave": false,

	// Controla se o formato no salvamento formata o arquivo inteiro ou somente as modificações. Aplica-se somente quando `editor.formatOnSave` é habilitado.
	//  - file: Formate todo o documento.
	//  - modifications: Formate modificações (exige controle do código-fonte).
	//  - modificationsIfAvailable: Tentará formatar apenas as modificações (requer controle do código-fonte). Se o controle do código-fonte não puder ser usado, todo o arquivo será formatado.
	"editor.formatOnSaveMode": "file",

	// Controla se o editor deve formatar automaticamente a linha após a digitação.
	"editor.formatOnType": false,

	// Controla se o editor deve renderizar a margem vertical do glifo. A margem do glifo é usada principalmente para depuração.
	"editor.glyphMargin": true,

	// ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Declaração' é a localização atual.
	"editor.gotoLocation.alternativeDeclarationCommand": "editor.action.goToReferences",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Definição' é a localização atual.
	"editor.gotoLocation.alternativeDefinitionCommand": "editor.action.goToReferences",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Implementação' é a localização atual.
	"editor.gotoLocation.alternativeImplementationCommand": "",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Referência' é a localização atual.
	"editor.gotoLocation.alternativeReferenceCommand": "",

	// A ID de comando alternativa que está sendo executada quando o resultado de 'Ir para Definição de Tipo' é a localização atual.
	"editor.gotoLocation.alternativeTypeDefinitionCommand": "editor.action.goToReferences",

	// Essa configuração foi preterida. Use configurações separadas como 'editor.editor.gotoLocation.multipleDefinitions' ou 'editor.editor.gotoLocation.multipleImplementations'.
	// 
	"editor.gotoLocation.multiple": null,

	// Controla o comportamento do comando 'Go to Declaration' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleDeclarations": "peek",

	// Controla o comportamento do comando 'Go to Definition' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleDefinitions": "peek",

	// Controla o comportamento do comando 'Go to Implementations' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleImplementations": "peek",

	// Controla o comportamento do comando 'Go to References' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleReferences": "peek",

	// Controla o comportamento do comando 'Go to Type Definition' quando há vários locais de destino.
	//  - peek: Mostrar exibição com espiada dos resultados (padrão)
	//  - gotoAndPeek: Ir para o resultado primário e mostrar uma exibição com espiada
	//  - goto: Ir para o resultado primário e habilitar a navegação sem espiada para outros
	"editor.gotoLocation.multipleTypeDefinitions": "peek",

	// Controla se as guias de pares de colchetes estão habilitadas ou não.
	//  - true: Habilita guias de par de colchetes.
	//  - active: Habilita guias de par de colchetes somente para o par de colchetes ativo.
	//  - false: Desabilita guias de par de colchetes.
	"editor.guides.bracketPairs": false,

	// Controla se as guias de par de colchetes horizontais estão habilitadas ou não.
	//  - true: Habilita guias horizontais como adição a guias de par de colchetes verticais.
	//  - active: Habilita guias horizontais somente para o par de colchetes ativo.
	//  - false: Desabilita guias de par de colchetes horizontais.
	"editor.guides.bracketPairsHorizontal": "active",

	// Controla se o editor deve destacar o par de colchetes ativo.
	"editor.guides.highlightActiveBracketPair": true,

	// Controla se o editor deve realçar a guia de recuo ativo.
	//  - true: Realçar o guia de recuo ativo.
	//  - always: Realça o guia de recuo ativo mesmo se as guias de colchetes estiverem realçadas.
	//  - false: Não realçar o guia de recuo ativo.
	"editor.guides.highlightActiveIndentation": true,

	// Controla se o editor deve renderizar guias de recuo.
	"editor.guides.indentation": true,

	// Controla se o cursor deve ser ocultado na régua de visão geral.
	"editor.hideCursorInOverviewRuler": false,

	// Prefira mostrar os focos acima da linha, se houver espaço.
	"editor.hover.above": true,

	// Controla o atraso em milissegundos após o qual o foco é exibido.
	"editor.hover.delay": 300,

	// Controla se o foco é mostrado.
	"editor.hover.enabled": true,

	// Controla se o foco deve permanecer visível quando o mouse é movido sobre ele.
	"editor.hover.sticky": true,

	// Habilita as dicas embutidas no editor.
	//  - on: As dicas embutidas estão habilitadas
	//  - onUnlessPressed: As dicas embutidas são exibidas por padrão e ocultadas ao manter pressionadas as teclas `Ctrl+Alt`
	//  - offUnlessPressed: As dicas embutidas estão ocultas por padrão e são mostradas ao manter pressionadas as teclas ‘Ctrl+Alt’
	//  - off: As dicas embutidas estão desabilitadas
	"editor.inlayHints.enabled": "on",

	// Controla a família de fontes de dicas de inlay no editor. Quando definido como vazio, o `editor.fontFamily` é usado.
	"editor.inlayHints.fontFamily": "",

	// Controla o tamanho da fonte das dicas de inlay no editor. Por padrão, o `editor.fontSize` é usado quando o valor configurado é menor que `5` ou maior que o tamanho da fonte do editor.
	"editor.inlayHints.fontSize": 0,

	// Habilita o preenchimento em torno das sugestões embutidas no editor.
	"editor.inlayHints.padding": false,

	// Controla se quer mostrar automaticamente sugestões em linha no editor.
	"editor.inlineSuggest.enabled": true,

	// Inserir espaços ao pressionar `Tab`. Esta configuração é substituída com base no conteúdo do arquivo quando `editor.detectIndentation` está ativo.
	"editor.insertSpaces": true,

	// Define os símbolos de colchetes que aumentam ou diminuem o recuo.
	"editor.language.brackets": null,

	// Define os pares de colchetes que são coloridos por seu nível de aninhamento se a colorização de par de colchetes estiver habilitada.
	"editor.language.colorizedBracketPairs": null,

	// Tratamento especial para arquivos grandes para desabilitar determinados recursos de uso intensivo de memória.
	"editor.largeFileOptimizations": true,

	// Controla o espaçamento de letras em pixels.
	"editor.letterSpacing": 0,

	// Habilita a lâmpada de ação do código no editor.
	"editor.lightbulb.enabled": true,

	// Controla a altura da linha. 
	//  - Use 0 para calcular automaticamente a altura da linha do tamanho da fonte.
	//  - Os valores entre 0 e 8 serão usados como um multiplicador com o tamanho da fonte.
	//  - Valores maiores ou iguais a 8 serão usados como valores efetivos.
	"editor.lineHeight": 0,

	// Controla a exibição de números de linha.
	//  - off: Os números de linha não são renderizados.
	//  - on: Os números de linha são renderizados como um número absoluto.
	//  - relative: Os números de linha são renderizados como distância em linhas à posição do cursor.
	//  - interval: Os números de linha são renderizados a cada dez linhas.
	"editor.lineNumbers": "on",

	// Controla se o editor tem a edição vinculada habilitada. Dependendo da linguagem, os símbolos relacionados, por exemplo, a marcas HTML, são atualizados durante a edição.
	"editor.linkedEditing": false,

	// Controla se o editor deve detectar links e torná-los clicáveis.
	"editor.links": true,

	// Realçar colchetes correspondentes.
	"editor.matchBrackets": "always",

	// Linhas acima desse comprimento não serão indexadas por motivos de desempenho
	"editor.maxTokenizationLineLength": 20000,

	// Controla se o minimapa é ocultado automaticamente.
	"editor.minimap.autohide": false,

	// Controla se o minimapa é exibido.
	"editor.minimap.enabled": true,

	// Limitar a largura do minimapa para renderizar no máximo um determinado número de colunas.
	"editor.minimap.maxColumn": 120,

	// Renderizar os caracteres reais em uma linha, em oposição aos blocos de cores.
	"editor.minimap.renderCharacters": true,

	// Escala de conteúdo desenhada no minimapa: 1, 2 ou 3.
	"editor.minimap.scale": 1,

	// Controla quando o controle deslizante do minimapa é exibido.
	"editor.minimap.showSlider": "mouseover",

	// Controla o lado em que o minimapa deve ser renderizado.
	"editor.minimap.side": "right",

	// Controla o tamanho do minimapa.
	//  - proportional: O minimapa tem o mesmo tamanho que o conteúdo do editor (e pode rolar).
	//  - fill: O minimapa alongará ou reduzirá conforme necessário para preencher a altura do editor (sem rolagem).
	//  - fit: O minimapa será reduzido conforme o necessário para nunca ser maior que o editor (sem rolagem).
	"editor.minimap.size": "proportional",

	// Um multiplicador a ser usado no `deltaX` e no `deltaY` dos eventos de rolagem do mouse.
	"editor.mouseWheelScrollSensitivity": 1,

	// Aplicar zoom à fonte do editor ao usar o botão de rolagem do mouse e segurar `Ctrl`.
	"editor.mouseWheelZoom": false,

	// Mesclar vários cursores quando eles estiverem sobrepostos.
	"editor.multiCursorMergeOverlapping": true,

	// O modificador a ser usado para adicionar vários cursores com o mouse. Os gestos do mouse Ir para Definição e Abrir Link irão adaptar-se de forma a não entrarem em conflito com o [modificador multicursor](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).
	//  - ctrlCmd: Mapeia para `Control` no Windows e no Linux e para `Command` no macOS.
	//  - alt: Mapeia para `Alt` no Windows e no Linux e para `Option` no macOS.
	"editor.multiCursorModifier": "alt",

	// Controla a colagem quando a contagem de linhas do texto colado corresponde à contagem do cursor.
	//  - spread: Cada cursor cola uma única linha do texto.
	//  - full: Cada cursor cola o texto completo.
	"editor.multiCursorPaste": "spread",

	// Controla se o editor deve realçar ocorrências de símbolo semântico.
	"editor.occurrencesHighlight": true,

	// Controla se uma borda deve ser desenhada ao redor da régua de visão geral.
	"editor.overviewRulerBorder": true,

	// Controla a quantidade de espaço entre a borda inferior do editor e a última linha.
	"editor.padding.bottom": 0,

	// Controla a quantidade de espaço entre a borda superior do editor e a primeira linha.
	"editor.padding.top": 0,

	// Controla se o parâmetro sugere ciclos de menu ou fecha ao chegar ao final da lista.
	"editor.parameterHints.cycle": false,

	// Habilita um pop-up que mostra a documentação do parâmetro e as informações de tipo conforme você digita.
	"editor.parameterHints.enabled": true,

	// Controla se deve focar o editor embutido ou a árvore no widget de espiada.
	//  - tree: Focalizar a árvore ao abrir a espiada
	//  - editor: Focalizar o editor ao abrir a espiada
	"editor.peekWidgetDefaultFocus": "tree",

	// Controla se as sugestões devem aparecer automaticamente durante a digitação. Isso pode ser controlado para digitar comentários, cadeias de caracteres e outros códigos. A sugestão rápida pode ser configurada para ser exibida como texto fantasma ou com o widget de sugestão. Esteja ciente também da configuração '#editor.suggestOnTriggerCharacters#' que controla se as sugestões são acionadas por caracteres especiais.
	"editor.quickSuggestions": {
		"other": "on",
		"comments": "off",
		"strings": "off"
	},

	// Controla o atraso em milissegundos após o qual as sugestões rápidas serão exibidas.
	"editor.quickSuggestionsDelay": 10,

	// Habilitar/desabilitar a capacidade de visualizar alterações antes de renomear
	"editor.rename.enablePreview": true,

	// Preterido. Use `editor.linkedEditing`.
	// Controla se o editor é renomeado automaticamente no tipo.
	"editor.renameOnType": false,

	// Controla se o editor deve renderizar caracteres de controle.
	"editor.renderControlCharacters": true,

	// Renderizar o número da última linha quando o arquivo terminar com uma nova linha.
	"editor.renderFinalNewline": true,

	// Controla como o editor deve renderizar o realce da linha atual.
	//  - none
	//  - gutter
	//  - line
	//  - all: Realça a medianiz e a linha atual.
	"editor.renderLineHighlight": "line",

	// Controla se o editor deve renderizar o realce da linha atual somente quando está focalizado.
	"editor.renderLineHighlightOnlyWhenFocus": false,

	// Controla como o editor deve renderizar caracteres de espaço em branco.
	//  - none
	//  - boundary: Renderizar caracteres de espaço em branco, exceto espaços únicos entre palavras.
	//  - selection: Renderizar caracteres de espaço em branco somente no texto selecionado.
	//  - trailing: Renderizar somente os caracteres de espaço em branco à direita.
	//  - all
	"editor.renderWhitespace": "selection",

	// Controla se as seleções devem ter cantos arredondados.
	"editor.roundedSelection": true,

	// Renderizar réguas verticais após um determinado número de caracteres com espaçamento uniforme. Usar vários valores para várias réguas. Nenhuma régua será desenhada se a matriz estiver vazia.
	"editor.rulers": [],

	// Controla a visibilidade da barra de rolagem horizontal.
	//  - auto: A barra de rolagem horizontal estará visível somente quando necessário.
	//  - visible: A barra de rolagem horizontal sempre estará visível.
	//  - hidden: A barra de rolagem horizontal sempre estará oculta.
	"editor.scrollbar.horizontal": "auto",

	// A altura da barra de rolagem horizontal.
	"editor.scrollbar.horizontalScrollbarSize": 12,

	// Controla se os cliques rolam por página ou saltam para a posição do clique.
	"editor.scrollbar.scrollByPage": false,

	// Controla a visibilidade da barra de rolagem vertical.
	//  - auto: A barra de rolagem vertical estará visível somente quando necessário.
	//  - visible: A barra de rolagem vertical sempre estará visível.
	//  - hidden: A barra de rolagem vertical sempre estará oculta.
	"editor.scrollbar.vertical": "auto",

	// A largura da barra de rolagem vertical.
	"editor.scrollbar.verticalScrollbarSize": 14,

	// Controla o número de caracteres extras acima do qual o editor será rolado horizontalmente.
	"editor.scrollBeyondLastColumn": 4,

	// Controla se o editor será rolado para além da última linha.
	"editor.scrollBeyondLastLine": true,

	// Rolar apenas ao longo do eixo predominante ao rolar vertical e horizontalmente ao mesmo tempo. Evita o descompasso horizontal ao rolar verticalmente em um trackpad.
	"editor.scrollPredominantAxis": true,

	// Controla se o editor deve realçar correspondências semelhantes à seleção.
	"editor.selectionHighlight": true,

	// Controla se o semanticHighlighting é mostrado para as linguagens que dão suporte a ele.
	//  - true: Realce de semântica habilitado para todos os temas de cor.
	//  - false: Realce de semântica desabilitado para todos os temas de cor.
	//  - configuredByTheme: O realce de semântica é configurado pela configuração `semanticHighlighting` do tema de cor atual.
	"editor.semanticHighlighting.enabled": "configuredByTheme",

	// Substitui os estilos e a cor do token semântico do editor do tema de cores selecionado no momento.
	"editor.semanticTokenColorCustomizations": {},

	// Controla variáveis preteridas do tachado.
	"editor.showDeprecated": true,

	// Controla quando os controles de dobragem na medianiz são exibidos.
	//  - always: Sempre mostrar os controles de dobragem.
	//  - never: Nunca mostre os controles dobráveis e reduza o tamanho da calha.
	//  - mouseover: Mostrar somente os controles de dobragem quando o mouse estiver sobre a medianiz.
	"editor.showFoldingControls": "mouseover",

	// Controla o esmaecimento do código não usado.
	"editor.showUnused": true,

	// Se os espaços em branco à direita e à esquerda sempre devem ser selecionados.
	"editor.smartSelect.selectLeadingAndTrailingWhitespace": true,

	// Controla se o editor rolará usando uma animação.
	"editor.smoothScrolling": false,

	// Controla se cercar com trechos ou trechos de modelo de arquivo são exibidos como ações de código.
	"editor.snippets.codeActions.enabled": true,

	// Controla se os snippets são mostrados com outras sugestões e como são classificados.
	//  - top: Mostrar sugestões de snippet na parte superior de outras sugestões.
	//  - bottom: Mostrar sugestões de snippet abaixo de outras sugestões.
	//  - inline: Mostrar sugestões de snippets com outras sugestões.
	//  - none: Não mostrar sugestões de snippet.
	"editor.snippetSuggestions": "inline",

	// Manter editores de espiada abertos mesmo ao clicar duas vezes no conteúdo deles ou ao pressionar `Escape`.
	"editor.stablePeek": false,

	// Emular o comportamento da seleção dos caracteres de tabulação ao usar espaços para recuo. A seleção respeitará as paradas de tabulação.
	"editor.stickyTabStops": false,

	// Esta configuração foi preterida. Use configurações separadas como 'editor.suggest.showKeywords' ou 'editor.suggest.showSnippets'.
	// 
	"editor.suggest.filteredTypes": {},

	// Controla se a filtragem e classificação de sugestões considera erros pequenos de digitação.
	"editor.suggest.filterGraceful": true,

	// Controla se as palavras são substituídas ao aceitar as conclusões. Observe que isso depende de extensões que optam por esse recurso.
	//  - insert: Inserir sugestão sem substituir o texto à direita do cursor.
	//  - replace: Inserir a sugestão e substituir o texto à direita do cursor.
	"editor.suggest.insertMode": "insert",

	// Controla se a classificação favorece palavras que aparecem próximas ao cursor.
	"editor.suggest.localityBonus": false,

	// Esta configuração foi preterida. Agora, o widget de sugestão pode ser redimensionado.
	// 
	"editor.suggest.maxVisibleSuggestions": 0,

	// Controla se a visualização do resultado da sugestão é apresentada no editor.
	"editor.suggest.preview": false,

	// Controla se as seleções de sugestão lembradas são compartilhadas entre vários workspaces e janelas (precisa de `editor.suggestSelection`).
	"editor.suggest.shareSuggestSelections": false,

	// Quando habilitado, o IntelliSense mostra sugestões de `class`.
	"editor.suggest.showClasses": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `color`.
	"editor.suggest.showColors": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `constant`.
	"editor.suggest.showConstants": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `constructor`.
	"editor.suggest.showConstructors": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `customcolor`.
	"editor.suggest.showCustomcolors": true,

	// Quando habilitado, o IntelliSense mostra sugestões 'preteridas'.
	"editor.suggest.showDeprecated": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `enumMember`.
	"editor.suggest.showEnumMembers": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `enum`.
	"editor.suggest.showEnums": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `event`.
	"editor.suggest.showEvents": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `field`.
	"editor.suggest.showFields": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `file`.
	"editor.suggest.showFiles": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `folder`.
	"editor.suggest.showFolders": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `function`.
	"editor.suggest.showFunctions": true,

	// Controla se os ícones em sugestões devem ser mostrados ou ocultados.
	"editor.suggest.showIcons": true,

	// Controla se os detalhes da sugestão são mostrados embutidos com o rótulo ou somente no widget de detalhes
	"editor.suggest.showInlineDetails": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `interface`.
	"editor.suggest.showInterfaces": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `issues`.
	"editor.suggest.showIssues": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `keyword`.
	"editor.suggest.showKeywords": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `method`.
	"editor.suggest.showMethods": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `module`.
	"editor.suggest.showModules": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `operator`.
	"editor.suggest.showOperators": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `property`.
	"editor.suggest.showProperties": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `reference`.
	"editor.suggest.showReferences": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `snippet`.
	"editor.suggest.showSnippets": true,

	// Controla a visibilidade da barra de status na parte inferior do widget de sugestão.
	"editor.suggest.showStatusBar": false,

	// Quando habilitado, o IntelliSense mostra sugestões de `struct`.
	"editor.suggest.showStructs": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `typeParameter`.
	"editor.suggest.showTypeParameters": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `unit`.
	"editor.suggest.showUnits": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `user`.
	"editor.suggest.showUsers": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `value`.
	"editor.suggest.showValues": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `variable`.
	"editor.suggest.showVariables": true,

	// Quando habilitado, o IntelliSense mostra sugestões de `text`.
	"editor.suggest.showWords": true,

	// Controla se um snippet ativo impede sugestões rápidas.
	"editor.suggest.snippetsPreventQuickSuggestions": true,

	// Tamanho da fonte para o widget sugerido. Quando definido como `0`, o valor de `editor.fontSize` é usado.
	"editor.suggestFontSize": 0,

	// Altura da linha para o widget de sugestão. Quando definido como `0`, o valor de `editor.lineHeight` é usado. O valor mínimo é 8.
	"editor.suggestLineHeight": 0,

	// Controla se as sugestões devem ser exibidas automaticamente ao digitar caracteres de gatilho.
	"editor.suggestOnTriggerCharacters": true,

	// Controla como as sugestões são previamente selecionadas ao mostrar a lista de sugestões.
	//  - first: Sempre selecionar a primeira sugestão.
	//  - recentlyUsed: Selecionar sugestões recentes, a menos que outra digitação selecione uma, por exemplo, `console.| -> console.log`, pois `log` foi concluído recentemente.
	//  - recentlyUsedByPrefix: Selecionar sugestões com base nos prefixos anteriores que concluíram essas sugestões, por exemplo, `co -> console` e `con -> const`.
	"editor.suggestSelection": "first",

	// Habilita as conclusões da tabulação.
	//  - on: A conclusão da tabulação inserirá a melhor sugestão de correspondência quando você pressionar a tecla Tab.
	//  - off: Desabilitar as conclusões da tabulação.
	//  - onlySnippets: A conclusão da tabulação insere snippets quando o prefixo corresponde. Funciona melhor quando 'quickSuggestions' não está habilitado.
	"editor.tabCompletion": "off",

	// O número de espaços ao pressionar 'tab'. Esta configuração é substituída com base no conteúdo do arquivo quando `editor.detectIndentation` está ativo.
	"editor.tabSize": 4,

	// Substitui o estilo da fonte e as cores de sintaxe do editor do tema de cores selecionado no momento.
	"editor.tokenColorCustomizations": {},

	// Remover o espaço em branco inserido automaticamente à direita.
	"editor.trimAutoWhitespace": true,

	// Controla se clicar no conteúdo vazio depois de uma linha dobrada desdobrará a linha.
	"editor.unfoldOnClickAfterEndOfLine": false,

	// Define os caracteres permitidos que não estão sendo destacados.
	"editor.unicodeHighlight.allowedCharacters": {},

	// Caracteres unicode que são comuns em localidades permitidas não estão sendo destacados.
	"editor.unicodeHighlight.allowedLocales": {
		"_os": true,
		"_vscode": true
	},

	// Controla se são realçados caracteres que podem ser confundidos com caracteres ASCII básicos, exceto aqueles que são comuns no local do usuário atual.
	"editor.unicodeHighlight.ambiguousCharacters": true,

	// Controla se os caracteres nos comentários também devem ser sujeitos a destaque unicode.
	"editor.unicodeHighlight.includeComments": "inUntrustedWorkspace",

	// Controla se as cadeias de caracteres também devem estar sujeitas ao realce do unicode.
	"editor.unicodeHighlight.includeStrings": true,

	// Controla se os caracteres que apenas reservam espaço ou não têm largura alguma são destacados.
	"editor.unicodeHighlight.invisibleCharacters": true,

	// Controla se todos os caracteres ASCII não-básicos são destacados. Somente caracteres entre U+0020 e U+007E, tabulação, alimentação de linha e retorno de carro são considerados ASCII básicos.
	"editor.unicodeHighlight.nonBasicASCII": "inUntrustedWorkspace",

	// Remover terminadores de linha incomuns que possam causar problemas.
	//  - auto: Terminadores de linha incomuns são removidos automaticamente.
	//  - off: Terminadores de linha incomuns são ignorados.
	//  - prompt: Terminadores de linha incomuns solicitam ser removidos.
	"editor.unusualLineTerminators": "prompt",

	// A inserção e a exclusão de um espaço em branco seguem as paradas da tabulação.
	"editor.useTabStops": true,

	// Controla se as conclusões devem ser calculadas com base em palavras do documento.
	"editor.wordBasedSuggestions": true,

	// Controla em quais documentos as conclusões baseadas em palavras são computadas.
	//  - currentDocument: Sugerir palavras apenas do documento ativo.
	//  - matchingDocuments: Sugerir palavras de todos os documentos abertos da mesma linguagem.
	//  - allDocuments: Sugerir palavras de todos os documentos abertos.
	"editor.wordBasedSuggestionsMode": "matchingDocuments",

	// Caracteres que serão usados como separadores de palavras ao fazer operações ou navegações relacionadas a palavras.
	"editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

	// Controla como as linhas devem ser quebradas.
	//  - off: As linhas nunca serão quebradas.
	//  - on: As linhas serão quebradas na largura do visor.
	//  - wordWrapColumn: As linhas serão quebradas em `editor.wordWrapColumn`.
	//  - bounded: As linhas serão quebradas no mínimo do visor e de `editor.wordWrapColumn`.
	"editor.wordWrap": "off",

	// Controla a coluna de quebra de linha do editor quando `editor.wordWrap` é `wordWrapColumn` ou `bounded`.
	"editor.wordWrapColumn": 80,

	// Controla o recuo de linhas quebradas.
	//  - none: Sem recuo. Linhas quebradas começam na coluna 1.
	//  - same: As linhas quebradas têm o mesmo recuo que o pai.
	//  - indent: As linhas quebradas obtêm recuo de +1 para o pai.
	//  - deepIndent: As linhas quebradas obtêm recuo de +2 para o pai.
	"editor.wrappingIndent": "same",

	// Controla o algoritmo que computa pontos de quebra de linha.
	//  - simple: Assume que todos os caracteres têm a mesma largura. Este é um algoritmo rápido que funciona corretamente para fontes com espaçamento uniforme e determinados scripts (como caracteres latinos) em que os glifos têm a mesma largura.
	//  - advanced: Delega a computação do ponto de quebra de linha para o navegador. Este é um algoritmo lento, que pode causar congelamento para arquivos grandes, mas funciona corretamente em todos os casos.
	"editor.wrappingStrategy": "simple",

	// Controla quando a faixa do modo restrito é mostrada.
	//  - always: Mostrar a faixa sempre que um workspace não confiável estiver aberto.
	//  - untilDismissed: Mostra a faixa quando um espaço de trabalho não confiável for aberto até ser ignorado.
	//  - never: Não mostrar a faixa quando um workspace não confiável estiver aberto.
	"security.workspace.trust.banner": "untilDismissed",

	// Controla se a janela vazia é confiável por padrão dentro do VS Code. Quando usada com '#security.workspace.trust.untrustedFiles#', você pode habilitar a funcionalidade completa do VS Code sem solicitar em uma janela vazia.
	"security.workspace.trust.emptyWindow": true,

	// Controla se a confiança do espaço de trabalho está habilitada no VS Code.
	"security.workspace.trust.enabled": true,

	// Controla quando a solicitação de inicialização para confiar em um espaço de trabalho é mostrada.
	//  - always: Peça confiança sempre que um espaço de trabalho não confiável for aberto.
	//  - once: Peça confiança na primeira vez que um espaço de trabalho não confiável for aberto.
	//  - never: Não peça confiança quando um espaço de trabalho não confiável for aberto.
	"security.workspace.trust.startupPrompt": "once",

	// Controla como lidar com a abertura de arquivos não confiáveis em um espaço de trabalho confiável. Esta configuração também se aplica a abrir arquivos em uma janela vazia, que é confiável via '#security.workspace.trust.emptyWindow#'.
	//  - prompt: Pergunte como lidar com arquivos não confiáveis para cada espaço de trabalho. Depois que arquivos não confiáveis forem introduzidos a um espaço de trabalho confiável, você não será solicitado novamente.
	//  - open: Sempre permita que arquivos não confiáveis sejam introduzidos a um espaço de trabalho confiável sem solicitar.
	//  - newWindow: Sempre abra arquivos não confidenciais em uma janela separada no modo restrito sem solicitar.
	"security.workspace.trust.untrustedFiles": "prompt",

	// Controla o comportamento de clicar em um ícone da barra de atividades no workbench.
	//  - toggle: Ocultar a barra lateral se o item clicado já estiver visível.
	//  - focus: Focar na barra lateral se o item clicado já estiver visível.
	"workbench.activityBar.iconClickBehavior": "toggle",

	// Controla a visibilidade da barra de atividade no workbench.
	"workbench.activityBar.visible": true,

	// Substitui cores do tema de cores selecionado no momento.
	"workbench.colorCustomizations": {},

	// Especifica o tema de cores usado no workbench.
	"workbench.colorTheme": "Default Dark+",

	// Controla o número de comandos usados recentemente para manter o histórico da paleta de comandos. Defina como 0 para desabilitar o histórico de comandos.
	"workbench.commandPalette.history": 50,

	// Controla se a última entrada digitada na paleta de comandos deverá ser restaurada ao ser aberta na próxima vez.
	"workbench.commandPalette.preserveInput": false,

	// Se um editor que corresponda a um dos tipos listados for aberto como o primeiro em um grupo de editores e mais de um grupo estiver aberto, o grupo será automaticamente bloqueado. Grupos bloqueados serão usados apenas para abrir os editores quando explicitamente escolhidos pelo gesto do usuário (por exemplo, arrastar e soltar), mas não por padrão. Consequentemente, o editor ativo em um grupo bloqueado tem menos probabilidade de ser substituído acidentalmente por um editor diferente.
	"workbench.editor.autoLockGroups": {
		"default": false,
		"mergeEditor.Input": false,
		"vscode-interactive-input": false,
		"interactive": false,
		"workbench.editorinputs.searchEditorInput": false,
		"imagePreview.previewEditor": false,
		"vscode.markdown.preview.editor": false,
		"vscode.preview.preview.editor": false,
		"jsProfileVisualizer.cpuprofile.table": false,
		"jsProfileVisualizer.heapprofile.table": false,
		"terminalEditor": true,
		"jupyter-notebook": false,
		"mainThreadWebview-markdown.preview": false
	},

	// Controla se o layout centralizado deve ser redimensionado automaticamente para a largura máxima quando mais de um grupo é aberto. Uma vez que apenas um grupo estiver aberto, ele será redimensionado para a largura centralizada original.
	"workbench.editor.centeredLayoutAutoResize": true,

	// Controla o comportamento de grupos de editor vazios quando a última guia do grupo é fechada. Quando habilitados, os grupos vazios serão fechados automaticamente. Quando desabilitados, os grupos vazios continuarão fazendo parte da grade.
	"workbench.editor.closeEmptyGroups": true,

	// Controla se os editores que mostram um arquivo que foi aberto durante a sessão devem fechar automaticamente ao serem excluídos ou renomeados por algum outro processo. Desabilitar isso manterá o editor aberto em tal evento. Observe que a exclusão de dentro do aplicativo sempre fechará o editor e que os editores com alterações não salvas nunca fecharão para preservar seus dados.
	"workbench.editor.closeOnFileDelete": false,

	// Controla se as decorações de arquivo do editor devem usar selos.
	"workbench.editor.decorations.badges": true,

	// Controla se as decorações de arquivo do editor devem usar cores.
	"workbench.editor.decorations.colors": true,

	// O editor padrão para arquivos detectados como binários. Se indefinido, o usuário será apresentado a um seletor.
	"workbench.editor.defaultBinaryEditor": "",

	// Controla se os editores abertos são mostrados como editores de visualização. Os editores de visualização não permanecem abertos, são reutilizados até serem explicitamente definidos para serem mantidos abertos (por exemplo, por meio de clique duplo ou edição) e mostram os nomes dos arquivos em itálico.
	"workbench.editor.enablePreview": true,

	// Controla se os editores permanecem na visualização quando uma navegação de código é iniciada a partir deles. Os editores de visualização não permanecem abertos e são reutilizados até que sejam explicitamente definidos para serem mantidos abertos (por exemplo, por meio do clique duplo ou edição). Esse valor é ignorado quando `workbench.editor.enablePreview` está desabilitado.
	"workbench.editor.enablePreviewFromCodeNavigation": false,

	// Controla se os editores abertos a partir da Abertura Rápida são mostrados como editores de visualização. Os editores de visualização não permanecem abertos e são reutilizados até que sejam explicitamente definidos para serem mantidos abertos (por exemplo, por meio do clique duplo ou edição). Esse valor é ignorado quando `workbench.editor.enablePreview` está desabilitado.
	"workbench.editor.enablePreviewFromQuickOpen": false,

	// Controla se as guias são fechadas na ordem usada mais recentemente ou da esquerda para a direita.
	"workbench.editor.focusRecentEditorAfterClose": true,

	// Controla se uma borda superior está desenhada nas guias para editores que têm alterações não salvas. Esse valor é ignorado quando o `workbench.editor.showTabs` está desabilitado.
	"workbench.editor.highlightModifiedTabs": false,

	// Permite o uso do histórico do editor na detecção de idioma. Isso faz com que a detecção automática de idioma privilegie os idiomas que foram abertos recentemente e permite que a detecção de Idioma automática opere com entradas menores.
	"workbench.editor.historyBasedLanguageDetection": true,

	// Controla o formato do rótulo de um editor.
	//  - default: Mostrar o nome do arquivo. Quando as guias estão habilitadas e dois arquivos têm o mesmo nome em um grupo, as seções de diferenciação de cada caminho de arquivo são adicionadas. Quando as guias estiverem desabilitadas, o caminho relativo à pasta do workspace será mostrado se o editor estiver ativo.
	//  - short: Mostrar o nome do arquivo seguido por seu nome de diretório.
	//  - medium: Mostrar o nome do arquivo seguido pelo caminho relativo à pasta do workspace.
	//  - long: Mostrar o nome do arquivo seguido pelo caminho absoluto.
	"workbench.editor.labelFormat": "default",

	// Controla se a linguagem em um editor de texto é detectada automaticamente, a menos que tenha sido explicitamente definido pelo seletor de linguagem. Isso também pode ser definido por linguagem para que você possa especificar as linguagens das quais não deseja ser desativado. Isso é útil para linguagens como Markdown, que geralmente contêm outras linguagens que podem levar a detecção de linguagem a pensar que é a linguagem incorporada e não Markdown.
	"workbench.editor.languageDetection": true,

	// Quando habilitado, mostra uma correção rápida da barra de status quando o idioma do editor não corresponde ao idioma do conteúdo detectado.
	"workbench.editor.languageDetectionHints": {
		"untitledEditors": true,
		"notebookEditors": true
	},

	// Controla se o número de editores abertos deve ser limitado ou não. Quando habilitado, os editores menos usados recentemente fecharão para abrir espaço para os editores recém-abertos.
	"workbench.editor.limit.enabled": false,

	// Controla se o número máximo de editores abertos deve excluir os editores sujos para contagem até o limite configurado.
	"workbench.editor.limit.excludeDirty": false,

	// Controla se o limite de editores abertos máximos deve ser aplicado por grupo de editor ou por todos os grupos de editor.
	"workbench.editor.limit.perEditorGroup": false,

	// Controla o número máximo de editores abertos. Use a configuração `workbench.editor.limit.perEditorGroup` para controlar esse limite por grupo de editores ou em todos os grupos.
	"workbench.editor.limit.value": 10,

	// Habilita o uso dos botões quatro e cinco do mouse para os comandos 'Voltar' e 'Avançar'.
	"workbench.editor.mouseBackForwardToNavigate": true,

	// Controla o escopo do histórico de navegação em editores para comandos como 'Voltar' e 'Avançar'.
	//  - default: Navegar por todos os editores abertos e grupos de editores.
	//  - editorGroup: Navegar somente em editores do grupo de editores ativo.
	//  - editor: Navegar somente no editor ativo.
	"workbench.editor.navigationScope": "default",

	// Controla onde os editores são abertos. Selecione `left` ou `right` para abrir editores à esquerda ou à direita do editor ativo no momento. Selecione `first` ou `last` para abrir editores independentemente do que está atualmente ativo.
	"workbench.editor.openPositioning": "right",

	// Controla a direção padrão dos editores que são abertos lado a lado (por exemplo, no Explorador). Por padrão, os editores serão abertos no lado direito do editor ativo no momento. Se esta opção for alterada para `down`, os editores serão abertos abaixo daquele que está ativo no momento.
	"workbench.editor.openSideBySideDirection": "right",

	// Controla o dimensionamento das guias fixadas do editor. As guias fixadas são classificadas no início de todas as guias abertas e, normalmente, não são fechadas até que sejam desafixadas. Esse valor é ignorado quando `workbench.editor.showTabs` é desabilitado.
	//  - normal: Uma guia fixa herda a aparência das guias não fixas.
	//  - compact: Uma guia fixa será mostrada em um formato compacto com apenas o ícone ou a primeira letra do nome do editor.
	//  - shrink: Uma guia fixa é reduzida a um tamanho compacto fixo mostrando partes do nome do editor.
	"workbench.editor.pinnedTabSizing": "normal",

	// Quando habilitado, um modelo de detecção de idioma que leva em conta o histórico do editor terá maior precedência.
	"workbench.editor.preferHistoryBasedLanguageDetection": false,

	// Restaura o último estado de visualização do editor (por exemplo, posição de rolagem) ao reabrir os editores após terem sido fechados. O estado de visualização do editor é armazenado por grupo de editores e descartado quando um grupo é fechado. Use a configuração `workbench.editor.sharedViewState` para usar o último estado de visualização conhecido em todos os grupos de editores, caso nenhum estado de visualização anterior tenha sido encontrado para um grupo de editores.
	"workbench.editor.restoreViewState": true,

	// Controla se um editor é revelado em um dos grupos visíveis, se aberto. Se desabilitado, um editor preferirá abrir no grupo de editor atualmente ativo. Se habilitado, um editor já aberto será revelado em vez de aberto novamente no grupo de editor ativo no momento. Observe que há alguns casos em que essa configuração é ignorada, por exemplo, ao forçar um editor a abrir em um grupo específico ou no lado do grupo ativo no momento.
	"workbench.editor.revealIfOpen": false,

	// Controla se a rolagem sobre as guias vai abri-las ou não. Por padrão, as guias serão apenas exibidas após a rolagem, mas não serão abertas. Você pode pressionar e manter pressionada a tecla Shift durante a rolagem para alterar esse comportamento durante esse momento. Este valor é ignorado quando a opção `workbench.editor.showTabs` está desabilitada.
	"workbench.editor.scrollToSwitchTabs": false,

	// Preserva o estado da exibição do editor mais recente (por exemplo, posição de rolagem) em todos os grupos de editores e restaura isso se nenhum estado de visualização do editor específico for encontrado para o grupo de editores.
	"workbench.editor.sharedViewState": false,

	// Controla se editores abertos devem ser mostrados com um ícone. Isso exige que um tema de ícone de arquivo seja habilitado também.
	"workbench.editor.showIcons": true,

	// Controla se os editores abertos devem ser exibidos em guias.
	"workbench.editor.showTabs": true,

	// Controla o layout para quando um editor é dividido em um grupo de editores para ser vertical ou horizontal.
	//  - vertical: Os editores são posicionados de cima para baixo.
	//  - horizontal: Os editores são posicionados da esquerda para a direita.
	"workbench.editor.splitInGroupLayout": "horizontal",

	// Controla se os grupos do editor podem ser divididos das operações de arrastar e soltar soltando um editor ou um arquivo nas bordas da área do editor.
	"workbench.editor.splitOnDragAndDrop": true,

	// Controla o dimensionamento dos grupos do editor ao dividi-los.
	//  - distribute: Divide todos os grupos do editor em partes iguais.
	//  - split: Divide o grupo do editor ativo em partes iguais.
	"workbench.editor.splitSizing": "distribute",

	// Controla a posição dos botões de fechar das guias do editor ou os desabilita quando definido como 'desativado'. Esse valor é ignorado quando `workbench.editor.showTabs` está desabilitado.
	"workbench.editor.tabCloseButton": "right",

	// Controla o dimensionamento das guias do editor. Esse valor é ignorado quando `workbench.editor.showTabs` está desabilitado.
	//  - fit: Sempre mantenha as guias grandes o suficiente para mostrar o rótulo de editor completo.
	//  - shrink: Permitir que as guias sejam menores quando o espaço disponível não for suficiente para mostrar todas as guias de uma vez.
	"workbench.editor.tabSizing": "fit",

	// Controla a altura das barras de rolagem usadas para guias e trilhas na área do título do editor.
	//  - default: O tamanho padrão.
	//  - large: Aumenta o tamanho para facilitar a captura com o mouse.
	"workbench.editor.titleScrollbarSizing": "default",

	// Controla se a dica de texto sem título deve estar visível no editor.
	"workbench.editor.untitled.hint": "text",

	// Controla o formato do rótulo de um editor sem título.
	//  - content: O nome do arquivo sem título é derivado do conteúdo de sua primeira linha, a menos que tenha um caminho de arquivo associado. Ele fará fallback para o nome caso a linha esteja vazia ou não contenha caracteres de palavras.
	//  - name: O nome do arquivo sem título não é derivado do conteúdo do arquivo.
	"workbench.editor.untitled.labelFormat": "content",

	// Controla se as guias devem ser encapsuladas em várias linhas ao exceder o espaço disponível ou se uma barra de rolagem deve ser exibida em vez disso. Esse valor é ignorado quando `workbench.editor.showTabs` é desabilitado.
	"workbench.editor.wrapTabs": false,

	// Configurar padrões de glob para editores (por exemplo, '"*.hex": "hexEditor.hexEdit""). Eles têm precedência sobre o comportamento padrão.
	"workbench.editorAssociations": {},

	// Busca experimentos para execução usando um serviço online da Microsoft.
	"workbench.enableExperiments": true,

	// Controla se as ações habilitadas para nuvem devem ser exibidas para armazenar e retomar as alterações não confirmadas ao alternar entre a Web, a área de trabalho ou os dispositivos.
	"workbench.experimental.editSessions.enabled": false,

	// Essa configuração foi preterida em favor de `workbench.layoutControl.enabled`
	// Controla se os controles de layout na barra de título personalizada são ativados por meio de `window.titleBarStyle`.
	"workbench.experimental.layoutControl.enabled": false,

	// Essa configuração foi preterida em favor de `workbench.layoutControl.type`
	// Controla se o controle de layout na barra de título personalizada é exibido como um único botão de menu ou com vários comandos de interface do usuário.
	//  - menu: Mostra um único botão com uma lista suspensa de opções de layout.
	//  - toggles: Mostra vários botões para alternar a visibilidade dos painéis e da barra lateral.
	//  - both: Mostra os botões suspenso e de alternância.
	"workbench.experimental.layoutControl.type": "both",

	// Configurar o abridor a ser usado para URIs externos (por exemplo, http, https).
	"workbench.externalUriOpeners": {},

	// Controla o atraso em milissegundos após o qual a focalização é exibida para os itens do Workbench (por exemplo, alguns itens do modo de exibição de árvore fornecidos na extensão). Os itens já visíveis podem exigir uma atualização para refletirem essa alteração na configuração.
	"workbench.hover.delay": 500,

	// Especifica o tema do ícone de arquivo usado no workbench ou 'null' para não mostrar ícones de arquivo.
	//  - null: Nenhum ícone de arquivo
	//  - vs-minimal
	//  - vs-seti
	//  - material-icon-theme
	"workbench.iconTheme": "vs-seti",

	// Controla se os controles de layout na barra de título personalizada são ativados por meio de `window.titleBarStyle`.
	"workbench.layoutControl.enabled": true,

	// Controla se o controle de layout na barra de título personalizada é exibido como um único botão de menu ou com vários comandos de interface do usuário.
	//  - menu: Mostra um único botão com uma lista suspensa de opções de layout.
	//  - toggles: Mostra vários botões para alternar a visibilidade dos painéis e da barra lateral.
	//  - both: Mostra os botões suspenso e de alternância.
	"workbench.layoutControl.type": "both",

	// Controla o modo de localização padrão para listas e árvores no workbench.
	//  - highlight: Realce os elementos ao pesquisar. Mais para cima e para baixo, a navegação atravessará apenas os elementos realçados.
	//  - filter: Filtrar elementos ao pesquisar.
	"workbench.list.defaultFindMode": "highlight",

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"workbench.list.fastScrollSensitivity": 5,

	// Controla se as listas e árvores dão suporte à rolagem horizontal no workbench. Aviso: a ativação desta configuração tem uma implicação de desempenho.
	"workbench.list.horizontalScrolling": false,

	// Use 'workbench.list.defaultFindMode' em vez disso.
	// Controla o estilo de navegação pelo teclado para listas e árvores no workbench. Pode ser simples, realçar e filtrar.
	//  - simple: A navegação pelo teclado simples tem como foco elementos que correspondem à entrada do teclado. A correspondência é feita somente em prefixos.
	//  - highlight: Realçar a navegação pelo teclado realça elementos que correspondem à entrada do teclado. A navegação mais acima e abaixo passará apenas pelos elementos realçados.
	//  - filter: Filtrar a navegação pelo teclado filtrará e ocultará todos os elementos que não correspondem à entrada do teclado.
	"workbench.list.keyboardNavigation": "highlight",

	// Um multiplicador a ser usado no `deltaX` e no `deltaY` dos eventos de rolagem do mouse.
	"workbench.list.mouseWheelScrollSensitivity": 1,

	// O modificador a ser usado para adicionar um item em árvores e listas a uma seleção múltipla com o mouse (por exemplo, no explorador, abra os editores e a exibição de scm). Os gestos de mouse 'Abrir ao Lado', se compatíveis, se adaptarão de modo que não entrarão em conflito com o modificador de seleção múltipla.
	//  - ctrlCmd: Mapeia para `Control` no Windows e no Linux e para `Command` no macOS.
	//  - alt: Mapeia para `Alt` no Windows e no Linux e para `Option` no macOS.
	"workbench.list.multiSelectModifier": "ctrlCmd",

	// Controla como abrir itens em árvores e listas usando o mouse (caso haja suporte). Observe que algumas árvores e listas podem optar por ignorar essa configuração quando ela não se aplica.
	"workbench.list.openMode": "singleClick",

	// Controla se listas e árvores têm rolagem suave.
	"workbench.list.smoothScrolling": false,

	// Controla se o histórico de arquivos locais está ativado. Quando habilitado, o conteúdo do arquivo de um editor salvo será armazenado em um local de backup para poder restaurar ou revisar o conteúdo posteriormente. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.enabled": true,

	// Configure [padrões glob](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) para excluir arquivos do histórico de arquivos local. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.exclude": {},

	// Controla o número máximo de entradas do histórico de arquivos locais por arquivo. Quando o número de entradas do histórico de arquivos locais exceder esse número para um arquivo, as entradas mais antigas serão descartadas.
	"workbench.localHistory.maxFileEntries": 50,

	// Controla o tamanho máximo de um arquivo (em KB) a ser considerado para o histórico do arquivo local. Arquivos maiores não serão adicionados ao histórico de arquivos locais. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.maxFileSize": 256,

	// Configure um intervalo em segundos durante o qual a última entrada no histórico do arquivo local é substituída pela entrada que está sendo adicionada. Isso ajuda a reduzir o número geral de entradas adicionadas, por exemplo, quando o salvamento automático está ativado. Essa configuração é aplicada apenas a entradas que tenham a mesma origem de origem. Alterar essa configuração não tem efeito nas entradas existentes do histórico de arquivos locais.
	"workbench.localHistory.mergeWindow": 10,

	// Controla a localização padrão do painel (terminal, console de depuração, saída, problemas) em um novo workspace. Ele pode ser exibido na parte inferior, direita ou esquerda da área do editor.
	"workbench.panel.defaultLocation": "bottom",

	// Controla se o painel é aberto maximizado. Ele pode ser sempre aberto maximizado, nunca aberto maximizado ou aberto no último estado em que estava antes de ser fechado.
	//  - always: Sempre maximize o painel ao abri-lo.
	//  - never: Nunca maximizar o painel ao abri-lo. O painel será aberto não maximizado.
	//  - preserve: Abrir o painel no estado em que estava antes de ser fechado.
	"workbench.panel.opensMaximized": "preserve",

	// Especifica o tema de cores preferencial para a aparência escura do sistema operacional quando 'window.autoDetectColorScheme' está habilitado.
	"workbench.preferredDarkColorTheme": "Default Dark+",

	// Especifica o tema de cor preferencial usado no modo escuro de alto contraste quando '#window.autoDetectHighContrast#' está habilitado.
	"workbench.preferredHighContrastColorTheme": "Default High Contrast",

	// Especifica o tema de cor preferencial usado no modo claro de alto contraste quando '#window.autoDetectHighContrast#' está habilitado.
	"workbench.preferredHighContrastLightColorTheme": "Default High Contrast Light",

	// Especifica o tema de cores preferencial para a aparência clara do sistema operacional quando `window.autoDetectColorScheme` está habilitado.
	"workbench.preferredLightColorTheme": "Default Light+",

	// Especifica o tema do ícone do produto usado.
	//  - Default: Padrão
	"workbench.productIconTheme": "Default",

	// Controla se a Abertura Rápida deve ser fechada automaticamente quando perde o foco.
	"workbench.quickOpen.closeOnFocusLost": true,

	// Controla se a última entrada digitada para a Abertura Rápida deverá ser restaurada ao ser aberta na próxima vez.
	"workbench.quickOpen.preserveInput": false,

	// Controla se o workbench deve ser renderizado com menos animações.
	//  - on: Sempre renderizar com movimentos reduzidos.
	//  - off: Não renderizar com movimentos reduzidos
	//  - auto: Renderize com movimentos reduzidos com base na configuração do sistema operacional.
	"workbench.reduceMotion": "auto",

	// Controla o atraso de resposta da focalização em milissegundos da área de arrastar entre as exibições e os editores.
	"workbench.sash.hoverDelay": 300,

	// Controla o tamanho da área de comentários, em pixels, da área de arrastar entre modos de exibição/editores. Defina-o como um valor maior se você achar difícil redimensionar modos de exibição usando o mouse.
	"workbench.sash.size": 4,

	// Determina qual editor de configurações usar por padrão.
	//  - ui: Use o editor de interface do usuário de configurações.
	//  - json: Use o editor de arquivos JSON.
	"workbench.settings.editor": "ui",

	// Controla se o modo de pesquisa de linguagem natural deve ser habilitado para configurações. A pesquisa de linguagem natural é fornecida por um serviço online da Microsoft.
	"workbench.settings.enableNaturalLanguageSearch": true,

	// Controla se as configurações de associação de teclas de abertura também abrem um editor mostrando todas as associações de teclas padrão.
	"workbench.settings.openDefaultKeybindings": false,

	// Controla se as configurações de abertura também abrem um editor mostrando todas as configurações padrão.
	"workbench.settings.openDefaultSettings": false,

	// Controla o comportamento do Sumário do editor de configurações durante a pesquisa.
	//  - hide: Ocultar o Sumário ao pesquisar.
	//  - filter: Filtrar o Sumário para apenas as categorias com configurações correspondentes. Ao clicar em uma categoria, os resultados serão filtrados para essa categoria.
	"workbench.settings.settingsSearchTocBehavior": "filter",

	// Controla se o editor de JSON dividido deve ser usado ao editar configurações como JSON.
	"workbench.settings.useSplitJSON": false,

	// Controla os locais da barra lateral primária e da barra de atividades. Elas podem ser mostradas à esquerda ou à direita do workbench. A barra lateral secundária será mostrada no lado oposto do workbench.
	"workbench.sideBar.location": "left",

	// Controla qual editor é mostrado na inicialização, se nenhum for restaurado da sessão anterior.
	//  - none: Iniciar sem um editor.
	//  - welcomePage: Abra a página de boas-vindas, com conteúdo para ajudar na introdução ao VS Code e extensões.
	//  - readme: Abra o README ao abrir uma pasta que contém um, caso contrário, volte para 'welcomePage'. Nota: isso só é observado como uma configuração global, será ignorado se definido em uma configuração de área de trabalho ou pasta.
	//  - newUntitledFile: Abrir um novo arquivo sem título (aplicável somente ao abrir uma janela vazia).
	//  - welcomePageInEmptyWorkbench: Abrir a página inicial ao abrir um workbench vazio.
	"workbench.startupEditor": "welcomePage",

	// Controla a visibilidade da barra de status na parte inferior do workbench.
	"workbench.statusBar.visible": true,

	// Quando habilitado, mostrará as dicas de marca-d'água quando não houver editor aberto.
	"workbench.tips.enabled": true,

	// Controla como as pastas de árvore são expandidas ao clicar nos nomes das pastas. Observe que algumas árvores e listas poderão optar por ignorar essa configuração se ela não for aplicável.
	"workbench.tree.expandMode": "singleClick",

	// Controle o recuo da árvore em pixels.
	"workbench.tree.indent": 8,

	// Controla se a árvore deve renderizar guias de recuo.
	"workbench.tree.renderIndentGuides": "onHover",

	// Quando habilitado, os prompts de domínio confiável serão exibidos ao abrir links em espaços de trabalho confiáveis.
	"workbench.trustedDomains.promptInTrustedWorkspace": false,

	// Controla a visibilidade das ações do cabeçalho do modo de exibição. Exibir ações de cabeçalho poderá estar sempre visível ou visível apenas quando esse modo de exibição estiver com foco ou focalizado.
	"workbench.view.alwaysShowHeaderActions": false,

	// Quando habilitada, a página de introdução tem links adicionais para tutoriais em vídeo.
	"workbench.welcomePage.experimental.videoTutorials": "off",

	// Preterido, use o 'workbench.reduceMotion' global.
	// Quando habilitado, reduz o movimento na página de boas-vindas.
	"workbench.welcomePage.preferReducedMotion": false,

	// Quando habilitada, um passo a passo da extensão será aberto após a instalação da extensão.
	"workbench.welcomePage.walkthroughs.openOnInstall": true,

	// Se definido, alterne automaticamente para o tema de cor preferido com base na aparência do sistema operacional. Se a aparência do sistema operacional for escura, o tema especificado em '#workbench.preferredDarkColorTheme#' será usado para a aparência clara "#workbench.preferredLightColorTheme#"
	"window.autoDetectColorScheme": false,

	// Se habilitado, será alterado automaticamente para o tema de alto contraste se o sistema operacional estiver usando um tema de alto contraste. O tema de alto contraste a ser usado é especificado por '#workbench.preferredHighContrastColorTheme#' e '#workbench.preferredHighContrastLightColorTheme#'
	"window.autoDetectHighContrast": true,

	// Controla se fechar o último editor também deve fechar a janela. Essa configuração se aplica somente às janelas que não mostram pastas.
	"window.closeWhenEmpty": false,

	// Mostra o iniciador de comandos junto com o título da janela. Esta configuração só tem efeito quando `window.titleBarStyle` está definido como `custom`.
	"window.commandCenter": false,

	// Controla se uma caixa de diálogo de confirmação deve ser exibida antes de fechar a janela ou encerrar do aplicativo.
	//  - always: Sempre solicitar confirmação.
	//  - keyboardOnly: Peça confirmação apenas se uma associação de teclas for usada.
	//  - never: Nunca peça confirmação explicitamente.
	"window.confirmBeforeClose": "never",

	// Controla se a barra de menus será focada pressionando a tecla Alt. Essa configuração não tem efeito sobre como ativar/desativar a barra de menus com a tecla Alt.
	"window.customMenuBarAltFocus": true,

	// Ajustar a aparência das janelas de diálogo.
	"window.dialogStyle": "native",

	// Se habilitado, clicar duas vezes no ícone do aplicativo na barra de título fechará a janela e ela não poderá ser arrastada pelo ícone. Essa configuração só terá efeito quando `window.titleBarStyle` estiver definido como `custom`.
	"window.doubleClickIconToClose": false,

	// Controla se os menus principais podem ser abertos por meio de atalhos da tecla Alt. A desabilitação de mnemônicos permite associar esses atalhos de tecla Alt aos comandos do editor.
	"window.enableMenuBarMnemonics": true,

	// Experimental: Quando habilitada, a janela terá o modo sandbox habilitado via Electron API.
	"window.experimental.useSandbox": false,

	// Use os controles de janela fornecidos pela plataforma em vez de nossos controles de janela baseados em HTML. As alterações exigem uma reinicialização completa para serem aplicadas.
	"window.experimental.windowControlsOverlay.enabled": false,

	// Controlar a visibilidade da barra de menus. A configuração 'toggle' significa que a barra de menus está oculta e que um único pressionamento da tecla Alt fará com que ela seja mostrada. A configuração 'compact' inserirá o menu na barra lateral.
	//  - classic: O menu é exibido na parte superior da janela e fica oculto somente no modo de tela inteira.
	//  - visible: O menu fica sempre visível na parte superior da janela, mesmo no modo de tela inteira.
	//  - toggle: O menu está oculto, mas pode ser exibido na parte superior da janela por meio da tecla Alt.
	//  - hidden: O menu está sempre oculto.
	//  - compact: O menu é exibido como um botão compacto na barra lateral. Este valor é ignorado quando `window.titleBarStyle` é `native`.
	"window.menuBarVisibility": "classic",

	// Controla as dimensões de abertura de uma nova janela quando pelo menos uma janela já está aberta. Observe que esta configuração não tem impacto na primeira janela aberta. A primeira janela sempre restaurará o tamanho e a localização conforme você deixou antes de fechar.
	//  - default: Abrir novas janelas no centro da tela.
	//  - inherit: Abrir novas janelas com a mesma dimensão que a última ativa.
	//  - offset: Abrir novas janelas com a mesma dimensão que a última ativa com uma posição de deslocamento.
	//  - maximized: Abrir novas janelas maximizadas.
	//  - fullscreen: Abrir novas janelas no modo de tela inteira.
	"window.newWindowDimensions": "default",

	// Controla se os arquivos devem ser abertos em uma nova janela ao usar uma caixa de diálogo de linha de comando ou de arquivo.
	// Observe que ainda pode haver casos em que essa configuração é ignorada (por exemplo, ao usar a opção de linha de comando '--new-window' ou '--reuse-window').
	//  - on: Os arquivos serão abertos em uma nova janela.
	//  - off: Os arquivos serão abertos na janela com a pasta Arquivos aberta ou a última janela ativa.
	//  - default: Os arquivos serão abertos em uma nova janela, a menos que seja selecionado de dentro do aplicativo (por exemplo, pelo menu Arquivo).
	"window.openFilesInNewWindow": "off",

	// Controla se as pastas devem abrir em uma nova janela ou substituir a última janela ativa.
	// Observe que ainda podem haver casos em que essa configuração é ignorada (por exemplo, quando usar a opção de linha de comando '--new-windows' ou '--reuse-window').
	//  - on: As pastas serão abertas em uma nova janela.
	//  - off: As pastas substituirão a última janela ativa.
	//  - default: As pastas serão abertas em uma nova janela, a menos que uma pasta seja selecionada de dentro do aplicativo (por exemplo, pelo menu Arquivo).
	"window.openFoldersInNewWindow": "default",

	// Controla se uma nova janela vazia deve ser aberta ao iniciar uma segunda instância sem argumentos ou se a última instância em execução deve receber o foco.
	// Observe que pode haver ainda casos em que essa configuração é ignorada (por exemplo, quando usamos '--new-window' ou '--reuse-window ' como opção de linha de comando).
	//  - on: Abrir uma nova janela vazia.
	//  - off: Focar na última instância de execução ativa.
	"window.openWithoutArgumentsInNewWindow": "on",

	// Controla se uma janela deve ser restaurada para o modo de tela inteira se ela foi encerrada no modo de tela inteira.
	"window.restoreFullscreen": false,

	// Controla como as janelas serão reabertas depois de serem iniciadas pela primeira vez. Esta configuração não tem efeito quando o aplicativo já está em execução.
	//  - preserve: Sempre reabrir todas as janelas. Se uma pasta ou um workspace for aberto (por exemplo, por meio da linha de comando), ele será aberto como uma nova janela, a menos que já tenha sido aberto. Os arquivos serão abertos em uma das janelas restauradas.
	//  - all: Reabrir todas as janelas a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - folders: Reabrir todas as janelas que tinham pastas ou workspaces abertos, a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - one: Reabrir a última janela ativa, a menos que uma pasta, um workspace ou um arquivo esteja aberto (por exemplo, por meio da linha de comando).
	//  - none: Nunca reabrir uma janela. A menos que uma pasta ou um workspace esteja aberto (por exemplo, por meio da linha de comando), uma janela vazia será exibida.
	"window.restoreWindows": "all",

	// Controla o título da janela com base no editor ativo. As variáveis são substituídas com base no contexto:
	// - `${activeEditorShort}`: o nome do arquivo (por exemplo, myFile.txt).
	// - `${activeEditorMedium}`: o caminho do arquivo relativo à pasta do workspace (por exemplo, myFolder/myFileFolder/myFile.txt).
	// - `${activeEditorLong}`: o caminho completo do arquivo (por exemplo, /Users/Development/myFolder/myFileFolder/myFile.txt).
	// - `${activeFolderShort}`: o nome da pasta que contém o arquivo (por exemplo, myFileFolder).
	// - `${activeFolderMedium}`: o caminho da pasta que contém o arquivo, em relação à pasta do workspace (por exemplo, myFolder/myFileFolder).
	// - `${activeFolderLong}`: o caminho completo da pasta que contém o arquivo (por exemplo, /Users/Development/myFolder/myFileFolder).
	// - `${folderName}`: o nome da pasta do workspace que contém o arquivo (por exemplo, myFolder).
	// - `${folderPath}`: o caminho do arquivo da pasta do workspace que contém o arquivo (por exemplo, /Users/Development/myFolder).
	// - `${rootName}`: nome do workspace ou da pasta aberto (por exemplo, myFolder ou myWorkspace).
	// - `${rootPath}`: caminho do arquivo do workspace ou da pasta aberto (por exemplo, /Users/Development/myWorkspace).
	// - `${appName}`: por exemplo, VS Code.
	// - `${remoteName}`: por exemplo, SSH
	// - `${dirty}`: um indicador para quando o editor ativo tem alterações não salvas.
	// - `${separator}`: um separador condicional ("-") que só é mostrado quando circundado por variáveis com valores ou texto estático.
	"window.title": "${dirty}${activeEditorShort}${separator}${rootName}${separator}${appName}",

	// Ajustar a aparência da barra de título da janela. No Linux e no Windows, essa configuração também afeta a aparência do menu de contexto e do aplicativo. As alterações exigem a reinicialização completa para serem aplicadas.
	"window.titleBarStyle": "custom",

	// Separador usado por `window.title`.
	"window.titleSeparator": " - ",

	// Ajustar o nível de zoom da janela. O tamanho original é 0 e cada incremento acima (por exemplo, 1) ou abaixo (por exemplo, -1) representa zoom 20% maior ou menor. Você também pode inserir decimais para ajustar o nível de zoom com uma granularidade mais fina.
	"window.zoomLevel": 0,

	// Configurar associações de arquivo para linguagens (por exemplo, `"*.extension": "html"`). Elas têm precedência sobre as associações padrão das linguagens instaladas.
	"files.associations": {},

	// Quando ativado, o editor tentará adivinhar a codificação do conjunto de caracteres ao abrir os arquivos. Essa configuração também pode ser configurada por idioma. Observe que essa configuração não é respeitada pela pesquisa de texto. Apenas `files.encoding` é respeitado.
	"files.autoGuessEncoding": false,

	// Controles [salvamento automático](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) dos editores que têm alterações não salvas.
	//  - off: Um editor com alterações nunca é salvo automaticamente.
	//  - afterDelay: Um editor com alterações é salvo automaticamente após a configuração do `files.autoSaveDelay`.
	//  - onFocusChange: Um editor com alterações é salvo automaticamente quando o editor perde o foco.
	//  - onWindowChange: Um editor com alterações é salvo automaticamente quando a janela perde o foco.
	"files.autoSave": "off",

	// Controla o atraso em milissegundos após o qual um editor com alterações não salvas é salvo automaticamente. Só se aplica quando `files.autoSave` está definido como` afterDelay `.
	"files.autoSaveDelay": 1000,

	// O identificador de idioma padrão foi atribuído aos novos arquivos. Se configurado para `${activeEditorLanguage}`, usará a ID de idioma do editor de texto atualmente ativo, se houver.
	"files.defaultLanguage": "",

	// Move arquivos/pastas para a lixeira do sistema operacional (lixeira no Windows) ao excluir. Desabilitar isso excluirá arquivos/pastas permanentemente.
	"files.enableTrash": true,

	// A codificação de conjunto de caracteres padrão a ser usada ao ler e gravar arquivos. Essa configuração também pode ser definida por linguagem.
	//  - utf8: UTF-8
	//  - utf8bom: UTF-8 with BOM
	//  - utf16le: UTF-16 LE
	//  - utf16be: UTF-16 BE
	//  - windows1252: Western (Windows 1252)
	//  - iso88591: Western (ISO 8859-1)
	//  - iso88593: Western (ISO 8859-3)
	//  - iso885915: Western (ISO 8859-15)
	//  - macroman: Western (Mac Roman)
	//  - cp437: DOS (CP 437)
	//  - windows1256: Arabic (Windows 1256)
	//  - iso88596: Arabic (ISO 8859-6)
	//  - windows1257: Baltic (Windows 1257)
	//  - iso88594: Baltic (ISO 8859-4)
	//  - iso885914: Celtic (ISO 8859-14)
	//  - windows1250: Central European (Windows 1250)
	//  - iso88592: Central European (ISO 8859-2)
	//  - cp852: Central European (CP 852)
	//  - windows1251: Cyrillic (Windows 1251)
	//  - cp866: Cyrillic (CP 866)
	//  - iso88595: Cyrillic (ISO 8859-5)
	//  - koi8r: Cyrillic (KOI8-R)
	//  - koi8u: Cyrillic (KOI8-U)
	//  - iso885913: Estonian (ISO 8859-13)
	//  - windows1253: Greek (Windows 1253)
	//  - iso88597: Greek (ISO 8859-7)
	//  - windows1255: Hebrew (Windows 1255)
	//  - iso88598: Hebrew (ISO 8859-8)
	//  - iso885910: Nordic (ISO 8859-10)
	//  - iso885916: Romanian (ISO 8859-16)
	//  - windows1254: Turkish (Windows 1254)
	//  - iso88599: Turkish (ISO 8859-9)
	//  - windows1258: Vietnamese (Windows 1258)
	//  - gbk: Simplified Chinese (GBK)
	//  - gb18030: Simplified Chinese (GB18030)
	//  - cp950: Traditional Chinese (Big5)
	//  - big5hkscs: Traditional Chinese (Big5-HKSCS)
	//  - shiftjis: Japanese (Shift JIS)
	//  - eucjp: Japanese (EUC-JP)
	//  - euckr: Korean (EUC-KR)
	//  - windows874: Thai (Windows 874)
	//  - iso885911: Latin/Thai (ISO 8859-11)
	//  - koi8ru: Cyrillic (KOI8-RU)
	//  - koi8t: Tajik (KOI8-T)
	//  - gb2312: Simplified Chinese (GB 2312)
	//  - cp865: Nordic DOS (CP 865)
	//  - cp850: Western European DOS (CP 850)
	"files.encoding": "utf8",

	// O caractere de fim de linha padrão.
	//  - \n: LF
	//  - \r\n: CRLF
	//  - auto: Usa o caractere de fim de linha específico do sistema operacional.
	"files.eol": "auto",

	// Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders. For example, the file explorer decides which files and folders to show or hide based on this setting. Refer to the `search.exclude` setting to define search-specific excludes.
	"files.exclude": {
		"**/.git": true,
		"**/.svn": true,
		"**/.hg": true,
		"**/CVS": true,
		"**/.DS_Store": true,
		"**/Thumbs.db": true
	},

	// Controla se os arquivos não salvos são lembrados entre as sessões, permitindo que o prompt de salvamento ao sair do editor seja ignorado.
	//  - off: Desative a Hot Exit. Um prompt será mostrado ao tentar fechar uma janela com editores que têm alterações não salvas.
	//  - onExit: O Hot Exit será disparado quando a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, keybinding, menu). Todas as janelas sem pastas abertas serão restauradas na próxima inicialização. Uma lista de janelas com arquivos não salvos abertas anteriormente pode ser acessada em `Arquivo > Abrir Recente > Mais...`
	//  - onExitAndWindowClose: O Hot Exit será disparado quando a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, keybinding, menu) e também para qualquer janela com uma pasta aberta, independentemente de esta ser a última janela. Todas as janelas sem pastas abertas serão restauradas na próxima inicialização. Uma lista de janelas com arquivos não salvos abertas anteriormente pode ser acessada por meio de `Arquivo > Abrir Recente > Mais...`
	"files.hotExit": "onExit",

	// Quando habilitado, insira uma nova linha final no final do arquivo ao salvá-lo.
	"files.insertFinalNewline": false,

	// Controla a memória disponível para VS Code após a reinicialização ao tentar abrir arquivos grandes. O mesmo efeito que especificar `--max-memory=NEWSIZE` na linha de comando.
	"files.maxMemoryForLargeFilesMB": 4096,

	// Tempo limite em milissegundos após o qual os participantes do arquivo para criar, renomear e excluir serão cancelados. Use `0` para desabilitar participantes.
	"files.participants.timeout": 60000,

	// Controla se os arquivos que fizeram parte de uma refatoração são salvos automaticamente
	"files.refactoring.autoSave": true,

	// Restaurar a pilha de desfazer quando um arquivo for reaberto.
	"files.restoreUndoStack": true,

	// Um conflito de salvamento pode ocorrer quando um arquivo é salvo em um disco que foi alterado por outro programa nesse tempo. Para evitar a perda de dados, o usuário é solicitado a comparar as alterações no editor com a versão no disco. Essa configuração só deverá ser alterada se você encontrar frequentemente erros de conflito de salvamento e poderá resultar em perda de dados se usada sem cuidado.
	//  - askUser: Recusará salvar e pedirá a resolução do conflito de salvamento manualmente.
	//  - overwriteFileOnDisk: Resolverá o conflito de salvamento ao substituir o arquivo no disco pelas alterações no editor.
	"files.saveConflictResolution": "askUser",

	// Habilita a caixa de diálogo de arquivo simples. A caixa de diálogo de arquivo simples substitui a caixa de diálogo de arquivo do sistema quando habilitada.
	"files.simpleDialog.enable": false,

	// Quando habilitado, cortará todas as novas linhas após a última linha final no final do arquivo ao salvá-lo.
	"files.trimFinalNewlines": false,

	// Quando habilitado, cortará o espaço em branco à direita ao salvar um arquivo.
	"files.trimTrailingWhitespace": false,

	// Configure caminhos ou padrões glob a serem excluídos da inspeção de arquivos. Os caminhos ou padrões glob básicos que sejam relativos (por exemplo, 'build/output' ou '*.js') serão resolvidos para um caminho absoluto usando o workspace aberto no momento. Os padrões glob complexos devem corresponder aos caminhos absolutos (por exemplo, prefixo com '**/' ou o caminho completo e o sufixo com '/**' para corresponderem aos arquivos dentro de um caminho) para corresponderem corretamente (por exemplo, '**/build/output/**' ou '/Users/name/workspaces/project/build/output/**'). Quando você notar que o processo do inspetor de arquivos está consumindo muita CPU, exclua pastas grandes de menor interesse (como pastas de saída de build).
	"files.watcherExclude": {
		"**/.git/objects/**": true,
		"**/.git/subtree-cache/**": true,
		"**/node_modules/*/**": true,
		"**/.hg/store/**": true
	},

	// Configure caminhos extras para observar as alterações no workspace. Por padrão, todas as pastas do workspace serão inspecionadas recursivamente, exceto as pastas que são links simbólicos. Você pode adicionar explicitamente caminhos absolutos ou relativos para suportar pastas de inspeção que são links simbólicos. Os caminhos relativos serão resolvidos para um caminho absoluto que usa o workspace aberto no momento.
	"files.watcherInclude": [],

	// Controla o tamanho da fonte (em pixels) do teclado do modo screencast.
	"screencastMode.fontSize": 56,

	// Controla o tempo (em milissegundos) em que a sobreposição do teclado é mostrada no modo screencast.
	"screencastMode.keyboardOverlayTimeout": 800,

	// Controla o que é exibido na sobreposição do teclado ao mostrar os atalhos.
	//  - keys: Teclas.
	//  - command: Título do comando.
	//  - commandWithGroup: Título do comando prefixado por seu grupo.
	//  - commandAndKeys: Título e teclas do comando.
	//  - commandWithGroupAndKeys: Título e teclas do comando, com o comando prefixado por seu grupo.
	"screencastMode.keyboardShortcutsFormat": "commandAndKeys",

	// Controla a cor em hexa (#RGB, #RGBA, #RRGGBB ou #RRGGBBAA) do indicador do mouse no modo screencast.
	"screencastMode.mouseIndicatorColor": "#FF0000",

	// Controla o tamanho (em pixels) do indicador do mouse no modo screencast.
	"screencastMode.mouseIndicatorSize": 20,

	// Somente mostrar atalhos de teclado no modo screencast.
	"screencastMode.onlyKeyboardShortcuts": false,

	// Controla o deslocamento vertical da cobertura do modo screencast da parte inferior como um percentual da altura do workbench.
	"screencastMode.verticalOffset": 20,

	// Controla se a ativação do modo Zen também centraliza o layout.
	"zenMode.centerLayout": true,

	// Controla se a ativação do modo Zen também coloca o workbench no modo de tela inteira.
	"zenMode.fullScreen": true,

	// Controla se ativar o modo Zen também oculta a barra de atividade na parte esquerda ou direita do workbench.
	"zenMode.hideActivityBar": true,

	// Controla se a ativação do modo Zen também oculta os números de linha do editor.
	"zenMode.hideLineNumbers": true,

	// Controla se a ativação do modo Zen também oculta a barra de status na parte inferior do workbench.
	"zenMode.hideStatusBar": true,

	// Controla se a ativação do modo Zen também oculta as guias do workbench.
	"zenMode.hideTabs": true,

	// Controla se uma janela deverá ser restaurada para o modo zen se ela tiver sido encerrada no modo zen.
	"zenMode.restore": true,

	// Controla se as notificações no modo não incomodam devem ser habilitadas no modo zen. Se true, apenas as notificações de erro serão exibidas.
	"zenMode.silentNotifications": true,

	// Controla se o explorador deve revelar e selecionar arquivos automaticamente ao abri-los.
	//  - true: Os arquivos serão revelados e selecionados.
	//  - false: Os arquivos não serão revelados e selecionados.
	//  - focusNoScroll: Os arquivos não serão rolados no modo de exibição, mas ainda terão foco.
	"explorer.autoReveal": true,

	// Controla se o explorador deve renderizar pastas em um formato compacto. Nesse formato, as pastas filho únicas serão compactadas em um elemento de árvore combinado. Isso é útil para estruturas de pacote Java, por exemplo.
	"explorer.compactFolders": true,

	// Controla se o explorador deve solicitar confirmação ao excluir um arquivo por meio da lixeira.
	"explorer.confirmDelete": true,

	// Controla se o explorador deve solicitar confirmação para mover arquivos e pastas por meio de arrastar e soltar.
	"explorer.confirmDragAndDrop": true,

	// Controla se o gerenciador deve solicitar confirmação ao desfazer.
	//  - verbose: O Explorer solicitará antes de todas as operações de desfazer.
	//  - default: O Explorer solicitará antes de operações de desfazer destrutivas.
	//  - light: O Explorer não solicitará antes de desfazer operações quando o foco for focalizado.
	"explorer.confirmUndo": "default",

	// O caractere de separação de caminho usado ao copiar caminhos de arquivo relativos.
	//  - /: Use barra como caractere de separação de caminho.
	//  - \: Use a barra invertida como caractere de separação de caminho.
	//  - auto: Usa o caractere de separação de caminho específico do sistema operacional.
	"explorer.copyRelativePathSeparator": "auto",

	// Controla se as decorações de arquivo devem usar selos.
	"explorer.decorations.badges": true,

	// Controla se as decorações de arquivo devem usar cores.
	"explorer.decorations.colors": true,

	// Controla se o gerenciador deve permitir a movimentação de arquivos e pastas por meio da operação de arrastar e soltar. Esta configuração afeta apenas a operação de arrastar e soltar dentro do gerenciador.
	"explorer.enableDragAndDrop": true,

	// Controla se o gerenciador deve dar suporte à desfazer operações de arquivo e pasta.
	"explorer.enableUndo": true,

	// Controla se as entradas em .gitignore devem ser analisadas e excluídas do explorador. Igual a `files.exclude`.
	"explorer.excludeGitIgnore": false,

	// Controla se o explorador deve expandir espaços de trabalho multi-raiz contendo apenas uma pasta durante a inicialização
	"explorer.expandSingleFolderWorkspaces": true,

	// Controla se o aninhamento de arquivos está habilitado no explorador. O aninhamento de arquivos permite que os arquivos relacionados em um diretório sejam agrupados visualmente em um único arquivo pai.
	"explorer.fileNesting.enabled": false,

	// Controla se os ninhos de arquivos são expandidos automaticamente. `explorer.fileNesting.enabled` deve ser definido para que isso tenha efeito.
	"explorer.fileNesting.expand": true,

	// Controla o aninhamento de arquivos no gerenciador. Cada __Item__ representa um padrão pai e pode conter um único caractere `*` que corresponda a qualquer cadeia de caracteres. Cada __Value__ representa uma lista separada por vírgulas dos padrões filho que devem ser mostrados aninhados em um determinado pai. Os padrões filho podem conter vários tokens especiais:
	// - '${capture}': Corresponde ao valor resolvido de `*` do padrão pai
	// - '${basename}': corresponde ao nome base do arquivo pai, o 'file' em 'file.ts'
	// - '${extname}': corresponde à extensão do arquivo pai, o 'ts' em 'file.ts'
	// - '${dirname}': corresponde ao nome do diretório do arquivo pai, o 'src' em 'src/file.ts'
	// - `*`: corresponde a qualquer cadeia de caracteres e só pode ser usada uma vez por padrão filho
	"explorer.fileNesting.patterns": {
		"*.ts": "${capture}.js",
		"*.js": "${capture}.js.map, ${capture}.min.js, ${capture}.d.ts",
		"*.jsx": "${capture}.js",
		"*.tsx": "${capture}.ts",
		"tsconfig.json": "tsconfig.*.json",
		"package.json": "package-lock.json, yarn.lock, pnpm-lock.yaml"
	},

	// Controla qual estratégia de nomenclatura deverá ser usada quando um novo nome for atribuir a um item do explorador duplicado ao colar.
	//  - simple: Acrescenta a palavra "cópia" no final do nome duplicado, potencialmente seguido por um número
	//  - smart: Adiciona um número ao final do nome duplicado. Se algum número já fizer parte do nome, ele tentará aumentar esse número
	"explorer.incrementalNaming": "simple",

	// O número mínimo de slots de editor mostrados no painel Abrir Editores. Se definido como 0, o painel Abrir Editores será redimensionado dinamicamente com base no número de editores.
	"explorer.openEditors.minVisible": 0,

	// Controla a ordem de classificação dos editores no painel Editores Abertos.
	//  - editorOrder: Os editores são ordenados na mesma ordem em que as guias do editor são mostradas.
	//  - alphabetical: Os editores são ordenados alfabeticamente pelo nome da guia dentro de cada grupo de editores.
	//  - fullPath: Os editores são ordenados em ordem alfabética por caminho completo dentro de cada grupo de editores.
	"explorer.openEditors.sortOrder": "editorOrder",

	// O número máximo de editores mostrados no painel Abrir Editores. Configurar como 0 oculta o painel Abrir Editores.
	"explorer.openEditors.visible": 9,

	// Controla a classificação baseada em propriedade de arquivos e pastas no explorador. Quando '#explorer.fileNesting.enabled#' está habilitado, a classificação de arquivos aninhados também estará controlada.
	//  - default: Os arquivos e as pastas são classificados por nomes. As pastas são exibidas antes dos arquivos.
	//  - mixed: Os arquivos e as pastas são classificados por nomes. Os arquivos estão entrelaçados com as pastas.
	//  - filesFirst: Os arquivos e as pastas são classificados por nomes. Os arquivos são exibidos antes das pastas.
	//  - type: Os arquivos e as pastas são agrupados por tipo de extensão, e em seguida, classificados pelos nomes. As pastas são exibidas antes dos arquivos.
	//  - modified: Arquivos e pastas são classificados por data da última modificação em ordem decrescente. As pastas são exibidas antes dos arquivos.
	//  - foldersNestsFiles: Arquivos e pastas são classificados por seus nomes. As pastas são exibidas antes dos arquivos. Arquivos com filhos aninhados são exibidos antes de outros arquivos.
	"explorer.sortOrder": "default",

	// Controla a classificação lexicográfica de nomes de arquivos e de pastas no Explorer.
	//  - default: Nomes em maiúsculas e minúsculas são misturados.
	//  - upper: Os nomes em maiúsculas são agrupados antes dos nomes em minúsculas.
	//  - lower: Os nomes em minúsculas são agrupados antes dos nomes em maiúsculas.
	//  - unicode: Os nomes são classificados em ordem unicode.
	"explorer.sortOrderLexicographicOptions": "default",

	// Controla o posicionamento do actionbar nas linhas do modo de exibição de pesquisa.
	//  - auto: Posicione o actionBar à direita quando o modo de exibição de pesquisa for estreito e imediatamente após o conteúdo quando o modo de exibição de pesquisa for largo.
	//  - right: Sempre posicione o actionbar à direita.
	"search.actionsPosition": "right",

	// Controla se os resultados da pesquisa serão recolhidos ou expandidos.
	//  - auto: Arquivos com menos de 10 resultados são expandidos. Outros são recolhidos.
	//  - alwaysCollapse
	//  - alwaysExpand
	"search.collapseResults": "alwaysExpand",

	// Configure [glob patterns](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options) for excluding files and folders in fulltext searches and quick open. Inherits all glob patterns from the `files.exclude` setting.
	"search.exclude": {
		"**/node_modules": true,
		"**/bower_components": true,
		"**/*.code-search": true
	},

	// Controla se os ciclos de links devem ser seguidos durante a pesquisa.
	"search.followSymlinks": true,

	// Essa configuração foi preterida. Em vez disso, você pode arrastar o ícone de pesquisa para um novo local.
	// Controla se a pesquisa será mostrada como um modo de exibição na barra lateral ou como um painel na área do painel para obter mais espaço horizontal.
	"search.location": "sidebar",

	// O cache de pesquisa é mantido no host de extensão que nunca é desligado. Portanto, essa configuração não é mais necessária.
	// Quando habilitado, o processo de searchService será mantido ativo em vez de ser desligado após uma hora de inatividade. Isso manterá o cache de pesquisa de arquivo na memória.
	"search.maintainFileSearchCache": false,

	// Controla o número máximo de resultados da pesquisa, pode ser definido como `nulo` (vazio) para retornar resultados ilimitados.
	"search.maxResults": 20000,

	// Controles em que ocorrem as novas operações “Pesquisar: Localizar nos Arquivos” e “Localizar na Pasta”: no modo de exibição de pesquisa ou em um editor de pesquisa
	//  - view: Pesquisar na exibição de pesquisa, seja no painel ou nas barras laterais.
	//  - reuseEditor: Pesquisar em um editor de pesquisa existente se houver algum. Caso contrário, pesquisar em um novo editor de pesquisa.
	//  - newEditor: Pesquisar em um novo editor de pesquisa.
	"search.mode": "view",

	// Controla a ordem de classificação do histórico do editor ao abrir rapidamente ao filtrar.
	//  - default: As entradas do histórico são classificadas por relevância com base no valor do filtro usado. As entradas mais relevantes aparecem primeiro.
	//  - recency: As entradas do histórico são classificadas por recência. As entradas abertas mais recentemente aparecem primeiro.
	"search.quickOpen.history.filterSortOrder": "default",

	// Se deseja incluir os resultados de arquivos abertos recentemente nos resultados do arquivo para Abertura Rápida.
	"search.quickOpen.includeHistory": true,

	// Se deseja incluir os resultados de uma pesquisa de símbolo global nos resultados do arquivo para Abertura Rápida.
	"search.quickOpen.includeSymbols": false,

	// O número padrão de linhas de contexto circundantes a serem usadas ao criar Editores de Pesquisas. Se estiver usando `search. searchEditor.reusePriorSearchConfiguration`, isso poderá ser definido como `null` (vazio) para usar a configuração do Editor de Pesquisas anterior.
	"search.searchEditor.defaultNumberOfContextLines": 1,

	// Configurar efeito de clicar duas vezes em um resultado em um editor de pesquisas.
	//  - selectWord: Clicar duas vezes seleciona a palavra sob o cursor.
	//  - goToLocation: Clicar duas vezes abre o resultado no grupo de editor ativo.
	//  - openLocationToSide: Clicar duas vezes abrirá o resultado no grupo editor ao lado, criando um se ele ainda não existir.
	"search.searchEditor.doubleClickBehaviour": "goToLocation",

	// Quando esta opção estiver habilitada, os novos Editores de Pesquisa reutilizarão as inclusões, as exclusões e os sinalizadores do Editor de Pesquisa já aberto.
	"search.searchEditor.reusePriorSearchConfiguration": false,

	// Pesquisar todos os arquivos enquanto você digita.
	"search.searchOnType": true,

	// Quando `search.searchOnType#` está habilitado, controla o tempo limite em milissegundos entre a digitação de um caractere e o início da pesquisa. Não tem efeito quando `#search.searchOnType` está desabilitado.
	"search.searchOnTypeDebouncePeriod": 300,

	// Atualize a consulta de pesquisa para o texto selecionado do editor ao focar na exibição de pesquisa. Isso acontece ao clicar ou ao disparar o comando `workbench.views.search.focus`.
	"search.seedOnFocus": false,

	// Habilitar a pesquisa de propagação da palavra mais próxima ao cursor quando o editor ativo não tiver nenhuma seleção.
	"search.seedWithNearestWord": false,

	// Controla se os números de linha devem ser mostrados para os resultados da pesquisa.
	"search.showLineNumbers": false,

	// Pesquisar sem diferenciar maiúsculas de minúsculas se o padrão for todo em minúsculas, caso contrário, pesquisar diferenciando maiúsculas de minúsculas.
	"search.smartCase": false,

	// Controla a ordem de classificação dos resultados da pesquisa.
	//  - default: Os resultados são classificados por nomes de pastas e arquivos, em ordem alfabética.
	//  - fileNames: Os resultados são classificados por nomes de arquivo ignorando a ordem da pasta, em ordem alfabética.
	//  - type: Os resultados são classificados por extensões de arquivo, em ordem alfabética.
	//  - modified: Os resultados são classificados pela data da última modificação do arquivo, em ordem descendente.
	//  - countDescending: Os resultados são classificados por contagem por arquivo, em ordem descendente.
	//  - countAscending: Os resultados são classificados por contagem por arquivo, em ordem ascendente.
	"search.sortOrder": "default",

	// Controla o uso de arquivos globais `.gitignore` e `.ignore` ao pesquisar por arquivos. Requer que ` search.useIgnoreFiles ` seja habilitado.
	"search.useGlobalIgnoreFiles": false,

	// Controla se os arquivos `.gitignore` e `.ignore` devem ser usados ao pesquisar arquivos.
	"search.useIgnoreFiles": true,

	// Controla se os arquivos `.gitignore` e `.ignore` devem ser utilizados nos diretórios pai ao procurar por arquivos. Exige que `search.useIgnoreFiles` esteja habilitado.
	"search.useParentIgnoreFiles": false,

	// Preterido. O PCRE2 será usado automaticamente ao usar os recursos regex que só têm suporte do PCRE2.
	// Se o mecanismo de regex do PCRE2 deve ser usado na pesquisa de texto. Isso permite o uso de alguns recursos de regex avançados, como referências inversas e de lookahead. No entanto, nem todos os recursos PCRE2 são compatíveis, somente recursos compatíveis com o JavaScript.
	"search.usePCRE2": false,

	// Controla se é necessário abrir a Visualização de Substituição ao selecionar ou substituir uma correspondência.
	"search.useReplacePreview": true,

	// Preterido. Considere "search.usePCRE2" para obter suporte do recurso regex avançado.
	// Essa configuração foi preterida e agora retorna ao "search.usePCRE2".
	"search.useRipgrep": true,

	// Esta configuração foi preterida. Use 'update.mode'.
	// Configure o recebimento de atualizações automáticas. Exige uma reinicialização após a alteração. As atualizações são obtidas de um serviço online da Microsoft.
	"update.channel": "default",

	// Habilitar o download e a instalação de novas versões do VS Code em segundo plano no Windows.
	"update.enableWindowsBackgroundUpdates": true,

	// Configure o recebimento de atualizações automáticas. Exige uma reinicialização após a alteração. As atualizações são obtidas de um serviço online da Microsoft.
	//  - none: Desabilitar atualizações.
	//  - manual: Desabilitar as verificações automáticas de atualização em segundo plano. As atualizações estarão disponíveis se você verificar as atualizações manualmente.
	//  - start: Verificar se há atualizações somente na inicialização. Desabilitar as verificações automáticas de atualização em segundo plano.
	//  - default: Habilitar verificações de atualização automática. O código verificará se há atualizações automaticamente e periodicamente.
	"update.mode": "default",

	// Mostrar Notas sobre a Versão após uma atualização. As Notas sobre a Versão são obtidas de um serviço online da Microsoft.
	"update.showReleaseNotes": true,

	// A configuração de proxy a ser usada. Se não estiver definida, será herdada das variáveis de ambiente `http_proxy` e `https_proxy`.
	"http.proxy": "",

	// O valor a ser enviado como o cabeçalho `Proxy-Authorization` para cada solicitação de rede.
	"http.proxyAuthorization": null,

	// Controla se o certificado do servidor proxy deve ser verificado na lista de ACs fornecidas.
	"http.proxyStrictSSL": true,

	// Usar o suporte a proxy para extensões.
	//  - off: Desabilitar o suporte a proxy para extensões.
	//  - on: Habilitar o suporte a proxy para extensões.
	//  - fallback: Habilita o suporte ao proxy para extensões, retorna para as opções de solicitação quando nenhum proxy for encontrado.
	//  - override: Habilitar o suporte a proxy para extensões, substituir opções de solicitação.
	"http.proxySupport": "override",

	// Controla se os certificados de AC devem ser carregados do SO. (No Windows e no macOS, é necessário recarregar a janela depois de desativar esta opção.)
	"http.systemCertificates": true,

	// Esta configuração foi preterida em favor de 'comments.openView'.
	// Controla quando o painel de comentários deve ser aberto.
	"comments.openPanel": "openOnSessionStartWithComments",

	// Controla quando o painel de comentários deve ser aberto.
	//  - never: A exibição de comentários nunca será aberta.
	//  - file: A exibição de comentários será aberta quando um arquivo com comentários estiver ativo.
	//  - firstFile: Se a exibição de comentários ainda não tiver sido aberta durante esta sessão, ela será aberta pela primeira vez durante uma sessão em que um arquivo com comentários estiver ativo.
	"comments.openView": "firstFile",

	// Determina se o tempo relativo será usado nos carimbos de data/hora de comentários (por exemplo, '1 dia atrás').
	"comments.useRelativeTime": true,

	// Permitir a configuração de pontos de interrupção em qualquer arquivo.
	"debug.allowBreakpointsEverywhere": false,

	// Mostrar automaticamente valores para variáveis que são resolvidas lentamente pelo depurador, como getters.
	"debug.autoExpandLazyVariables": false,

	// Controla se é necessário confirmar quando a janela fecha se houver sessões de depuração ativas.
	//  - never: Nunca confirmar.
	//  - always: Sempre confirmar se há sessões de depuração.
	"debug.confirmOnExit": "never",

	// Controla se as sugestões devem ser aceitas ao entrar no console de depuração. enter também é usado para avaliar o que quer que seja digitado no console de depuração.
	"debug.console.acceptSuggestionOnEnter": "off",

	// Controla se o console de depuração deve ser fechado automaticamente quando a sessão de depuração termina.
	"debug.console.closeOnEnd": false,

	// Controla se o console de depuração deve recolher as linhas idênticas e mostrar um número de ocorrências com um selo.
	"debug.console.collapseIdenticalLines": true,

	// Controla a família de fontes no console de depuração.
	"debug.console.fontFamily": "default",

	// Controla o tamanho da fonte em pixels no console de depuração.
	"debug.console.fontSize": 14,

	// Controla se o console de depuração deve sugerir entradas digitadas anteriormente.
	"debug.console.historySuggestions": true,

	// Controla a altura da linha em pixels no console de depuração. Use 0 para computar a altura da linha do tamanho da fonte.
	"debug.console.lineHeight": 0,

	// Controla se as linhas devem ser quebradas no console de depuração.
	"debug.console.wordWrap": true,

	// Mostrar Código-Fonte no Modo de Exibição de Desmontagem.
	"debug.disassemblyView.showSourceCode": true,

	// Controla se o editor deve estar focado quando o depurador for interrompido.
	"debug.focusEditorOnBreak": true,

	// Controla se a janela do workbench deve ser com foco quando o depurador é interrompido.
	"debug.focusWindowOnBreak": true,

	// Mostrar valores de variáveis embutidos no editor durante a depuração.
	//  - on: Sempre mostrar os valores de variáveis embutidos no editor durante a depuração.
	//  - off: Nunca mostrar os valores de variáveis embutidos no editor durante a depuração.
	//  - auto: Mostrar os valores de variáveis embutidos no editor durante a depuração quando a linguagem dá suporte para locais de valor embutido.
	"debug.inlineValues": "auto",

	// Controla quando o console de depuração interno deve ser aberto.
	"debug.internalConsoleOptions": "openOnFirstSessionStart",

	// Controla o que fazer quando forem encontrados erros após a execução de um preLaunchTask.
	//  - debugAnyway: Ignorar erros de tarefa e iniciar a depuração.
	//  - showErrors: Mostrar o modo de exibição Problemas e não iniciar a depuração.
	//  - prompt: Solicitar ao usuário.
	//  - abort: Cancelar depuração.
	"debug.onTaskErrors": "prompt",

	// Controla quando o modo de exibição de depuração deve ser aberto.
	"debug.openDebug": "openOnDebugBreak",

	// Abrir automaticamente a exibição do explorador no final de uma sessão de depuração.
	"debug.openExplorerOnEnd": false,

	// Controla quais editores devem ser salvos antes do início de uma sessão de depuração.
	//  - allEditorsInActiveGroup: Salvar todos os editores no grupo ativo antes de iniciar uma sessão de depuração.
	//  - nonUntitledEditorsInActiveGroup: Salvar todos os editores no grupo ativo, exceto os sem título, antes de iniciar uma sessão de depuração.
	//  - none: Não salvar nenhum editor antes de iniciar uma sessão de depuração.
	"debug.saveBeforeStart": "allEditorsInActiveGroup",

	// Controla se os pontos de interrupção devem ser mostrados na régua de visão geral.
	"debug.showBreakpointsInOverviewRuler": false,

	// Controla se as decorações candidatas de pontos de interrupção embutidas devem ser mostradas no editor durante a depuração.
	"debug.showInlineBreakpointCandidates": true,

	// Controla quando a barra de status de depuração deve estar visível.
	//  - never: Nunca mostrar a depuração na barra de status
	//  - always: Sempre mostrar a depuração na barra de status
	//  - onFirstSessionStart: Mostrar depuração na barra de status somente após o início da depuração pela primeira vez
	"debug.showInStatusBar": "onFirstSessionStart",

	// Controla se as subsessões de depuração são mostradas na barra de ferramentas de depuração. Quando essa configuração é false, o comando de interrupção em uma subsessão também interromperá a sessão pai.
	"debug.showSubSessionsInToolBar": false,

	// Antes de iniciar uma nova sessão de depuração em um terminal integrado ou externo, limpe o terminal.
	"debug.terminal.clearBeforeReusing": false,

	// Controla a localização da barra de ferramentas de depuração. `floating` em todos os modos de exibição, `docked` no modo de exibição de depuração ou `hidden`.
	"debug.toolBarLocation": "floating",

	// Configuração de inicialização de depuração global. Deve ser usada como uma alternativa para 'launch.json' compartilhado entre workspaces.
	"launch": {
		"configurations": [],
		"compounds": []
	},

	// Habilitar/desabilitar o fechamento automático de marcas HTML.
	"html.autoClosingTags": true,

	// Habilitar/desabilitar a criação automática de aspas para atribuição de atributos HTML. O tipo de aspas pode ser configurado por '#html.completion.attributeDefaultValue#'.
	"html.autoCreateQuotes": true,

	// Controla o valor padrão dos atributos quando a conclusão é aceita.
	//  - doublequotes: O valor do atributo é definido como "".
	//  - singlequotes: O valor do atributo é definido como ''.
	//  - empty: O valor do atributo não está definido.
	"html.completion.attributeDefaultValue": "doublequotes",

	// Uma lista de caminhos de arquivo relativos apontando para arquivos JSON após o [custom data format](https://github.com/microsoft/vscode-html-languageservice/blob/master/docs/customData.md).
	// 
	// O VS Code carrega dados personalizados na inicialização para aprimorar o suporte a HTML para as marcas HTML personalizadas, atributos e valores de atributo que você especifica nos arquivos JSON.
	// 
	// Os caminhos do arquivo são relativos ao espaço de trabalho e somente as configurações da pasta do espaço de trabalho são consideradas.
	"html.customData": [],

	// Lista de marcas, separadas por vírgulas, nas quais o conteúdo não deve ser reformatado. `null` usa a marca `pre` como padrão.
	"html.format.contentUnformatted": "pre,code,textarea",

	// Habilitar/desabilitar o formatador HTML padrão.
	"html.format.enable": true,

	// Lista de marcas, separadas por vírgulas, que devem ter uma nova linha extra antes delas. `null` usa `"head, body, /html"` como padrão.
	"html.format.extraLiners": "head, body, /html",

	// Formatar e recuar `{{#foo}}` e `{{/foo}}`.
	"html.format.indentHandlebars": false,

	// Recuar as seções `<head>` e `<body>`.
	"html.format.indentInnerHtml": false,

	// Número máximo de quebras de linha a serem preservadas em uma parte. Use `null` para ilimitado.
	"html.format.maxPreserveNewLines": null,

	// Controla se quebras de linha existentes antes de elementos devem ser preservadas. Só funciona antes de elementos, não dentro de marcas ou para texto.
	"html.format.preserveNewLines": true,

	// Honrar as marcas de linguagem de modelagem django, erb, handlebars e php.
	"html.format.templating": false,

	// Lista de marcas, separadas por vírgulas, que não devem ser reformatadas. `null` usa como padrão todas as marcas listadas em https://www.w3.org/TR/html5/dom.html#phrasing-content.
	"html.format.unformatted": "wbr",

	// Manter o conteúdo de texto junto entre esta cadeia de caracteres.
	"html.format.unformattedContentDelimiter": "",

	// Quebrar linha dos atributos.
	//  - auto: Quebrar linha dos atributos somente quando o comprimento da linha for excedido.
	//  - force: Quebrar linha de todos os atributos, exceto do primeiro.
	//  - force-aligned: Quebrar linha de todos os atributos, exceto do primeiro, e manter alinhado.
	//  - force-expand-multiline: Quebrar linha de todos os atributos.
	//  - aligned-multiple: Quebrar linha quando o comprimento dela for excedido, alinhar os atributos verticalmente.
	//  - preserve: Preservar a disposição dos atributos.
	//  - preserve-aligned: Preservar quebra de linha dos atributos, mas alinhar.
	"html.format.wrapAttributes": "auto",

	// Recue atributos encapsulados para depois de N caracteres. Use `null` para usar o tamanho de recuo padrão. Ignorado se `html.format.wrapAttributes` estiver definido como 'aligned'.
	"html.format.wrapAttributesIndentSize": null,

	// Quantidade máxima de caracteres por linha (0 = desabilitar).
	"html.format.wrapLineLength": 120,

	// Mostrar a marca e a documentação de atributo durante a focalização.
	"html.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização.
	"html.hover.references": true,

	// Preterido e substituído por `editor.linkedEditing`
	// Habilitar/desabilitar cursor de espelhamento na marca HTML correspondente.
	"html.mirrorCursorOnMatchingTag": false,

	// Controla se o suporte à linguagem HTML interna sugere marcas, propriedades e valores do HTML5.
	"html.suggest.html5": true,

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem HTML.
	"html.trace.server": "off",

	// Controla se o suporte à linguagem HTML interna valida scripts incorporados.
	"html.validate.scripts": true,

	// Controla se o suporte à linguagem HTML interna valida estilos incorporados.
	"html.validate.styles": true,

	// A configuração `json.colorDecorators.enable` foi preterida em favor de `editor.colorDecorators`.
	// Habilita ou desabilita os decoradores de cor
	"json.colorDecorators.enable": true,

	// Habilitar/desabilitar o formatador JSON padrão
	"json.format.enable": true,

	// Mantenha todas as novas linhas existentes ao formatar.
	"json.format.keepLines": false,

	// O número máximo computado de símbolos de estrutura de tópicos e regiões de dobragem (limitados por motivos de desempenho).
	"json.maxItemsComputed": 5000,

	// Quando habilitados, os esquemas JSON podem ser buscados em locais http e https.
	"json.schemaDownload.enable": true,

	// Associar os esquemas aos arquivos JSON no projeto atual.
	"json.schemas": [],

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem JSON.
	"json.trace.server": "off",

	// Habilitar/desabilitar a validação JSON.
	"json.validate.enable": true,

	// Habilitar/desabilitar soltando no Markdown editor para inserir o deslocamento. Requer a habilitação de `editor.dropIntoEditor.enabled`.
	"markdown.editor.drop.enabled": true,

	// Ativar/desativar a colagem de arquivos em um editor Markdown insere links Markdown. Requer habilitação `editor.experimental.pasteActions.enabled`.
	"markdown.experimental.editor.pasteLinks.enabled": true,

	// Habilitar/desabilitar todos os relatórios de erros em arquivos Markdown.
	"markdown.experimental.validate.enabled": false,

	// Validar links para outros arquivos em arquivos Markdown, por exemplo, `[link](/path/to/file.md)`. Isso verifica se os arquivos de destino existem. Requer a habilitação de `markdown.experimental.validate.enabled`.
	"markdown.experimental.validate.fileLinks.enabled": "warning",

	// Valide a parte do fragmento de links para cabeçalhos em outros arquivos em arquivos Markdown, por exemplo `[link](/path/to/file.md#header)`. Herda o valor de configuração de `markdown.experimental.validate.fragmentLinks.enabled` por padrão.
	"markdown.experimental.validate.fileLinks.markdownFragmentLinks": "ignore",

	// Valide links de fragmentos para cabeçalhos no arquivo Markdown atual, por exemplo `[link](#header)`. Requer ativação `markdown.experimental.validate.enabled`.
	"markdown.experimental.validate.fragmentLinks.enabled": "warning",

	// Configure links que não devem ser validados. Por exemplo, `/about` não validaria o link `[about](/about)`, enquanto o glob `/assets/**/*.svg` permitiria que você pule a validação de qualquer link para arquivos `.svg` em o diretório `assets`.
	"markdown.experimental.validate.ignoreLinks": [],

	// Validar links de referência em arquivos Markdown, por exemplo, `[link][ref]`.  Requer a habilitação de `markdown.experimental.validate.enabled`.
	"markdown.experimental.validate.referenceLinks.enabled": "warning",

	// Controla se os links nos arquivos Markdown devem ser abertos.
	//  - currentGroup: Abrir links no grupo do editor ativo.
	//  - beside: Abrir links ao lado do editor ativo.
	"markdown.links.openLocation": "currentGroup",

	// Define como as quebras de linha são renderizadas na visualização de Markdown. A definição desta opção como 'true' cria um <br> para novas linhas dentro de parágrafos.
	"markdown.preview.breaks": false,

	// Clicar duas vezes na visualização de Markdown para mudar para o editor.
	"markdown.preview.doubleClickToSwitchToEditor": true,

	// Controla a família de fontes usada na visualização de Markdown.
	"markdown.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",

	// Controla o tamanho da fonte em pixels usado na visualização de Markdown.
	"markdown.preview.fontSize": 14,

	// Controla a altura da linha usada na visualização de Markdown. Este número é relativo ao tamanho da fonte.
	"markdown.preview.lineHeight": 1.6,

	// Habilitar ou desabilitar a conversão de texto do tipo URL em links na visualização de Markdown.
	"markdown.preview.linkify": true,

	// Marcar a seleção do editor atual na visualização de Markdown.
	"markdown.preview.markEditorSelection": true,

	// Controla como os links para outros arquivos Markdown na visualização de Markdown devem ser abertos.
	//  - inPreview: Tentar abrir links na visualização de Markdown.
	//  - inEditor: Tentar abrir links no editor.
	"markdown.preview.openMarkdownLinks": "inPreview",

	// Quando uma visualização de Markdown for rolada, atualizar a exibição do editor.
	"markdown.preview.scrollEditorWithPreview": true,

	// Quando um Markdown editor for rolado, atualizar a exibição da visualização.
	"markdown.preview.scrollPreviewWithEditor": true,

	// Habilitar ou desabilitar algumas substituições com neutralidade de linguagem e o aperfeiçoamento de citações na visualização de Markdown.
	"markdown.preview.typographer": false,

	// Uma lista de URLs ou caminhos locais para folhas de estilos CSS que serão usados na visualização do Markdown. Os caminhos relativos são interpretados em relação à pasta aberta no Explorer. Se não houver pastas abertas, eles serão interpretados em relação à localização do arquivo Markdown. Todos os '\' precisam ser escritos como '\\'.
	"markdown.styles": [],

	// Habilitar/desabilitar sugestões de caminho para links de markdown
	"markdown.suggest.paths.enabled": true,

	// Habilitar o registro em log da depuração para a extensão de Markdown.
	"markdown.trace.extension": "off",

	// Traça a comunicação entre o VS Code e o servidor de linguagem Markdown.
	"markdown.trace.server": "off",

	// Enable debug logging for the markdown extension.
	"markdown.trace": "verbose",

	// Sets how line-breaks are rendered in the markdown preview. Setting it to 'true' creates a <br> for newlines inside paragraphs.
	"preview.preview.breaks": false,

	// Double click in the markdown preview to switch to the editor.
	"preview.preview.doubleClickToSwitchToEditor": true,

	// Controls the font family used in the markdown preview.
	"preview.preview.fontFamily": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', system-ui, 'Ubuntu', 'Droid Sans', sans-serif",

	// Controls the font size in pixels used in the markdown preview.
	"preview.preview.fontSize": 14,

	// Controls the line height used in the markdown preview. This number is relative to the font size.
	"preview.preview.lineHeight": 1.6,

	// Enable or disable conversion of URL-like text to links in the markdown preview.
	"preview.preview.linkify": true,

	// Mark the current editor selection in the markdown preview.
	"preview.preview.markEditorSelection": true,

	// Controls how links to other markdown files in the markdown preview should be opened.
	//  - inPreview: Try to open links in the markdown preview
	//  - inEditor: Try to open links in the editor
	"preview.preview.openMarkdownLinks": "inPreview",

	// When a markdown preview is scrolled, update the view of the editor.
	"preview.preview.scrollEditorWithPreview": true,

	// When a markdown editor is scrolled, update the view of the preview.
	"preview.preview.scrollPreviewWithEditor": true,

	// Controla se as sugestões de linguagem do PHP internas estão habilitadas. O suporte sugere variáveis e globais do PHP.
	"php.suggest.basic": true,

	// Habilitar/desabilitar a validação interna do PHP.
	"php.validate.enable": true,

	// Aponta para o executável do PHP.
	"php.validate.executablePath": null,

	// Se o linter é executado ao salvar ou no tipo.
	"php.validate.run": "onSave",

	// Habilitar/desabilitar o fechamento automático de marcas JSX.
	"javascript.autoClosingTags": true,

	// Habilitar/desabilitar o formatador padrão do JavaScript.
	"javascript.format.enable": true,

	// Define o tratamento de espaço após um delimitador de vírgula.
	"javascript.format.insertSpaceAfterCommaDelimiter": true,

	// Define o tratamento de espaço após a palavra-chave do construtor.
	"javascript.format.insertSpaceAfterConstructor": false,

	// Define o tratamento de espaço após a palavra-chave de função para funções anônimas.
	"javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.
	"javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Define o tratamento de espaço após abrir e antes de fechar chaves vazias.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

	// Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

	// Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.
	"javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

	// Define o tratamento de espaço após um ponto e vírgula em uma instrução for.
	"javascript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Define o tratamento de espaço após um operador binário.
	"javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Define o tratamento de espaço antes dos parênteses do argumento de função.
	"javascript.format.insertSpaceBeforeFunctionParenthesis": false,

	// Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.
	"javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Define se uma chave de abertura é colocada em uma nova linha para funções.
	"javascript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Define o processamento de ponto e vírgula opcional. Exige o uso do TypeScript 3.7 ou mais recente no workspace.
	//  - ignore: Não inserir nem remover pontos e vírgulas.
	//  - insert: Inserir pontos e vírgulas nos finais da instrução.
	//  - remove: Remover sinais de ponto e vírgula desnecessários.
	"javascript.format.semicolons": "ignore",

	// Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.checkJs`.
	// Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"javascript.implicitProjectConfig.checkJs": false,

	// Esta configuração foi preterida e substituída por `js/ts.implicitProjectConfig.experimentalDecorators`.
	// Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"javascript.implicitProjectConfig.experimentalDecorators": false,

	// Enable/disable inlay hints for member values in enum declarations:
	// ```typescript
	// 
	// enum MyValue {
	// 	A /* = 0 */;
	// 	B /* = 1 */;
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.enumMemberValues.enabled": false,

	// Enable/disable inlay hints for implicit return types on function signatures:
	// ```typescript
	// 
	// function foo() /* :number */ {
	// 	return Date.now();
	// } 
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.functionLikeReturnTypes.enabled": false,

	// Enable/disable inlay hints for parameter names:
	// ```typescript
	// 
	// parseInt(/* str: */ '123', /* radix: */ 8)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	//  - none: Desabilite as dicas de nome de parâmetro.
	//  - literals: Habilite dicas de nome de parâmetro apenas para argumentos literais.
	//  - all: Habilite dicas de nome de parâmetro para argumentos literais e não literais.
	"javascript.inlayHints.parameterNames.enabled": "none",

	// Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.
	"javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

	// Enable/disable inlay hints for implicit parameter types:
	// ```typescript
	// 
	// el.addEventListener('click', e /* :MouseEvent */ => ...)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.parameterTypes.enabled": false,

	// Enable/disable inlay hints for implicit types on property declarations:
	// ```typescript
	// 
	// class Foo {
	// 	prop /* :number */ = Date.now();
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.propertyDeclarationTypes.enabled": false,

	// Enable/disable inlay hints for implicit variable types:
	// ```typescript
	// 
	// const foo /* :number */ = Date.now();
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"javascript.inlayHints.variableTypes.enabled": false,

	// Suprimir dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo. Requer o uso do TypeScript 4.8+ no workspace.
	"javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

	// Especifique padrões glob de arquivos a serem excluídos das importações automáticas. Requer o uso do TypeScript 4.8 ou mais recente no espaço de trabalho.
	"javascript.preferences.autoImportFileExcludePatterns": [],

	// Estilo de caminho preferencial para importações automáticas.
	//  - shortest: Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.
	//  - relative: Prefere um caminho relativo para o local do arquivo importado.
	//  - non-relative: Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.
	//  - project-relative: Prefere uma importação não relativa somente quando o caminho da importação relativa sai do pacote ou do diretório do projeto. Exige o uso do TypeScript 4.2 + no workspace.
	"javascript.preferences.importModuleSpecifier": "shortest",

	// Término do caminho preferencial para importações automáticas. Exige o uso do TypeScript 4.5+ no workspace.
	//  - auto: Usar as configurações do projeto para selecionar um padrão.
	//  - minimal: Encurtar `./component/index.js` para `./component`.
	//  - index: Encurtar `./component/index.js` para `./component/index`.
	//  - js: Não encurtar as terminações de caminho. Incluir a extensão `.js`.
	"javascript.preferences.importModuleSpecifierEnding": "auto",

	// Estilo preferido para conclusões de atributos JSX.
	//  - auto: Insira `={}` ou `=""` após os nomes dos atributos com base no tipo de prop. Consulte `javascript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.
	//  - braces: Insira `= {} `após os nomes dos atributos.
	//  - none: Insira apenas nomes de atributos.
	"javascript.preferences.jsxAttributeCompletionStyle": "auto",

	// Estilo de aspas preferenciais a ser usado para correções rápidas.
	//  - auto: Inferir o tipo de cotação do código existente
	//  - single: Sempre usar aspas simples: `'`
	//  - double: Sempre usar aspas duplas: `"`
	"javascript.preferences.quoteStyle": "auto",

	// A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'
	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"javascript.preferences.renameShorthandProperties": true,

	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"javascript.preferences.useAliasesForRenames": true,

	// Habilitar/desabilitar CodeLens de referências em arquivos JavaScript.
	"javascript.referencesCodeLens.enabled": false,

	// Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos JavaScript.
	"javascript.referencesCodeLens.showOnAllFunctions": false,

	// Habilitar/desabilitar sugestões de importação automática.
	"javascript.suggest.autoImports": true,

	// Habilitar/desabilitar preenchimentos de snippet para membros de classe. Requer o uso do TypeScript 4.5+ no workspace
	"javascript.suggest.classMemberSnippets.enabled": true,

	// Concluir funções com assinaturas de parâmetro.
	"javascript.suggest.completeFunctionCalls": false,

	// Habilitar/desabilitar sugestão para concluir comentários JSDoc.
	"javascript.suggest.completeJSDocs": true,

	// Habilitar/desabilitar sugestões de preenchimento automático.
	"javascript.suggest.enabled": true,

	// Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Exige TS 3.7 ou posterior e as verificações de nulo estrito devem ser habilitadas.
	"javascript.suggest.includeAutomaticOptionalChainCompletions": true,

	// Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial. Exige o uso do TypeScript 4.3 ou superior no workspace.
	"javascript.suggest.includeCompletionsForImportStatements": true,

	// Habilitar/desabilitar a geração de anotações `@return` nos modelos JSDoc. Exige o uso do TypeScript 4.2 ou superior no workspace.
	"javascript.suggest.jsdoc.generateReturns": true,

	// Habilitar/desabilitar incluindo nomes exclusivos do arquivo em sugestões do JavaScript. Observe que as sugestões de nome sempre são desabilitadas no código do JavaScript que é verificado semanticamente usando `@ts-check` ou `checkJs`.
	"javascript.suggest.names": true,

	// Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.
	"javascript.suggest.paths": true,

	// Habilitar/desabilitar o diagnóstico de sugestão para arquivos JavaScript no editor.
	"javascript.suggestionActions.enabled": true,

	// Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.
	//  - prompt: Avisar em cada renomeação.
	//  - always: Sempre atualizar caminhos automaticamente.
	//  - never: Nunca renomear caminhos e não avisar.
	"javascript.updateImportsOnFileMove.enabled": "prompt",

	// Habilitar/desabilitar a validação do JavaScript.
	"javascript.validate.enable": true,

	// Habilitar/desabilitar a verificação semântica de arquivos JavaScript. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.checkJs": false,

	// Habilitar/desabilitar os `experimentalDecorators` em arquivos JavaScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.experimentalDecorators": false,

	// Define o sistema do módulo do programa. Ver mais: https://www.typescriptlang.org/tsconfig#module.
	"js/ts.implicitProjectConfig.module": "ESNext",

	// Habilitar/desabilitar os [tipos de função estritos](https://www.typescriptlang.org/tsconfig#strictFunctionTypes) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.strictFunctionTypes": true,

	// Habilitar/desabilitar as [verificações nulas estritas](https://www.typescriptlang.org/tsconfig#strictNullChecks) em arquivos JavaScript e TypeScript que não fazem parte de um projeto. Os arquivos `jsconfig.json` ou `tsconfig.json` existentes substituem esta configuração.
	"js/ts.implicitProjectConfig.strictNullChecks": true,

	// Defina a versão da linguagem JavaScript de destino para JavaScript emitido e inclua as declarações de biblioteca. Veja mais: https://www.typescriptlang.org/tsconfig#target.
	"js/ts.implicitProjectConfig.target": "ES2020",

	// Habilitar/desabilitar o fechamento automático de marcas JSX.
	"typescript.autoClosingTags": true,

	// Check if npm is installed for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
	"typescript.check.npmIsInstalled": true,

	// Desabilita [Aquisição Automática de Tipos](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition). A aquisição automática de tipos busca pacotes `@types` do NPM para melhorar o IntelliSense para bibliotecas externas.
	"typescript.disableAutomaticTypeAcquisition": false,

	// Permite solicitar que os usuários usem a versão do TypeScript configurada no workspace para IntelliSense.
	"typescript.enablePromptUseWorkspaceTsdk": false,

	// Habilitar/desabilitar o formatador do TypeScript padrão.
	"typescript.format.enable": true,

	// Define o tratamento de espaço após um delimitador de vírgula.
	"typescript.format.insertSpaceAfterCommaDelimiter": true,

	// Define o tratamento de espaço após a palavra-chave do construtor.
	"typescript.format.insertSpaceAfterConstructor": false,

	// Define o tratamento de espaço após a palavra-chave de função para funções anônimas.
	"typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

	// Define o tratamento de espaço após palavras-chave em uma instrução de fluxo de controle.
	"typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

	// Define o tratamento de espaço após abrir e antes de fechar chaves vazias.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": true,

	// Define o tratamento de espaço após a abertura e antes do fechamento de chaves da expressão JSX.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves não vazias.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": true,

	// Define o tratamento de espaço após abrir e antes de fechar colchetes não vazios.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

	// Define o tratamento de espaço após abrir e antes de fechar parênteses não vazios.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

	// Define o tratamento de espaço após abrir e antes de fechar chaves de cadeia de caracteres do modelo.
	"typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": false,

	// Define o tratamento de espaço após um ponto e vírgula em uma instrução for.
	"typescript.format.insertSpaceAfterSemicolonInForStatements": true,

	// Define o tratamento de espaços após declarações de tipo no TypeScript.
	"typescript.format.insertSpaceAfterTypeAssertion": false,

	// Define o tratamento de espaço após um operador binário.
	"typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

	// Define o tratamento de espaço antes dos parênteses do argumento de função.
	"typescript.format.insertSpaceBeforeFunctionParenthesis": false,

	// Define se uma chave de abertura é colocada em uma nova linha para blocos de controle.
	"typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

	// Define se uma chave de abertura é colocada em uma nova linha para funções.
	"typescript.format.placeOpenBraceOnNewLineForFunctions": false,

	// Define o processamento de ponto e vírgula opcional. Exige o uso do TypeScript 3.7 ou mais recente no workspace.
	//  - ignore: Não inserir nem remover pontos e vírgulas.
	//  - insert: Inserir pontos e vírgulas nos finais da instrução.
	//  - remove: Remover sinais de ponto e vírgula desnecessários.
	"typescript.format.semicolons": "ignore",

	// Habilitar/desabilitar CodeLens de implementações. Este CodeLens mostra os implementadores de uma interface.
	"typescript.implementationsCodeLens.enabled": false,

	// Enable/disable inlay hints for member values in enum declarations:
	// ```typescript
	// 
	// enum MyValue {
	// 	A /* = 0 */;
	// 	B /* = 1 */;
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.enumMemberValues.enabled": false,

	// Enable/disable inlay hints for implicit return types on function signatures:
	// ```typescript
	// 
	// function foo() /* :number */ {
	// 	return Date.now();
	// } 
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.functionLikeReturnTypes.enabled": false,

	// Enable/disable inlay hints for parameter names:
	// ```typescript
	// 
	// parseInt(/* str: */ '123', /* radix: */ 8)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	//  - none: Desabilite as dicas de nome de parâmetro.
	//  - literals: Habilite dicas de nome de parâmetro apenas para argumentos literais.
	//  - all: Habilite dicas de nome de parâmetro para argumentos literais e não literais.
	"typescript.inlayHints.parameterNames.enabled": "none",

	// Suprime dicas de nome de parâmetro em argumentos cujo texto é idêntico ao nome do parâmetro.
	"typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,

	// Enable/disable inlay hints for implicit parameter types:
	// ```typescript
	// 
	// el.addEventListener('click', e /* :MouseEvent */ => ...)
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.parameterTypes.enabled": false,

	// Enable/disable inlay hints for implicit types on property declarations:
	// ```typescript
	// 
	// class Foo {
	// 	prop /* :number */ = Date.now();
	// }
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.propertyDeclarationTypes.enabled": false,

	// Enable/disable inlay hints for implicit variable types:
	// ```typescript
	// 
	// const foo /* :number */ = Date.now();
	//  
	// ```
	// Requires using TypeScript 4.4+ in the workspace.
	"typescript.inlayHints.variableTypes.enabled": false,

	// Suprimir dicas de tipo em variáveis cujo nome é idêntico ao nome do tipo. Requer o uso do TypeScript 4.8+ no workspace.
	"typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": true,

	// Define a localidade usada para relatar erros de JavaScript e TypeScript. O padrão é usar a localidade do VS Code.
	"typescript.locale": "auto",

	// Specifies the path to the npm executable used for [Automatic Type Acquisition](https://code.visualstudio.com/docs/nodejs/working-with-javascript#_typings-and-automatic-type-acquisition).
	"typescript.npm": "",

	// Especifique padrões glob de arquivos a serem excluídos das importações automáticas. Requer o uso do TypeScript 4.8 ou mais recente no espaço de trabalho.
	"typescript.preferences.autoImportFileExcludePatterns": [],

	// Estilo de caminho preferencial para importações automáticas.
	//  - shortest: Prefere uma importação não relativa somente quando há uma disponível com menos segmentos de caminho do que uma importação relativa.
	//  - relative: Prefere um caminho relativo para o local do arquivo importado.
	//  - non-relative: Prefere uma importação não relativa com base na `baseUrl` ou nos `paths` configurados no `jsconfig.json`/`tsconfig.json`.
	//  - project-relative: Prefere uma importação não relativa somente quando o caminho da importação relativa sai do pacote ou do diretório do projeto. Exige o uso do TypeScript 4.2 + no workspace.
	"typescript.preferences.importModuleSpecifier": "shortest",

	// Término do caminho preferencial para importações automáticas. Exige o uso do TypeScript 4.5+ no workspace.
	//  - auto: Usar as configurações do projeto para selecionar um padrão.
	//  - minimal: Encurtar `./component/index.js` para `./component`.
	//  - index: Encurtar `./component/index.js` para `./component/index`.
	//  - js: Não encurtar as terminações de caminho. Incluir a extensão `.js`.
	"typescript.preferences.importModuleSpecifierEnding": "auto",

	// Habilitar/desabilitar a pesquisa de dependências `package.json` para importações automáticas disponíveis.
	//  - auto: Pesquisar dependências com base no impacto de desempenho estimado.
	//  - on: Sempre pesquisar dependências.
	//  - off: Nunca pesquisar dependências.
	"typescript.preferences.includePackageJsonAutoImports": "auto",

	// Estilo preferido para conclusões de atributos JSX.
	//  - auto: Insira `={}` ou `=""` após os nomes dos atributos com base no tipo de prop. Consulte `typescript.preferences.quoteStyle` para controlar o tipo de aspas usado para atributos de cadeia de caracteres.
	//  - braces: Insira `= {} `após os nomes dos atributos.
	//  - none: Insira apenas nomes de atributos.
	"typescript.preferences.jsxAttributeCompletionStyle": "auto",

	// Estilo de aspas preferenciais a ser usado para correções rápidas.
	//  - auto: Inferir o tipo de cotação do código existente
	//  - single: Sempre usar aspas simples: `'`
	//  - double: Sempre usar aspas duplas: `"`
	"typescript.preferences.quoteStyle": "auto",

	// A configuração 'typescript.preferences.renameShorthandProperties' foi preterida em favor de 'typescript.preferences.useAliasesForRenames'
	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"typescript.preferences.renameShorthandProperties": true,

	// Habilitar/desabilitar a introdução de aliases para propriedades de objeto abreviadas durante a renomeação. Exige o uso do TypeScript 3.4 ou mais recente no workspace.
	"typescript.preferences.useAliasesForRenames": true,

	// Habilitar/desabilitar CodeLens de referências em arquivos TypeScript.
	"typescript.referencesCodeLens.enabled": false,

	// Habilitar/desabilitar CodeLens de referências em todas as funções em arquivos TypeScript.
	"typescript.referencesCodeLens.showOnAllFunctions": false,

	// Relatar verificações de estilo como avisos.
	"typescript.reportStyleChecksAsWarnings": true,

	// Habilitar/desabilitar sugestões de importação automática.
	"typescript.suggest.autoImports": true,

	// Habilitar/desabilitar preenchimentos de snippet para membros de classe. Requer o uso do TypeScript 4.5+ no workspace
	"typescript.suggest.classMemberSnippets.enabled": true,

	// Concluir funções com assinaturas de parâmetro.
	"typescript.suggest.completeFunctionCalls": false,

	// Habilitar/desabilitar sugestão para concluir comentários JSDoc.
	"typescript.suggest.completeJSDocs": true,

	// Habilitar/desabilitar sugestões de preenchimento automático.
	"typescript.suggest.enabled": true,

	// Habilitar/desabilitar a exibição de conclusões sobre valores potencialmente indefinidos que inserem uma chamada de cadeia opcional. Exige TS 3.7 ou posterior e as verificações de nulo estrito devem ser habilitadas.
	"typescript.suggest.includeAutomaticOptionalChainCompletions": true,

	// Habilitar/desabilitar as conclusões do estilo de importação automática nas instruções de importação de tipo parcial. Exige o uso do TypeScript 4.3 ou superior no workspace.
	"typescript.suggest.includeCompletionsForImportStatements": true,

	// Habilitar/desabilitar as conclusões de snippet do Servidor TS. Exige o uso do TypeScript 4.3 ou superior no workspace.
	"typescript.suggest.includeCompletionsWithSnippetText": true,

	// Habilitar/desabilitar a geração de anotações `@return` nos modelos JSDoc. Exige o uso do TypeScript 4.2 ou superior no workspace.
	"typescript.suggest.jsdoc.generateReturns": true,

	// Habilitar/desabilitar preenchimentos de snippet para métodos em objetos literais. Requer o uso do TypeScript 4.7+ no workspace
	"typescript.suggest.objectLiteralMethodSnippets.enabled": true,

	// Habilitar/desabilitar sugestões para caminhos em instruções de importação e exigir chamadas.
	"typescript.suggest.paths": true,

	// Habilitar/desabilitar diagnóstico de sugestão para arquivos TypeScript no editor.
	"typescript.suggestionActions.enabled": true,

	// Habilitar/desabilitar pesquisas ocasionais que nos ajudam a melhorar o suporte a JavaScript e TypeScript do VS Code.
	"typescript.surveys.enabled": true,

	// Controla a detecção automática de tarefas tsc.
	//  - on: Criar tarefas de build e de inspeção.
	//  - off: Desabilitar este recurso.
	//  - build: Criar apenas tarefas de compilação de execução única.
	//  - watch: Criar apenas tarefas de compilação e inspeção.
	"typescript.tsc.autoDetect": "on",

	// Specifies the folder path to the tsserver and `lib*.d.ts` files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.
	// 
	// - When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.
	// - When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.
	// 
	// See the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.
	"typescript.tsdk": "",

	// Habilita o rastreamento do desempenho do servidor TS em um diretório. Esses arquivos de rastreamento podem ser usados para diagnosticar problemas de desempenho do Servidor TS. O log pode conter caminhos de arquivo, código-fonte e outras informações possivelmente confidenciais do projeto.
	"typescript.tsserver.enableTracing": false,

	// (Experimental) Habilita o relatório de erros amplo do projeto.
	"typescript.tsserver.experimental.enableProjectDiagnostics": false,

	// Habilita o registro em log do TS Server em um arquivo. Esse log pode ser usado para diagnosticar problemas do TS Server. O log pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
	"typescript.tsserver.log": "off",

	// A quantidade máxima de memória (em MB) a ser alocada para o processo do servidor do TypeScript.
	"typescript.tsserver.maxTsServerMemory": 3072,

	// Caminhos adicionais para descobrir os plugins do Serviço de Linguagem TypeScript.
	"typescript.tsserver.pluginPaths": [],

	// Habilita o rastreamento de mensagens enviadas para o TS Server. Esse rastreamento pode ser usado para diagnosticar problemas do TS Server. O rastreamento pode conter caminhos de arquivo, código-fonte e outras informações potencialmente confidenciais do seu projeto.
	"typescript.tsserver.trace": "off",

	// Essa configuração foi preterida e substituída por `typescript.tsserver.useSyntaxServer`.
	// Habilitar/desabilitar a geração de um servidor TypeScript separado que pode responder mais rapidamente às operações relacionadas à sintaxe, como calcular a dobragem ou computar os símbolos de documentos. Exige o uso de TypeScript 3.4.0 ou mais recente no workspace.
	"typescript.tsserver.useSeparateSyntaxServer": true,

	// Controla se TypeScript inicia um servidor dedicado para lidar mais rapidamente com as operações relacionadas à sintaxe, como o dobramento de código de computação.
	//  - always: Use um servidor de sintaxe mais leve para lidar com todas as operações do IntelliSense. Este servidor de sintaxe só pode fornecer IntelliSense para arquivos abertos.
	//  - never: Não use um servidor de sintaxe dedicado. Use um único servidor para lidar com todas as operações do IntelliSense.
	//  - auto: Gere um servidor completo e um servidor mais leve dedicado às operações de sintaxe. O servidor de sintaxe é usado para acelerar as operações de sintaxe e fornecer IntelliSense durante o carregamento de projetos.
	"typescript.tsserver.useSyntaxServer": "auto",

	// Configurar as estratégias de monitoramento que devem ser usadas para manter o controle de arquivos e diretórios. Exige o uso de TypeScript 3.8 ou posterior no workspace.
	"typescript.tsserver.watchOptions": {},

	// Habilitar/Desabilitar atualização automática de caminhos de importação ao renomear ou mover um arquivo no VS Code.
	//  - prompt: Avisar em cada renomeação.
	//  - always: Sempre atualizar caminhos automaticamente.
	//  - never: Nunca renomear caminhos e não avisar.
	"typescript.updateImportsOnFileMove.enabled": "prompt",

	// Habilitar/desabilitar a validação do TypeScript.
	"typescript.validate.enable": true,

	// Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).
	//  - allOpenProjects: Pesquisar todos os projetos abertos do JavaScript ou TypeScript para símbolos. Exige o uso do TypeScript 3.9 ou mais recente no workspace.
	//  - currentProject: Somente pesquisar símbolos no projeto JavaScript ou TypeScript atual.
	"typescript.workspaceSymbols.scope": "allOpenProjects",

	// Sempre revele o teste executado quando `testing.followRunningTest` estiver ativado. Se esta configuração estiver desativada, apenas os testes com falha serão revelados.
	"testing.alwaysRevealTestOnStateChange": false,

	// Configura quando a exibição de espiada de erros é aberta automaticamente.
	//  - failureAnywhere: Abrir a exibição automaticamente independentemente do local da falha.
	//  - failureInVisibleDocument: Abrir a exibição automaticamente quando um teste falhar em um documento visível.
	//  - never: Nunca abre automaticamente.
	"testing.automaticallyOpenPeekView": "failureInVisibleDocument",

	// Controla se a exibição de espiada será aberta automaticamente durante o modo de execução automática.
	"testing.automaticallyOpenPeekViewDuringAutoRun": false,

	// O tempo de espera, em milissegundos, depois que um teste é marcado como desatualizado até que uma nova execução seja iniciada.
	"testing.autoRun.delay": 1000,

	// Controla quais testes são executados automaticamente.
	//  - all: Executa automaticamente todos os testes detectados quando a execução automática é ativada. Executa novamente os testes individuais quando eles são alterados.
	//  - rerun: Executa novamente os testes individuais quando eles são alterados. Não executará automaticamente nenhum teste que ainda não tenha sido executado.
	"testing.autoRun.mode": "all",

	// Controla a ação a ser executada ao clicar com o botão esquerdo em uma decoração de teste na medianiz.
	//  - run: Execute o teste.
	//  - debug: Depure o teste.
	//  - contextMenu: Abra o menu de contexto para mais opções.
	"testing.defaultGutterClickAction": "run",

	// Controla se o teste em execução deve ser seguido na exibição do explorador de teste
	"testing.followRunningTest": true,

	// Controla se as decorações de teste são mostradas na calha do editor.
	"testing.gutterEnabled": true,

	// Controla quando a exibição de teste deve ser aberta.
	//  - neverOpen: Nunca abrir automaticamente o modo de exibição de teste
	//  - openOnTestStart: Abrir o modo de exibição de teste quando os testes forem iniciados
	//  - openOnTestFailure: Abrir a exibição de teste em qualquer falha de teste
	"testing.openTesting": "openOnTestStart",

	// Controle se todos os editores sujos foram salvos antes de executar um teste.
	"testing.saveBeforeTest": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"css.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"css.completion.triggerPropertyValueCompletion": true,

	// A list of relative file paths pointing to JSON files following the [custom data format](https://github.com/microsoft/vscode-css-languageservice/blob/master/docs/customData.md).
	// 
	// VS Code loads custom data on startup to enhance its CSS support for the custom CSS properties, at directives, pseudo classes and pseudo elements you specify in the JSON files.
	// 
	// The file paths are relative to workspace and only workspace folder settings are considered.
	"css.customData": [],

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"css.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador CSS padrão.
	"css.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `css.format.preserveNewLines` estiver habilitado.
	"css.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"css.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"css.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"css.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"css.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de marca e de atributo durante a focalização do CSS.
	"css.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do CSS.
	"css.hover.references": true,

	// Número de parâmetros inválido.
	"css.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"css.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"css.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"css.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"css.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"css.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"css.lint.fontFaceProperties": "warning",

	// As cores hexa precisam conter três ou seis números hexa.
	"css.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"css.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"css.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"css.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"css.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"css.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"css.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"css.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"css.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"css.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"css.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"css.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"css.lint.zeroUnits": "ignore",

	// Rastreia a comunicação entre o VS Code e o servidor de linguagem CSS.
	"css.trace.server": "off",

	// Habilita ou desabilita todas as validações.
	"css.validate": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"less.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"less.completion.triggerPropertyValueCompletion": true,

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"less.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador LESS padrão.
	"less.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `less.format.preserveNewLines` estiver habilitado.
	"less.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"less.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"less.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"less.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"less.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de marca e de atributo durante a focalização do LESS.
	"less.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do LESS.
	"less.hover.references": true,

	// Número de parâmetros inválido.
	"less.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"less.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"less.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"less.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"less.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"less.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"less.lint.fontFaceProperties": "warning",

	// As cores hexa precisam conter três ou seis números hexa.
	"less.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"less.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"less.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"less.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"less.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"less.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"less.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"less.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"less.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"less.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"less.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"less.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"less.lint.zeroUnits": "ignore",

	// Habilita ou desabilita todas as validações.
	"less.validate": true,

	// Inserir ponto e vírgula no fim da linha ao preencher as propriedades de CSS.
	"scss.completion.completePropertyWithSemicolon": true,

	// Por padrão, o VS Code dispara a conclusão do valor da propriedade após a seleção de uma propriedade CSS. Use esta configuração para desabilitar esse comportamento.
	"scss.completion.triggerPropertyValueCompletion": true,

	// Coloque as chaves na mesma linha que as regras (`collapse`) ou coloque as chaves na própria linha (`expand`).
	"scss.format.braceStyle": "collapse",

	// Habilitar/desabilitar o formatador SCSS padrão.
	"scss.format.enable": true,

	// Número máximo de quebras de linha a serem preservadas em uma parte, quando `scss.format.preserveNewLines` estiver habilitado.
	"scss.format.maxPreserveNewLines": null,

	// Separe os conjuntos de regras por uma linha em branco.
	"scss.format.newlineBetweenRules": true,

	// Separe os seletores com uma nova linha.
	"scss.format.newlineBetweenSelectors": true,

	// Se as quebras de linha existentes antes dos elementos devem ser preservadas.
	"scss.format.preserveNewLines": true,

	// Verifique se há um caractere de espaço em torno dos separadores '>', '+', '~' (por exemplo, 'a > b').
	"scss.format.spaceAroundSelectorSeparator": false,

	// Mostrar a documentação de marca e de atributo durante a focalização do SCSS.
	"scss.hover.documentation": true,

	// Mostrar as referências ao MDN durante a focalização do SCSS.
	"scss.hover.references": true,

	// Número de parâmetros inválido.
	"scss.lint.argumentsInColorFunction": "error",

	// Não use `width` nem `height` ao usar `padding` ou `border`.
	"scss.lint.boxModel": "ignore",

	// Ao usar um prefixo específico de fornecedor, inclua também todas as outras propriedades específicas do fornecedor.
	"scss.lint.compatibleVendorPrefixes": "ignore",

	// Não use definições de estilo duplicadas.
	"scss.lint.duplicateProperties": "ignore",

	// Não use conjuntos de regras vazios.
	"scss.lint.emptyRules": "warning",

	// Evite usar `float`. O uso de floats leva a um CSS frágil que será facilmente interrompido se um aspecto do layout for alterado.
	"scss.lint.float": "ignore",

	// A regra `@font-face` precisa definir as propriedades `src` e `font-family`.
	"scss.lint.fontFaceProperties": "warning",

	// As cores hexa precisam conter três ou seis números hexa.
	"scss.lint.hexColorLength": "error",

	// Os seletores não devem conter IDs porque essas regras estão intimamente vinculadas ao HTML.
	"scss.lint.idSelector": "ignore",

	// Os raqueamentos do IE só são necessários quando há suporte para IE7 e anteriores.
	"scss.lint.ieHack": "ignore",

	// Evite usar `!important`. É uma indicação de que a especificidade do CSS inteiro ficou sem controle e precisa ser refatorada.
	"scss.lint.important": "ignore",

	// As instruções de importação não são carregadas em paralelo.
	"scss.lint.importStatement": "ignore",

	// A propriedade foi ignorada devido à exibição. Por exemplo, com `display: inline`, as propriedades `width`, `height`, `margin-top`, `margin-bottom` e `float` não têm efeito.
	"scss.lint.propertyIgnoredDueToDisplay": "warning",

	// O seletor universal (`*`) é sabidamente lento.
	"scss.lint.universalSelector": "ignore",

	// Regra 'at' desconhecida.
	"scss.lint.unknownAtRules": "warning",

	// Propriedade desconhecida.
	"scss.lint.unknownProperties": "warning",

	// Propriedade específica do fornecedor desconhecida.
	"scss.lint.unknownVendorSpecificProperties": "ignore",

	// Uma lista de propriedades que não são validadas em relação à regra `unknownProperties`.
	"scss.lint.validProperties": [],

	// Ao usar um prefixo específico do fornecedor, inclua também a propriedade padrão.
	"scss.lint.vendorPrefix": "warning",

	// Não é necessária nenhuma unidade para zero.
	"scss.lint.zeroUnits": "ignore",

	// Habilita ou desabilita todas as validações.
	"scss.validate": true,

	// Quando habilitado, verifica automaticamente as extensões quanto a atualizações. Se uma extensão tiver uma atualização, ela será marcada como desatualizada no modo de exibição de Extensões. As atualizações são buscadas em um serviço online da Microsoft.
	"extensions.autoCheckUpdates": true,

	// Controla o comportamento de atualização automática das extensões. As atualizações são buscadas em um serviço online Microsoft.
	//  - true: Baixar e instalar as atualizações automaticamente para todas as extensões.
	//  - onlyEnabledExtensions: Baixar e instalar as atualizações automaticamente somente para extensões habilitadas. As extensões desabilitadas não serão atualizadas automaticamente.
	//  - false: As extensões não são atualizadas automaticamente.
	"extensions.autoUpdate": true,

	// Quando habilitados, os editores com detalhes de extensão são fechados automaticamente ao navegar para fora do modo de exibição de Extensões.
	"extensions.closeExtensionDetailsOnViewChange": false,

	// Quando uma extensão for listada aqui, um prompt de confirmação não será exibido quando essa extensão lidar com um URI.
	"extensions.confirmedUriHandlerExtensionIds": [],

	// Configure uma extensão a ser executada em um processo de host de extensão diferente.
	"extensions.experimental.affinity": {},

	// Quando habilitado, o host de extensão será iniciado usando a nova API UtilityProcess Electron.
	"extensions.experimental.useUtilityProcess": false,

	// Quando habilitadas, as notificações para as recomendações de extensão não serão mostradas.
	"extensions.ignoreRecommendations": false,

	// Esta configuração foi preterida. Use a configuração extensions.ignoreRecommendations para controlar as notificações de recomendação. Use as ações de visibilidade da exibição de Extensões para ocultar a exibição Recomendado por padrão.
	// 
	"extensions.showRecommendationsOnlyOnDemand": false,

	// Ignora o suporte do espaço de trabalho não confiável de uma extensão. As extensões que usam 'true' sempre serão habilitadas. As extensões que usam 'limited' sempre serão habilitadas e a extensão ocultará a funcionalidade que exige confiança. As extensões que usam 'false' só serão habilitadas se o espaço de trabalho for confiável.
	"extensions.supportUntrustedWorkspaces": {},

	// Ignorar o suporte a espaços de trabalho virtuais de uma extensão.
	"extensions.supportVirtualWorkspaces": {},

	// Habilitar o host de extensão do web worker.
	//  - true: O Host de Extensão de Função sempre será iniciado.
	//  - false: O Host de Extensão de Função de Trabalho nunca será iniciado.
	//  - auto: O Host de Extensão de Função será iniciado quando uma extensão da web precisar dele.
	"extensions.webWorker": "auto",

	// Habilitar/desabilitar a capacidade de rolagem inteligente no modo de exibição de saída. A rolagem inteligente permite que você bloqueie a rolagem automaticamente ao clicar no modo de exibição de saída e desbloqueie ao clicar na última linha.
	"output.smartScroll.enabled": true,

	// Lista de extensões a serem ignoradas durante a sincronização. O identificador de uma extensão é sempre `${publisher}.${name}`. Por exemplo: `vscode.csharp`.
	"settingsSync.ignoredExtensions": [],

	// Configurar as configurações a serem ignoradas durante a sincronização.
	"settingsSync.ignoredSettings": [],

	// Sincronizar as associações de teclas para cada plataforma.
	"settingsSync.keybindingsPerPlatform": true,

	// Controla se as células de código na janela interativa são recolhidas por padrão.
	"interactiveWindow.collapseCellInputCode": "fromEditor",

	// Quando as trilhas do notebook habilitadas contêm células de código.
	"notebook.breadcrumbs.showCodeCells": true,

	// Controla onde o indicador de foco é renderizado, ao longo das bordas de célula ou à medianiz esquerda
	"notebook.cellFocusIndicator": "gutter",

	// Onde a barra de ferramentas da célula deve ser mostrada ou se deve ficar oculta.
	"notebook.cellToolbarLocation": {
		"default": "right"
	},

	// Se a barra de ferramentas da célula deve ser exibida ao passar o mouse ou clicar.
	"notebook.cellToolbarVisibility": "click",

	// Controlar se o editor de cadernos deve ser renderizado de forma compacta. Por exemplo, quando ativado, ele irá diminuir a largura da margem esquerda.
	"notebook.compactView": true,

	// Controla se a ação das saídas deve ser renderizada na barra de ferramentas de saída.
	"notebook.consolidatedOutputButton": true,

	// Controla se as ações extras são mostradas em um menu suspenso próximo ao botão de execução.
	"notebook.consolidatedRunButton": false,

	// Se o editor de comparação de texto avançado deve ser usado para o notebook.
	"notebook.diff.enablePreview": true,

	// Ocultar as Diferenças de Metadados
	"notebook.diff.ignoreMetadata": false,

	// Ocultar as Diferenças de Saídas
	"notebook.diff.ignoreOutputs": false,

	// Lista de prioridades para tipos mime de saída
	"notebook.displayOrder": [],

	// Controle se o editor do bloco de anotações deve permitir a movimentação de células por meio de arrastar e soltar.
	"notebook.dragAndDropEnabled": true,

	// Configurações para editores de código usados em blocos de anotações. Isso pode ser usado para personalizar a maioria das configurações do editor.* configurações.
	"notebook.editorOptionsCustomizations": {},

	// Controlar se uma barra de ferramentas global deve ser renderizada dentro do editor de bloco de anotações.
	"notebook.globalToolbar": true,

	// Controle se as ações na barra de ferramentas do notebook devem renderizar o rótulo ou não.
	"notebook.globalToolbarShowLabel": "always",

	// Controlar onde as ações de inserção de célula devem aparecer.
	//  - betweenCells: Uma barra de ferramentas que aparece ao passar o mouse entre as células.
	//  - notebookToolbar: A barra de ferramentas na parte superior do editor de bloco de anotações.
	//  - both: Ambas as barras de ferramentas.
	//  - hidden: As ações de inserção não aparecem em nenhum lugar.
	"notebook.insertToolbarLocation": "both",

	// Controla a exibição de números de linha no editor de células.
	"notebook.lineNumbers": "off",

	// Controla o tamanho da fonte em pixels da marcação renderizada em notebooks. Quando definido como `0`, 120% de `editor.fontSize` é usado.
	"notebook.markup.fontSize": 0,

	// Quando habilitado, o cursor pode navegar para a célula seguinte/anterior quando o cursor atual no editor de célula está na primeira/última linha.
	"notebook.navigation.allowNavigateToSurroundingCells": true,

	// Quando habilitada, a estrutura de tópicos do notebook mostra as células do código.
	"notebook.outline.showCodeCells": false,

	// Controle quantas linhas de texto em uma saída de texto são renderizadas.
	"notebook.output.textLineLimit": 30,

	// A família de fontes para o texto de saída das células do notebook. Quando definido como vazio, o `editor.fontFamily` é usado.
	"notebook.outputFontFamily": "",

	// Tamanho da fonte para o texto de saída das células do notebook. Quando definido como `0`, `editor.fontSize` é usado.
	"notebook.outputFontSize": 0,

	// Altura da linha do texto de saída para células do bloco de anotações.
	//  - Valores entre 0 e 8 serão usados como um multiplicador com o tamanho da fonte.
	//  - Valores maiores ou iguais a 8 serão usados como valores efetivos.
	"notebook.outputLineHeight": 22,

	// Especifica se a barra de status da célula deve ser mostrada.
	//  - hidden: A barra de Status da célula está sempre oculta.
	//  - visible: A barra de Status da célula está sempre visível.
	//  - visibleAfterExecute: A barra de Status da célula fica oculta até que a célula tenha sido executada. Em seguida, fica visível para exibir o status de execução.
	"notebook.showCellStatusBar": "visible",

	// Controla quando a seta dobrável do cabeçalho Markdown é exibida.
	//  - always: Os controles de dobragem estão sempre visíveis.
	//  - never: Nunca mostre os controles dobráveis e reduza o tamanho da calha.
	//  - mouseover: Os controles de dobragem são visíveis somente no mouseover.
	"notebook.showFoldingControls": "mouseover",

	// Se deve ser usada uma pilha desfazer/refazer separada para cada célula.
	"notebook.undoRedoPerCell": true,

	// Role automaticamente a janela interativa para mostrar a saída da última instrução executada. Se esse valor for falso, a janela só rolará se a última célula já tiver sido rolada.
	"interactiveWindow.alwaysScrollOnNewCell": true,

	// Controla se as sessões/histórico da Janela Interativa devem ser restauradas entre os recarregamentos de janela. Se o estado dos controladores usados no Windows Interativo é persistente entre os recarregamentos de janela são controlados por extensões que contribuem com controladores.
	"interactiveWindow.restore": false,

	// Habilite tarefas automáticas na pasta.
	//  - on: Sempre
	//  - auto: Solicitar permissão para cada pasta
	//  - off: Nunca
	"task.allowAutomaticTasks": "auto",

	// Controla a habilitação de `provideTasks` para toda a extensão do provedor de tarefas. Se o comando Tasks: Run Task estiver lento, desabilitar a detecção automática para provedores de tarefas poderá ajudar. As extensões individuais também podem fornecer configurações que desabilitam a detecção automática.
	"task.autoDetect": "on",

	// No recarregamento da janela, reconecte-se às tarefas em segundo plano/inspeção em execução. Observe que isso é experimental, para que você possa encontrar problemas.
	"task.experimental.reconnection": false,

	// Configura se é necessário mostrar o aviso de correspondência de problema ao executar uma tarefa. Defina como `true` para não receber avisos ou use um dicionário de tipos de tarefa para desligar o aviso somente para tipos de tarefa específicos.
	"task.problemMatchers.neverPrompt": false,

	// Controla se é necessário mostrar os detalhes da tarefa que tem um detalhe nas seleções rápidas de tarefa, como Executar Tarefa.
	"task.quickOpen.detail": true,

	// Controla o número de itens recentes rastreados na caixa de diálogo de abertura rápida da tarefa.
	"task.quickOpen.history": 30,

	// Faz com que as tarefas: executem o comando Task para usar o comportamento mais lento "show all" em vez do seletor de nível dois mais rápido, no qual as tarefas são agrupadas pelo provedor.
	"task.quickOpen.showAll": false,

	// Controla se a seleção rápida de tarefa é ignorada quando há apenas uma tarefa para seleção.
	"task.quickOpen.skip": false,

	// Salve todos os editores sujos antes de executar uma tarefa.
	//  - always: Sempre salva todos os editores antes de executar.
	//  - never: Nunca salva editores antes de executar.
	//  - prompt: Avisa se os editores devem ser salvos antes de serem executados.
	"task.saveBeforeRun": "always",

	// Mostra decorações em pontos de interesse no buffer de terminal, como o primeiro problema encontrado através de uma tarefa de inspeção. Observe que isso só terá efeito para tarefas futuras.
	"task.showDecorations": true,

	// Configura se um aviso é mostrado quando um provedor está lento
	"task.slowProviderWarning": true,

	// Ao abrir um arquivo do gerenciador em um terminal, determina que tipo de terminal será iniciado
	//  - integrated: Use o terminal integrado do VS Code.
	//  - external: Use o terminal externo configurado.
	"terminal.explorerKind": "integrated",

	// Personaliza qual terminal deve ser executado no Linux.
	"terminal.external.linuxExec": "xterm",

	// Personaliza qual aplicativo de terminal será executado no macOS.
	"terminal.external.osxExec": "Terminal.app",

	// Personaliza qual terminal deve ser executado no Windows.
	"terminal.external.windowsExec": "C:\\WINDOWS\\System32\\cmd.exe",

	// Se deve ou não permitir combinações de teclas de acordes no terminal. Observe que quando isso for verdadeiro e o pressionamento de tecla resultar em um acorde, ele será ignorado `terminal.integrated.commandsToSkipShell`, definir isso como falso é particularmente útil quando você deseja que ctrl+k vá para o seu shell (não VS Code).
	"terminal.integrated.allowChords": true,

	// Se deseja permitir que os mnemônicos de menubar (por exemplo, alt+f) disparem a abertura de menubar. Observe que isso fará com que todos os pressionamentos de tecla Alt ignorem o shell quando true. Isso não faz nada no macOS.
	"terminal.integrated.allowMnemonics": false,

	// Se ativado, alt/option + click reposicionará o cursor do prompt para baixo do mouse quando `editor.multiCursorModifier` estiver definido como `'alt'` (o valor padrão). Isso pode não funcionar de forma confiável dependendo do seu shell.
	"terminal.integrated.altClickMovesCursor": true,

	// O perfil de terminal a ser usado no Linux para uso de terminal relacionado à automação, como tarefas e depuração. No momento, esta configuração será ignorada se `terminal.integrated.automationShell.linux` estiver definido.
	"terminal.integrated.automationProfile.linux": null,

	// O perfil de terminal a ser usado no macOS para uso de terminal relacionado à automação, como tarefas e depuração. No momento, esta configuração será ignorada se `terminal.integrated.automationShell.osx` estiver definido.
	"terminal.integrated.automationProfile.osx": null,

	// O perfil de terminal a ser usado para o terminal relacionado à automação, como tarefas e depuração. No momento, esta configuração será ignorada se `terminal.integrated.automationShell.windows` estiver definido.
	"terminal.integrated.automationProfile.windows": null,

	// Isso foi preterido. A nova maneira recomendada de configurar o shell de automação é criando um perfil de automação de terminal com `terminal.integrated.automationProfile.linux`. No momento, isso terá prioridade sobre as novas configurações de perfil de automação, mas isso será alterado no futuro.
	// Um caminho que, quando definido, substituirá valores `terminal.integrated.shell.linux` e ignorará valores `shellArgs` para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationShell.linux": null,

	// Isso foi preterido. A nova maneira recomendada de configurar o shell de automação é criando um perfil de automação de terminal com `terminal.integrated.automationProfile.osx`. No momento, isso terá prioridade sobre as novas configurações de perfil de automação, mas isso será alterado no futuro.
	// Um caminho que, quando definido, substituirá valores `terminal.integrated.shell.osx` e ignorará valores `shellArgs` para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationShell.osx": null,

	// Isso foi preterido. A nova maneira recomendada de configurar o shell de automação é criando um perfil de automação de terminal com `terminal.integrated.automationProfile.windows`. No momento, isso terá prioridade sobre as novas configurações de perfil de automação, mas isso será alterado no futuro.
	// Um caminho que, quando definido, substituirá valores `terminal.integrated.shell.windows` e ignorará valores `shellArgs` para uso de terminal relacionado à automação, como tarefas e depuração.
	"terminal.integrated.automationShell.windows": null,

	// Um conjunto de mensagens que, quando encontradas no terminal, serão respondidas automaticamente. Desde que a mensagem seja específica o suficiente, isso pode ajudar a automatizar as respostas comuns.
	// 
	// Observações:
	// 
	// - Use`"Terminate batch job (Y/N)": "Y\r"` para responder automaticamente ao prompt de encerramento do trabalho em lotes no Windows.
	// - A mensagem inclui sequências de escape para que a resposta não aconteça com texto estilizado.
	// - Cada resposta só pode ocorrer uma vez a cada segundo
	// .- Use `"\r"` na resposta para significar a tecla Enter. 
	// - Para cancelar a definição de uma chave padrão, defina o valor como nulo.
	//  Reinicie VS Code se novas não se aplicarem.
	"terminal.integrated.autoReplies": {},

	// O número de milissegundos para mostrar a campainha dentro de uma guia de terminal quando disparada.
	"terminal.integrated.bellDuration": 1000,

	// Um conjunto de IDs de comando cujas combinações de teclas não serão enviadas ao shell, mas sempre tratadas pelo VS Code. Isso permite que as combinações de teclas que normalmente seriam consumidas pelo shell atuem da mesma forma que quando o terminal não está focado, por exemplo, `Ctrl+P` para iniciar a Abertura Rápida
	// 
	// &nbsp;
	// 
	// Muitos comandos são ignorados por padrão. Para substituir um padrão e passar a combinação de teclas desse comando para o shell, adicione o comando prefixado com o caractere `-`. Por exemplo, adicione `-workbench.action.quickOpen` para permitir que`Ctrl+P` alcance o shell.
	// 
	// &nbsp;
	// 
	// A seguinte lista de comandos padrão ignorados é truncada quando exibida em Editor de Configurações. Para ver a lista completa, [abrir as configurações padrão JSON](command:workbench.action.openRawDefaultSettings 'Abrir Configurações Padrão (JSON)') e pesquise o primeiro comando na lista abaixo.
	// 
	// &nbsp;
	// 
	// Comandos Padrão Ignorados:
	// 
	// - editor.action.toggleTabFocusMode
	// - notifications.hideList
	// - notifications.hideToasts
	// - workbench.action.debug.continue
	// - workbench.action.debug.pause
	// - workbench.action.debug.restart
	// - workbench.action.debug.run
	// - workbench.action.debug.start
	// - workbench.action.debug.stepInto
	// - workbench.action.debug.stepOut
	// - workbench.action.debug.stepOver
	// - workbench.action.debug.stop
	// - workbench.action.firstEditorInGroup
	// - workbench.action.focusActiveEditorGroup
	// - workbench.action.focusEighthEditorGroup
	// - workbench.action.focusFifthEditorGroup
	// - workbench.action.focusFirstEditorGroup
	// - workbench.action.focusFourthEditorGroup
	// - workbench.action.focusLastEditorGroup
	// - workbench.action.focusNextPart
	// - workbench.action.focusPreviousPart
	// - workbench.action.focusSecondEditorGroup
	// - workbench.action.focusSeventhEditorGroup
	// - workbench.action.focusSixthEditorGroup
	// - workbench.action.focusThirdEditorGroup
	// - workbench.action.lastEditorInGroup
	// - workbench.action.navigateDown
	// - workbench.action.navigateLeft
	// - workbench.action.navigateRight
	// - workbench.action.navigateUp
	// - workbench.action.nextEditor
	// - workbench.action.nextEditorInGroup
	// - workbench.action.nextPanelView
	// - workbench.action.nextSideBarView
	// - workbench.action.openNextRecentlyUsedEditor
	// - workbench.action.openNextRecentlyUsedEditorInGroup
	// - workbench.action.openPreviousRecentlyUsedEditor
	// - workbench.action.openPreviousRecentlyUsedEditorInGroup
	// - workbench.action.previousEditor
	// - workbench.action.previousEditorInGroup
	// - workbench.action.previousPanelView
	// - workbench.action.previousSideBarView
	// - workbench.action.quickOpen
	// - workbench.action.quickOpenLeastRecentlyUsedEditor
	// - workbench.action.quickOpenLeastRecentlyUsedEditorInGroup
	// - workbench.action.quickOpenPreviousEditor
	// - workbench.action.quickOpenPreviousRecentlyUsedEditor
	// - workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup
	// - workbench.action.quickOpenView
	// - workbench.action.showCommands
	// - workbench.action.tasks.build
	// - workbench.action.tasks.reRunTask
	// - workbench.action.tasks.restartTask
	// - workbench.action.tasks.runTask
	// - workbench.action.tasks.showLog
	// - workbench.action.tasks.showTasks
	// - workbench.action.tasks.terminate
	// - workbench.action.tasks.test
	// - workbench.action.terminal.clear
	// - workbench.action.terminal.clearSelection
	// - workbench.action.terminal.copyLastCommand
	// - workbench.action.terminal.copySelection
	// - workbench.action.terminal.copySelectionAsHtml
	// - workbench.action.terminal.deleteToLineStart
	// - workbench.action.terminal.deleteWordLeft
	// - workbench.action.terminal.deleteWordRight
	// - workbench.action.terminal.findNext
	// - workbench.action.terminal.findPrevious
	// - workbench.action.terminal.focus
	// - workbench.action.terminal.focusAtIndex1
	// - workbench.action.terminal.focusAtIndex2
	// - workbench.action.terminal.focusAtIndex3
	// - workbench.action.terminal.focusAtIndex4
	// - workbench.action.terminal.focusAtIndex5
	// - workbench.action.terminal.focusAtIndex6
	// - workbench.action.terminal.focusAtIndex7
	// - workbench.action.terminal.focusAtIndex8
	// - workbench.action.terminal.focusAtIndex9
	// - workbench.action.terminal.focusFind
	// - workbench.action.terminal.focusNext
	// - workbench.action.terminal.focusNextPane
	// - workbench.action.terminal.focusPrevious
	// - workbench.action.terminal.focusPreviousPane
	// - workbench.action.terminal.goToRecentDirectory
	// - workbench.action.terminal.hideFind
	// - workbench.action.terminal.kill
	// - workbench.action.terminal.killEditor
	// - workbench.action.terminal.moveToEditor
	// - workbench.action.terminal.moveToLineEnd
	// - workbench.action.terminal.moveToLineStart
	// - workbench.action.terminal.moveToTerminalPanel
	// - workbench.action.terminal.navigationModeExit
	// - workbench.action.terminal.navigationModeFocusNext
	// - workbench.action.terminal.navigationModeFocusPrevious
	// - workbench.action.terminal.new
	// - workbench.action.terminal.newInActiveWorkspace
	// - workbench.action.terminal.paste
	// - workbench.action.terminal.pasteSelection
	// - workbench.action.terminal.resizePaneDown
	// - workbench.action.terminal.resizePaneLeft
	// - workbench.action.terminal.resizePaneRight
	// - workbench.action.terminal.resizePaneUp
	// - workbench.action.terminal.runActiveFile
	// - workbench.action.terminal.runRecentCommand
	// - workbench.action.terminal.runSelectedText
	// - workbench.action.terminal.scrollDown
	// - workbench.action.terminal.scrollDownPage
	// - workbench.action.terminal.scrollToBottom
	// - workbench.action.terminal.scrollToNextCommand
	// - workbench.action.terminal.scrollToPreviousCommand
	// - workbench.action.terminal.scrollToTop
	// - workbench.action.terminal.scrollUp
	// - workbench.action.terminal.scrollUpPage
	// - workbench.action.terminal.selectAll
	// - workbench.action.terminal.selectToNextCommand
	// - workbench.action.terminal.selectToNextLine
	// - workbench.action.terminal.selectToPreviousCommand
	// - workbench.action.terminal.selectToPreviousLine
	// - workbench.action.terminal.sendSequence
	// - workbench.action.terminal.sizeToContentWidth
	// - workbench.action.terminal.split
	// - workbench.action.terminal.splitInActiveWorkspace
	// - workbench.action.terminal.toggleFindCaseSensitive
	// - workbench.action.terminal.toggleFindRegex
	// - workbench.action.terminal.toggleFindWholeWord
	// - workbench.action.terminal.toggleTerminal
	// - workbench.action.toggleFullScreen
	// - workbench.action.toggleMaximizedPanel
	// - workbench.action.togglePanel
	"terminal.integrated.commandsToSkipShell": [],

	// Controla se é necessário confirmar quando a janela fecha se houver sessões de terminal ativas.
	//  - never: Nunca confirme.
	//  - always: Sempre confirme se existem terminais.
	//  - hasChildProcesses: Confirme se há terminais com processos filhos.
	"terminal.integrated.confirmOnExit": "never",

	// Controla se os terminais de eliminação devem ser confirmados quando eles têm processos filhos. Quando definido como editor, os terminais na área do editor serão marcados como alterados quando tiverem processos filhos. Observe que a detecção de processos filho pode não funcionar bem para shells como o Git Bash, que não executam seus processos como processos filhos do shell.
	//  - never: Nunca confirme.
	//  - editor: Confirme se o terminal está no editor.
	//  - panel: Confirme se o terminal está no painel.
	//  - always: Confirme se o terminal está no editor ou no painel.
	"terminal.integrated.confirmOnKill": "editor",

	// Controla se o texto selecionado no terminal será copiado na área de transferência.
	"terminal.integrated.copyOnSelection": false,

	// Controla se o cursor de terminal pisca.
	"terminal.integrated.cursorBlinking": false,

	// Controla o estilo do cursor do terminal.
	"terminal.integrated.cursorStyle": "block",

	// Controla a largura do cursor quando `terminal.integrated.cursorStyle` é definido como `line`.
	"terminal.integrated.cursorWidth": 1,

	// Se você deseja desenhar glifos personalizados para elemento de bloco e caracteres de desenho de caixa em vez de usar a fonte, o que geralmente produz melhor renderização com linhas contínuas. Observe que isso não funciona com o renderizador DOM.
	"terminal.integrated.customGlyphs": true,

	// Um caminho de início explícito em que o terminal será iniciado. Ele será usado como o diretório de trabalho atual (cwd) para o processo de shell. Isso poderá ser particularmente útil em configurações de workspace se o diretório raiz não for um cwd conveniente.
	"terminal.integrated.cwd": "",

	// Controla onde os terminais recém-criados aparecerão.
	//  - editor: Criar terminais no editor
	//  - view: Criar terminais na exibição do terminal
	"terminal.integrated.defaultLocation": "view",

	// O perfil padrão usado no Linux. No momento, essa configuração será ignorada se `terminal.integrated.shell.linux` ou `terminal.integrated.shellArgs.linux` estiveres definidos.
	"terminal.integrated.defaultProfile.linux": null,

	// O perfil padrão usado no macOS. No momento, essa configuração será ignorada se `terminal.integrated.shell.osx` ou `terminal.integrated.shellArgs.osx` estiverem definidos.
	"terminal.integrated.defaultProfile.osx": null,

	// O perfil padrão usado no Windows. No momento, essa configuração será ignorada se `terminal.integrated.shell.windows` ou `terminal.integrated.shellArgs.windows` estiverem definidos.
	//  - null: Detectar o padrão automaticamente
	//  - PowerShell: $(terminal-powershell) PowerShell
	// - path: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe
	//  - Windows PowerShell: $(terminal-powershell) Windows PowerShell
	// - path: C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe
	//  - Command Prompt: $(terminal-cmd) Command Prompt
	// - path: C:\WINDOWS\System32\cmd.exe
	// - args: []
	//  - JavaScript Debug Terminal: $($(debug)) JavaScript Debug Terminal
	// - extensionIdentifier: ms-vscode.js-debug
	"terminal.integrated.defaultProfile.windows": null,

	// Controla se a variável de ambiente `$LANG` deve ser detectada e definida como uma opção compatível com UTF-8, pois o terminal do VS Code só dá suporte a dados codificados em UTF-8 provenientes de shell.
	//  - auto: Definir a variável de ambiente `$LANG` se a variável existente não existir ou se não terminar em `'.UTF-8 '`.
	//  - off: Não definir a variável de ambiente `$LANG`.
	//  - on: Sempre definir a variável de ambiente `$LANG`.
	"terminal.integrated.detectLocale": "auto",

	// Controla se o texto em negrito no terminal sempre usará a variante de cor ANSI "brilhante".
	"terminal.integrated.drawBoldTextInBrightColors": true,

	// Controla se o sinal de terminal está habilitado, isso aparece como um campainha visual ao lado do nome do terminal.
	"terminal.integrated.enableBell": false,

	// Se os links de arquivo devem ser habilitados no terminal. Os links podem ser lentos ao trabalhar em uma unidade de rede em particular porque cada link de arquivo é verificado no sistema de arquivos. A alteração dessa variável entrará em vigor somente em novos terminais.
	"terminal.integrated.enableFileLinks": true,

	// Mostra uma caixa de diálogo de aviso ao colar várias linhas no terminal. A caixa de diálogo não é exibida quando:
	// 
	// - O modo de colagem entre colchetes está ativado (o shell suporta nativamente a colagem de várias linhas)
	// - A colagem é tratada pela linha de leitura do shell (no caso de pwsh)
	"terminal.integrated.enableMultiLinePasteWarning": true,

	// Persistir sessões/histórico de terminal para o espaço de trabalho em recarregamentos de janela.
	"terminal.integrated.enablePersistentSessions": true,

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no Linux. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.linux": {},

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no macOS. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.osx": {},

	// Objeto com variáveis de ambiente que serão adicionadas ao processo do VS Code a ser usado pelo terminal no Windows. Defina como `null` para excluir a variável de ambiente.
	"terminal.integrated.env.windows": {},

	// Se deseja exibir o indicador de alterações de ambiente em cada terminal, o que explica se as extensões foram aplicadas, ou se você deseja fazer alterações no ambiente do terminal.
	//  - off: Desabilitar o indicador.
	//  - on: Habilitar o indicador.
	//  - warnonly: Somente mostrar o indicador de aviso quando o ambiente de um terminal estiver 'obsoleto', e não o indicador de informações que mostra que um terminal teve seu ambiente modificado por uma extensão.
	"terminal.integrated.environmentChangesIndicator": "warnonly",

	// Se os terminais serão reiniciados automaticamente quando a extensão desejar contribuir para o ambiente e ainda não tiver interagido com eles.
	"terminal.integrated.environmentChangesRelaunch": true,

	// Multiplicador de velocidade de rolagem ao pressionar `Alt`.
	"terminal.integrated.fastScrollSensitivity": 5,

	// Controla a família de fontes do terminal, o padrão é o valor de `editor.fontFamily`.
	"terminal.integrated.fontFamily": "",

	// Controla o tamanho da fonte em pixels do terminal.
	"terminal.integrated.fontSize": 14,

	// A espessura da fonte a ser usada no terminal para texto sem negrito. Aceita palavras-chave "normal" e "negrito" ou números entre 1 e 1000.
	"terminal.integrated.fontWeight": "normal",

	// A espessura da fonte a ser usada no terminal para texto em negrito. Aceita palavras-chave "normal" e "negrito" ou números entre 1 e 1000.
	"terminal.integrated.fontWeightBold": "bold",

	// Controla se o terminal aproveitará a GPU para fazer a renderização.
	//  - auto: Permitir que o VS Code detecte qual renderizador fornecerá a melhor experiência.
	//  - on: Habilitar a aceleração da GPU no terminal.
	//  - off: Desabilite a aceleração de GPU no terminal. O terminal será renderizado muito mais lentamente quando a aceleração de GPU estiver desativada, mas deverá funcionar de forma confiável em todos os sistemas.
	//  - canvas: Use o renderizador de tela de fallback do terminal que usa um contexto 2d em vez de webgl, que pode ter um desempenho melhor em alguns sistemas. Observe que alguns recursos são limitados no renderizador de tela, como a seleção opaca.
	"terminal.integrated.gpuAcceleration": "auto",

	// Um conjunto de nomes de processos a serem ignorados ao usar a configuração `terminal.integrated.confirmOnKill`.
	"terminal.integrated.ignoreProcessNames": [
		"starship",
		"oh-my-posh",
		"bash",
		"zsh"
	],

	// Se os novos shells devem herdar seu ambiente do código VS, o que pode gerar um shell de entrada para garantir que $PATH e outras variáveis de desenvolvimento sejam inicializadas. Isso não tem efeito no Windows.
	"terminal.integrated.inheritEnv": true,

	// Controla o espaçamento de letras do terminal, este é um valor inteiro que representa a quantidade de pixels adicionais a serem adicionados entre caracteres.
	"terminal.integrated.letterSpacing": 0,

	// Controla a altura da linha do terminal, esse número é multiplicado pelo tamanho da fonte do terminal para obter a altura real da linha em pixels.
	"terminal.integrated.lineHeight": 1,

	// Quando o eco local deve ser ativado. Isso irá substituir `terminal.integrated.localEchoLatencyThreshold`
	//  - on: Sempre habilitado
	//  - off: Sempre desabilitado
	//  - auto: Habilitado somente para workspaces remotos
	"terminal.integrated.localEchoEnabled": "auto",

	// O eco local será desativado quando qualquer um desses nomes de programa for encontrado no título do terminal.
	"terminal.integrated.localEchoExcludePrograms": [
		"vim",
		"vi",
		"nano",
		"tmux"
	],

	// Duração do atraso da rede, em milissegundos, em que as edições locais serão ecoadas no terminal sem esperar pela confirmação do servidor. Se for '0', o eco local estará sempre ativado, e se for '-1', ele será desabilitado.
	"terminal.integrated.localEchoLatencyThreshold": 30,

	// Estilo do terminal de texto ecoado localmente; um estilo da fonte ou uma cor RGB.
	"terminal.integrated.localEchoStyle": "dim",

	// Controla se a seleção deve ser forçada ao usar Option + clique no macOS. Isso forçará uma seleção regular (linha) e removerá a permissão de uso do modo de seleção de coluna. Isso permite copiar e colar usando a seleção de terminal normal, por exemplo, quando o modo de mouse está habilitado no tmux.
	"terminal.integrated.macOptionClickForcesSelection": false,

	// Controla se a chave de opção deve ser tratada como a chave de meta no terminal no macOS.
	"terminal.integrated.macOptionIsMeta": false,

	// Quando definido, a cor de primeiro plano de cada célula será alterada para tentar atender à taxa de contraste especificada. Observe que isso não se aplica a caracteres `powerline` por #146406. Valores de exemplo:
	// 
	// - 1: não faça nada e use as cores padrão do tema.
	// - 4.5: [Conformidade com WCAG AA (mínimo)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html) (default).
	// - 7: [Conformidade WCAG AAA (melhorado)](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast7.html).
	// - 21: branco no preto ou preto no branco.
	"terminal.integrated.minimumContrastRatio": 4.5,

	// Um multiplicador a ser usado no `deltaY` dos eventos de rolagem do mouse.
	"terminal.integrated.mouseWheelScrollSensitivity": 1,

	// Quando o processo do terminal deve ser encerrado (por exemplo, ao fechar a janela ou o aplicativo), isso determina quando o conteúdo/histórico da sessão do terminal anterior deve ser restaurado e os processos devem ser recriados na próxima vez que o espaço de trabalho for aberto.
	// 
	// Advertências:
	// 
	// - A restauração do diretório de trabalho atual do processo depende se ele é suportado pelo shell.
	// - O tempo para persistir a sessão durante o desligamento é limitado, portanto, pode ser abortado ao usar conexões remotas de alta latência.
	//  - onExit: Reativa os processos depois que a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, associação de teclas, menu).
	//  - onExitAndWindowClose: Reativa os processos depois que a última janela for fechada no Windows/Linux ou quando o comando `workbench.action.quit` for disparado (paleta de comandos, associação de teclas, menu) ou quando a janela for fechada.
	//  - never: Nunca restaure os buffers do terminal nem recrie o processo.
	"terminal.integrated.persistentSessionReviveProcess": "onExit",

	// Controla a quantidade máxima de linhas que serão restauradas ao se reconectar a uma sessão de terminal persistente. Aumentar isso irá restaurar mais linhas de scrollback ao custo de mais memória e aumentará o tempo que leva para se conectar aos terminais na inicialização. Esta configuração requer uma reinicialização para ter efeito e deve ser definida para um valor menor ou igual a `terminal.integrated.scrollback`.
	"terminal.integrated.persistentSessionScrollback": 100,

	// Os perfis do Linux a serem presentes ao criar um terminal por meio da lista suspensa do terminal. Defina a `path` propriedade manualmente com um `args`.
	// 
	// Defina um perfil existente `null` para ocultar o perfil da lista, por exemplo: `"bash": null`.
	"terminal.integrated.profiles.linux": {
		"bash": {
			"path": "bash",
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh"
		},
		"fish": {
			"path": "fish"
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		}
	},

	// Os perfis do macOS a serem presentes ao criar um terminal por meio da lista suspensa do terminal. Defina a `path` propriedade manualmente com um `args`.
	// 
	// Defina um perfil existente `null` para ocultar o perfil da lista, por exemplo: `"bash": null`.
	"terminal.integrated.profiles.osx": {
		"bash": {
			"path": "bash",
			"args": [
				"-l"
			],
			"icon": "terminal-bash"
		},
		"zsh": {
			"path": "zsh",
			"args": [
				"-l"
			]
		},
		"fish": {
			"path": "fish",
			"args": [
				"-l"
			]
		},
		"tmux": {
			"path": "tmux",
			"icon": "terminal-tmux"
		},
		"pwsh": {
			"path": "pwsh",
			"icon": "terminal-powershell"
		}
	},

	// Os perfis do Windows a serem presentes ao criar um novo terminal por meio da lista suspensa do terminal. Use a `source` propriedade para detectar automaticamente a localização do shell. Ou defina a `path` propriedade manualmente com um `args`.
	// 
	// Definir um perfil existente para `null` ocultar o perfil da lista, por exemplo: `"Ubuntu-20.04 (WSL)": null`.
	"terminal.integrated.profiles.windows": {
		"PowerShell": {
			"source": "PowerShell",
			"icon": "terminal-powershell"
		},
		"Command Prompt": {
			"path": [
				"${env:windir}\\Sysnative\\cmd.exe",
				"${env:windir}\\System32\\cmd.exe"
			],
			"args": [],
			"icon": "terminal-cmd"
		},
		"Git Bash": {
			"source": "Git Bash"
		}
	},

	// Controla como o terminal reage ao clicar com o botão direito do mouse.
	//  - default: Mostrar o menu de contexto.
	//  - copyPaste: Copiar quando houver uma seleção, caso contrário, colar.
	//  - paste: Colar ao clicar com o botão direito do mouse.
	//  - selectWord: Selecionar a palavra sob o cursor e mostrar o menu de contexto.
	//  - nothing: Não faça nada e passe o evento para o terminal.
	"terminal.integrated.rightClickBehavior": "copyPaste",

	// Controla o número máximo de linhas que o terminal mantém no buffer.
	"terminal.integrated.scrollback": 1000,

	// Envia a maioria das combinações de teclas para o terminal em vez do workbench, substituindo `terminal.integrated.commandsToSkipShell`, que pode ser usado alternativamente para ajuste fino.
	"terminal.integrated.sendKeybindingsToShell": false,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.linux#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.linux`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shell.linux": null,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.osx#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.osx`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shell.osx": null,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.windows#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.windows`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shell.windows": null,

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.linux#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.linux`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shellArgs.linux": [],

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.osx#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.osx`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shellArgs.osx": [
		"-l"
	],

	// Isso foi preterido. A nova maneira recomendada de configurar seu shell padrão é criar um perfil de terminal no `terminal.integrated.profiles.windows#` e definir seu nome de perfil como padrão no `#terminal.integrated.defaultProfile.windows`. No momento, isso terá prioridade sobre as novas configurações de perfis, mas isso mudará no futuro.
	// The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).
	"terminal.integrated.shellArgs.windows": [],

	// Controla o ícone que será usado para comandos ignorados/vazios. Defina como `""` para ocultar o ícone ou desativar as decorações com `terminal.integrated.shellIntegration.decorationsEnabled`.
	"terminal.integrated.shellIntegration.decorationIcon": "circle-outline",

	// Controla o ícone que será usado para cada comando em terminais com integração de shell habilitada que possuem um código de saída associado. Defina como `""` para ocultar o ícone ou desativar as decorações com `terminal.integrated.shellIntegration.decorationsEnabled`.
	"terminal.integrated.shellIntegration.decorationIconError": "error-small",

	// Controla o ícone que será usado para cada comando em terminais com integração de shell habilitada que não possuem um código de saída associado. Defina como `""` para ocultar o ícone ou desativar as decorações com `terminal.integrated.shellIntegration.decorationsEnabled`.
	"terminal.integrated.shellIntegration.decorationIconSuccess": "primitive-dot",

	// Quando a integração do shell está habilitada, adiciona uma decoração para cada comando.
	//  - both: Mostrar decorações na calha (esquerda) e régua de visão geral (direita)
	//  - gutter: Mostrar decorações de calha à esquerda do terminal
	//  - overviewRuler: Mostrar as decorações da régua de visão geral à direita do terminal
	//  - never: Não mostrar decorações
	"terminal.integrated.shellIntegration.decorationsEnabled": "both",

	// Determina se a integração do shell é ou não injetada automaticamente para oferecer suporte a recursos como rastreamento de comando aprimorado e detecção de diretório de trabalho atual. 
	// 
	// A integração do shell funciona injetando o shell com um script de inicialização. O script fornece ao VS Code informações sobre o que está acontecendo no terminal.
	// 
	// Shells suportados:
	// 
	// - Linux/macOS: bash, pwsh, zsh
	//  - Windows: pwsh
	// 
	// Esta configuração se aplica somente quando os terminais são criados, portanto, você precisará reiniciar seus terminais para que ela tenha efeito.
	// 
	//  Observe que a injeção de script pode não funcionar se você tiver argumentos personalizados definidos no perfil do terminal, um [bash complexo `PROMPT_COMMAND`](https://code.visualstudio.com/docs/editor/integrated-terminal#_complex- bash-promptcommand) ou outra configuração não suportada. Para desativar as decorações, veja `terminal.integrated.shellIntegrations.decorationsEnabled`
	"terminal.integrated.shellIntegration.enabled": true,

	// Controla o número de comandos usados recentemente para manter no histórico de comandos do terminal. Defina como 0 para desabilitar o histórico de comandos do terminal.
	"terminal.integrated.shellIntegration.history": 100,

	// Controla se o alerta "O processo do terminal terminou com o código de saída" é mostrado quando o código de saída é diferente de zero.
	"terminal.integrated.showExitAlert": true,

	// Se deseja mostrar os focos para links na saída do terminal.
	"terminal.integrated.showLinkHover": true,

	// Controla o diretório de trabalho com o qual um terminal dividido começa.
	//  - workspaceRoot: Um novo terminal dividido usará a raiz do workspace como o diretório de trabalho. Em um workspace de várias raízes, uma escolha para qual pasta raiz usar é oferecida.
	//  - initial: Um novo terminal dividido usará o diretório de trabalho com o que o terminal pai começou.
	//  - inherited: No macOS e no Linux, um novo terminal dividido usará o diretório de trabalho do terminal pai. No Windows, ele se comporta do mesmo modo que o inicial.
	"terminal.integrated.splitCwd": "inherited",

	// Um ID de cor de tema para associar aos ícones do terminal por padrão.
	"terminal.integrated.tabs.defaultColor": null,

	// Um ID de codicon para associar aos ícones do terminal por padrão.
	//  - add: $(add)
	//  - plus: $(plus)
	//  - gist-new: $(gist-new)
	//  - repo-create: $(repo-create)
	//  - lightbulb: $(lightbulb)
	//  - light-bulb: $(light-bulb)
	//  - repo: $(repo)
	//  - repo-delete: $(repo-delete)
	//  - gist-fork: $(gist-fork)
	//  - repo-forked: $(repo-forked)
	//  - git-pull-request: $(git-pull-request)
	//  - git-pull-request-abandoned: $(git-pull-request-abandoned)
	//  - record-keys: $(record-keys)
	//  - keyboard: $(keyboard)
	//  - tag: $(tag)
	//  - tag-add: $(tag-add)
	//  - tag-remove: $(tag-remove)
	//  - person: $(person)
	//  - person-follow: $(person-follow)
	//  - person-outline: $(person-outline)
	//  - person-filled: $(person-filled)
	//  - git-branch: $(git-branch)
	//  - git-branch-create: $(git-branch-create)
	//  - git-branch-delete: $(git-branch-delete)
	//  - source-control: $(source-control)
	//  - mirror: $(mirror)
	//  - mirror-public: $(mirror-public)
	//  - star: $(star)
	//  - star-add: $(star-add)
	//  - star-delete: $(star-delete)
	//  - star-empty: $(star-empty)
	//  - comment: $(comment)
	//  - comment-add: $(comment-add)
	//  - alert: $(alert)
	//  - warning: $(warning)
	//  - search: $(search)
	//  - search-save: $(search-save)
	//  - log-out: $(log-out)
	//  - sign-out: $(sign-out)
	//  - log-in: $(log-in)
	//  - sign-in: $(sign-in)
	//  - eye: $(eye)
	//  - eye-unwatch: $(eye-unwatch)
	//  - eye-watch: $(eye-watch)
	//  - circle-filled: $(circle-filled)
	//  - primitive-dot: $(primitive-dot)
	//  - close-dirty: $(close-dirty)
	//  - debug-breakpoint: $(debug-breakpoint)
	//  - debug-breakpoint-disabled: $(debug-breakpoint-disabled)
	//  - debug-hint: $(debug-hint)
	//  - primitive-square: $(primitive-square)
	//  - edit: $(edit)
	//  - pencil: $(pencil)
	//  - info: $(info)
	//  - issue-opened: $(issue-opened)
	//  - gist-private: $(gist-private)
	//  - git-fork-private: $(git-fork-private)
	//  - lock: $(lock)
	//  - mirror-private: $(mirror-private)
	//  - close: $(close)
	//  - remove-close: $(remove-close)
	//  - x: $(x)
	//  - repo-sync: $(repo-sync)
	//  - sync: $(sync)
	//  - clone: $(clone)
	//  - desktop-download: $(desktop-download)
	//  - beaker: $(beaker)
	//  - microscope: $(microscope)
	//  - vm: $(vm)
	//  - device-desktop: $(device-desktop)
	//  - file: $(file)
	//  - file-text: $(file-text)
	//  - more: $(more)
	//  - ellipsis: $(ellipsis)
	//  - kebab-horizontal: $(kebab-horizontal)
	//  - mail-reply: $(mail-reply)
	//  - reply: $(reply)
	//  - organization: $(organization)
	//  - organization-filled: $(organization-filled)
	//  - organization-outline: $(organization-outline)
	//  - new-file: $(new-file)
	//  - file-add: $(file-add)
	//  - new-folder: $(new-folder)
	//  - file-directory-create: $(file-directory-create)
	//  - trash: $(trash)
	//  - trashcan: $(trashcan)
	//  - history: $(history)
	//  - clock: $(clock)
	//  - folder: $(folder)
	//  - file-directory: $(file-directory)
	//  - symbol-folder: $(symbol-folder)
	//  - logo-github: $(logo-github)
	//  - mark-github: $(mark-github)
	//  - github: $(github)
	//  - terminal: $(terminal)
	//  - console: $(console)
	//  - repl: $(repl)
	//  - zap: $(zap)
	//  - symbol-event: $(symbol-event)
	//  - error: $(error)
	//  - stop: $(stop)
	//  - variable: $(variable)
	//  - symbol-variable: $(symbol-variable)
	//  - array: $(array)
	//  - symbol-array: $(symbol-array)
	//  - symbol-module: $(symbol-module)
	//  - symbol-package: $(symbol-package)
	//  - symbol-namespace: $(symbol-namespace)
	//  - symbol-object: $(symbol-object)
	//  - symbol-method: $(symbol-method)
	//  - symbol-function: $(symbol-function)
	//  - symbol-constructor: $(symbol-constructor)
	//  - symbol-boolean: $(symbol-boolean)
	//  - symbol-null: $(symbol-null)
	//  - symbol-numeric: $(symbol-numeric)
	//  - symbol-number: $(symbol-number)
	//  - symbol-structure: $(symbol-structure)
	//  - symbol-struct: $(symbol-struct)
	//  - symbol-parameter: $(symbol-parameter)
	//  - symbol-type-parameter: $(symbol-type-parameter)
	//  - symbol-key: $(symbol-key)
	//  - symbol-text: $(symbol-text)
	//  - symbol-reference: $(symbol-reference)
	//  - go-to-file: $(go-to-file)
	//  - symbol-enum: $(symbol-enum)
	//  - symbol-value: $(symbol-value)
	//  - symbol-ruler: $(symbol-ruler)
	//  - symbol-unit: $(symbol-unit)
	//  - activate-breakpoints: $(activate-breakpoints)
	//  - archive: $(archive)
	//  - arrow-both: $(arrow-both)
	//  - arrow-down: $(arrow-down)
	//  - arrow-left: $(arrow-left)
	//  - arrow-right: $(arrow-right)
	//  - arrow-small-down: $(arrow-small-down)
	//  - arrow-small-left: $(arrow-small-left)
	//  - arrow-small-right: $(arrow-small-right)
	//  - arrow-small-up: $(arrow-small-up)
	//  - arrow-up: $(arrow-up)
	//  - bell: $(bell)
	//  - bold: $(bold)
	//  - book: $(book)
	//  - bookmark: $(bookmark)
	//  - debug-breakpoint-conditional-unverified: $(debug-breakpoint-conditional-unverified)
	//  - debug-breakpoint-conditional: $(debug-breakpoint-conditional)
	//  - debug-breakpoint-conditional-disabled: $(debug-breakpoint-conditional-disabled)
	//  - debug-breakpoint-data-unverified: $(debug-breakpoint-data-unverified)
	//  - debug-breakpoint-data: $(debug-breakpoint-data)
	//  - debug-breakpoint-data-disabled: $(debug-breakpoint-data-disabled)
	//  - debug-breakpoint-log-unverified: $(debug-breakpoint-log-unverified)
	//  - debug-breakpoint-log: $(debug-breakpoint-log)
	//  - debug-breakpoint-log-disabled: $(debug-breakpoint-log-disabled)
	//  - briefcase: $(briefcase)
	//  - broadcast: $(broadcast)
	//  - browser: $(browser)
	//  - bug: $(bug)
	//  - calendar: $(calendar)
	//  - case-sensitive: $(case-sensitive)
	//  - check: $(check)
	//  - checklist: $(checklist)
	//  - chevron-down: $(chevron-down)
	//  - drop-down-button: $(drop-down-button)
	//  - chevron-left: $(chevron-left)
	//  - chevron-right: $(chevron-right)
	//  - chevron-up: $(chevron-up)
	//  - chrome-close: $(chrome-close)
	//  - chrome-maximize: $(chrome-maximize)
	//  - chrome-minimize: $(chrome-minimize)
	//  - chrome-restore: $(chrome-restore)
	//  - circle-outline: $(circle-outline)
	//  - debug-breakpoint-unverified: $(debug-breakpoint-unverified)
	//  - circle-slash: $(circle-slash)
	//  - circuit-board: $(circuit-board)
	//  - clear-all: $(clear-all)
	//  - clippy: $(clippy)
	//  - close-all: $(close-all)
	//  - cloud-download: $(cloud-download)
	//  - cloud-upload: $(cloud-upload)
	//  - code: $(code)
	//  - collapse-all: $(collapse-all)
	//  - color-mode: $(color-mode)
	//  - comment-discussion: $(comment-discussion)
	//  - compare-changes: $(compare-changes)
	//  - credit-card: $(credit-card)
	//  - dash: $(dash)
	//  - dashboard: $(dashboard)
	//  - database: $(database)
	//  - debug-continue: $(debug-continue)
	//  - debug-disconnect: $(debug-disconnect)
	//  - debug-pause: $(debug-pause)
	//  - debug-restart: $(debug-restart)
	//  - debug-start: $(debug-start)
	//  - debug-step-into: $(debug-step-into)
	//  - debug-step-out: $(debug-step-out)
	//  - debug-step-over: $(debug-step-over)
	//  - debug-stop: $(debug-stop)
	//  - debug: $(debug)
	//  - device-camera-video: $(device-camera-video)
	//  - device-camera: $(device-camera)
	//  - device-mobile: $(device-mobile)
	//  - diff-added: $(diff-added)
	//  - diff-ignored: $(diff-ignored)
	//  - diff-modified: $(diff-modified)
	//  - diff-removed: $(diff-removed)
	//  - diff-renamed: $(diff-renamed)
	//  - diff: $(diff)
	//  - discard: $(discard)
	//  - editor-layout: $(editor-layout)
	//  - empty-window: $(empty-window)
	//  - exclude: $(exclude)
	//  - extensions: $(extensions)
	//  - eye-closed: $(eye-closed)
	//  - file-binary: $(file-binary)
	//  - file-code: $(file-code)
	//  - file-media: $(file-media)
	//  - file-pdf: $(file-pdf)
	//  - file-submodule: $(file-submodule)
	//  - file-symlink-directory: $(file-symlink-directory)
	//  - file-symlink-file: $(file-symlink-file)
	//  - file-zip: $(file-zip)
	//  - files: $(files)
	//  - filter: $(filter)
	//  - flame: $(flame)
	//  - fold-down: $(fold-down)
	//  - fold-up: $(fold-up)
	//  - fold: $(fold)
	//  - folder-active: $(folder-active)
	//  - folder-opened: $(folder-opened)
	//  - gear: $(gear)
	//  - gift: $(gift)
	//  - gist-secret: $(gist-secret)
	//  - gist: $(gist)
	//  - git-commit: $(git-commit)
	//  - git-compare: $(git-compare)
	//  - git-merge: $(git-merge)
	//  - github-action: $(github-action)
	//  - github-alt: $(github-alt)
	//  - globe: $(globe)
	//  - grabber: $(grabber)
	//  - graph: $(graph)
	//  - gripper: $(gripper)
	//  - heart: $(heart)
	//  - home: $(home)
	//  - horizontal-rule: $(horizontal-rule)
	//  - hubot: $(hubot)
	//  - inbox: $(inbox)
	//  - issue-closed: $(issue-closed)
	//  - issue-reopened: $(issue-reopened)
	//  - issues: $(issues)
	//  - italic: $(italic)
	//  - jersey: $(jersey)
	//  - json: $(json)
	//  - kebab-vertical: $(kebab-vertical)
	//  - key: $(key)
	//  - law: $(law)
	//  - lightbulb-autofix: $(lightbulb-autofix)
	//  - link-external: $(link-external)
	//  - link: $(link)
	//  - list-ordered: $(list-ordered)
	//  - list-unordered: $(list-unordered)
	//  - live-share: $(live-share)
	//  - loading: $(loading)
	//  - location: $(location)
	//  - mail-read: $(mail-read)
	//  - mail: $(mail)
	//  - markdown: $(markdown)
	//  - megaphone: $(megaphone)
	//  - mention: $(mention)
	//  - milestone: $(milestone)
	//  - mortar-board: $(mortar-board)
	//  - move: $(move)
	//  - multiple-windows: $(multiple-windows)
	//  - mute: $(mute)
	//  - no-newline: $(no-newline)
	//  - note: $(note)
	//  - octoface: $(octoface)
	//  - open-preview: $(open-preview)
	//  - package: $(package)
	//  - paintcan: $(paintcan)
	//  - pin: $(pin)
	//  - play: $(play)
	//  - run: $(run)
	//  - plug: $(plug)
	//  - preserve-case: $(preserve-case)
	//  - preview: $(preview)
	//  - project: $(project)
	//  - pulse: $(pulse)
	//  - question: $(question)
	//  - quote: $(quote)
	//  - radio-tower: $(radio-tower)
	//  - reactions: $(reactions)
	//  - references: $(references)
	//  - refresh: $(refresh)
	//  - regex: $(regex)
	//  - remote-explorer: $(remote-explorer)
	//  - remote: $(remote)
	//  - remove: $(remove)
	//  - replace-all: $(replace-all)
	//  - replace: $(replace)
	//  - repo-clone: $(repo-clone)
	//  - repo-force-push: $(repo-force-push)
	//  - repo-pull: $(repo-pull)
	//  - repo-push: $(repo-push)
	//  - report: $(report)
	//  - request-changes: $(request-changes)
	//  - rocket: $(rocket)
	//  - root-folder-opened: $(root-folder-opened)
	//  - root-folder: $(root-folder)
	//  - rss: $(rss)
	//  - ruby: $(ruby)
	//  - save-all: $(save-all)
	//  - save-as: $(save-as)
	//  - save: $(save)
	//  - screen-full: $(screen-full)
	//  - screen-normal: $(screen-normal)
	//  - search-stop: $(search-stop)
	//  - server: $(server)
	//  - settings-gear: $(settings-gear)
	//  - settings: $(settings)
	//  - shield: $(shield)
	//  - smiley: $(smiley)
	//  - sort-precedence: $(sort-precedence)
	//  - split-horizontal: $(split-horizontal)
	//  - split-vertical: $(split-vertical)
	//  - squirrel: $(squirrel)
	//  - star-full: $(star-full)
	//  - star-half: $(star-half)
	//  - symbol-class: $(symbol-class)
	//  - symbol-color: $(symbol-color)
	//  - symbol-customcolor: $(symbol-customcolor)
	//  - symbol-constant: $(symbol-constant)
	//  - symbol-enum-member: $(symbol-enum-member)
	//  - symbol-field: $(symbol-field)
	//  - symbol-file: $(symbol-file)
	//  - symbol-interface: $(symbol-interface)
	//  - symbol-keyword: $(symbol-keyword)
	//  - symbol-misc: $(symbol-misc)
	//  - symbol-operator: $(symbol-operator)
	//  - symbol-property: $(symbol-property)
	//  - wrench: $(wrench)
	//  - wrench-subaction: $(wrench-subaction)
	//  - symbol-snippet: $(symbol-snippet)
	//  - tasklist: $(tasklist)
	//  - telescope: $(telescope)
	//  - text-size: $(text-size)
	//  - three-bars: $(three-bars)
	//  - thumbsdown: $(thumbsdown)
	//  - thumbsup: $(thumbsup)
	//  - tools: $(tools)
	//  - triangle-down: $(triangle-down)
	//  - triangle-left: $(triangle-left)
	//  - triangle-right: $(triangle-right)
	//  - triangle-up: $(triangle-up)
	//  - twitter: $(twitter)
	//  - unfold: $(unfold)
	//  - unlock: $(unlock)
	//  - unmute: $(unmute)
	//  - unverified: $(unverified)
	//  - verified: $(verified)
	//  - versions: $(versions)
	//  - vm-active: $(vm-active)
	//  - vm-outline: $(vm-outline)
	//  - vm-running: $(vm-running)
	//  - watch: $(watch)
	//  - whitespace: $(whitespace)
	//  - whole-word: $(whole-word)
	//  - window: $(window)
	//  - word-wrap: $(word-wrap)
	//  - zoom-in: $(zoom-in)
	//  - zoom-out: $(zoom-out)
	//  - list-filter: $(list-filter)
	//  - list-flat: $(list-flat)
	//  - list-selection: $(list-selection)
	//  - selection: $(selection)
	//  - list-tree: $(list-tree)
	//  - debug-breakpoint-function-unverified: $(debug-breakpoint-function-unverified)
	//  - debug-breakpoint-function: $(debug-breakpoint-function)
	//  - debug-breakpoint-function-disabled: $(debug-breakpoint-function-disabled)
	//  - debug-stackframe-active: $(debug-stackframe-active)
	//  - circle-small-filled: $(circle-small-filled)
	//  - debug-stackframe-dot: $(debug-stackframe-dot)
	//  - debug-stackframe: $(debug-stackframe)
	//  - debug-stackframe-focused: $(debug-stackframe-focused)
	//  - debug-breakpoint-unsupported: $(debug-breakpoint-unsupported)
	//  - symbol-string: $(symbol-string)
	//  - debug-reverse-continue: $(debug-reverse-continue)
	//  - debug-step-back: $(debug-step-back)
	//  - debug-restart-frame: $(debug-restart-frame)
	//  - call-incoming: $(call-incoming)
	//  - call-outgoing: $(call-outgoing)
	//  - menu: $(menu)
	//  - expand-all: $(expand-all)
	//  - feedback: $(feedback)
	//  - group-by-ref-type: $(group-by-ref-type)
	//  - ungroup-by-ref-type: $(ungroup-by-ref-type)
	//  - account: $(account)
	//  - bell-dot: $(bell-dot)
	//  - debug-console: $(debug-console)
	//  - library: $(library)
	//  - output: $(output)
	//  - run-all: $(run-all)
	//  - sync-ignored: $(sync-ignored)
	//  - pinned: $(pinned)
	//  - github-inverted: $(github-inverted)
	//  - debug-alt: $(debug-alt)
	//  - server-process: $(server-process)
	//  - server-environment: $(server-environment)
	//  - pass: $(pass)
	//  - stop-circle: $(stop-circle)
	//  - play-circle: $(play-circle)
	//  - record: $(record)
	//  - debug-alt-small: $(debug-alt-small)
	//  - vm-connect: $(vm-connect)
	//  - cloud: $(cloud)
	//  - merge: $(merge)
	//  - export: $(export)
	//  - graph-left: $(graph-left)
	//  - magnet: $(magnet)
	//  - notebook: $(notebook)
	//  - redo: $(redo)
	//  - check-all: $(check-all)
	//  - pinned-dirty: $(pinned-dirty)
	//  - pass-filled: $(pass-filled)
	//  - circle-large-filled: $(circle-large-filled)
	//  - circle-large-outline: $(circle-large-outline)
	//  - combine: $(combine)
	//  - gather: $(gather)
	//  - table: $(table)
	//  - variable-group: $(variable-group)
	//  - type-hierarchy: $(type-hierarchy)
	//  - type-hierarchy-sub: $(type-hierarchy-sub)
	//  - type-hierarchy-super: $(type-hierarchy-super)
	//  - git-pull-request-create: $(git-pull-request-create)
	//  - run-above: $(run-above)
	//  - run-below: $(run-below)
	//  - notebook-template: $(notebook-template)
	//  - debug-rerun: $(debug-rerun)
	//  - workspace-trusted: $(workspace-trusted)
	//  - workspace-untrusted: $(workspace-untrusted)
	//  - workspace-unspecified: $(workspace-unspecified)
	//  - terminal-cmd: $(terminal-cmd)
	//  - terminal-debian: $(terminal-debian)
	//  - terminal-linux: $(terminal-linux)
	//  - terminal-powershell: $(terminal-powershell)
	//  - terminal-tmux: $(terminal-tmux)
	//  - terminal-ubuntu: $(terminal-ubuntu)
	//  - terminal-bash: $(terminal-bash)
	//  - arrow-swap: $(arrow-swap)
	//  - copy: $(copy)
	//  - person-add: $(person-add)
	//  - filter-filled: $(filter-filled)
	//  - wand: $(wand)
	//  - debug-line-by-line: $(debug-line-by-line)
	//  - inspect: $(inspect)
	//  - layers: $(layers)
	//  - layers-dot: $(layers-dot)
	//  - layers-active: $(layers-active)
	//  - compass: $(compass)
	//  - compass-dot: $(compass-dot)
	//  - compass-active: $(compass-active)
	//  - azure: $(azure)
	//  - issue-draft: $(issue-draft)
	//  - git-pull-request-closed: $(git-pull-request-closed)
	//  - git-pull-request-draft: $(git-pull-request-draft)
	//  - debug-all: $(debug-all)
	//  - debug-coverage: $(debug-coverage)
	//  - run-errors: $(run-errors)
	//  - folder-library: $(folder-library)
	//  - debug-continue-small: $(debug-continue-small)
	//  - beaker-stop: $(beaker-stop)
	//  - graph-line: $(graph-line)
	//  - graph-scatter: $(graph-scatter)
	//  - pie-chart: $(pie-chart)
	//  - bracket: $(bracket)
	//  - bracket-dot: $(bracket-dot)
	//  - bracket-error: $(bracket-error)
	//  - lock-small: $(lock-small)
	//  - azure-devops: $(azure-devops)
	//  - verified-filled: $(verified-filled)
	//  - newline: $(newline)
	//  - layout: $(layout)
	//  - layout-activitybar-left: $(layout-activitybar-left)
	//  - layout-activitybar-right: $(layout-activitybar-right)
	//  - layout-panel-left: $(layout-panel-left)
	//  - layout-panel-center: $(layout-panel-center)
	//  - layout-panel-justify: $(layout-panel-justify)
	//  - layout-panel-right: $(layout-panel-right)
	//  - layout-panel: $(layout-panel)
	//  - layout-sidebar-left: $(layout-sidebar-left)
	//  - layout-sidebar-right: $(layout-sidebar-right)
	//  - layout-statusbar: $(layout-statusbar)
	//  - layout-menubar: $(layout-menubar)
	//  - layout-centered: $(layout-centered)
	//  - layout-sidebar-right-off: $(layout-sidebar-right-off)
	//  - layout-panel-off: $(layout-panel-off)
	//  - layout-sidebar-left-off: $(layout-sidebar-left-off)
	//  - target: $(target)
	//  - indent: $(indent)
	//  - record-small: $(record-small)
	//  - error-small: $(error-small)
	//  - arrow-circle-down: $(arrow-circle-down)
	//  - arrow-circle-left: $(arrow-circle-left)
	//  - arrow-circle-right: $(arrow-circle-right)
	//  - arrow-circle-up: $(arrow-circle-up)
	//  - heart-filled: $(heart-filled)
	//  - map: $(map)
	//  - map-filled: $(map-filled)
	//  - circle-small: $(circle-small)
	//  - bell-slash: $(bell-slash)
	//  - bell-slash-dot: $(bell-slash-dot)
	//  - comment-unresolved: $(comment-unresolved)
	//  - git-pull-request-go-to-changes: $(git-pull-request-go-to-changes)
	//  - git-pull-request-new-changes: $(git-pull-request-new-changes)
	//  - dialog-error: $(dialog-error)
	//  - dialog-warning: $(dialog-warning)
	//  - dialog-info: $(dialog-info)
	//  - dialog-close: $(dialog-close)
	//  - tree-item-expanded: $(tree-item-expanded)
	//  - tree-filter-on-type-on: $(tree-filter-on-type-on)
	//  - tree-filter-on-type-off: $(tree-filter-on-type-off)
	//  - tree-filter-clear: $(tree-filter-clear)
	//  - tree-item-loading: $(tree-item-loading)
	//  - menu-selection: $(menu-selection)
	//  - menu-submenu: $(menu-submenu)
	//  - menubar-more: $(menubar-more)
	//  - scrollbar-button-left: $(scrollbar-button-left)
	//  - scrollbar-button-right: $(scrollbar-button-right)
	//  - scrollbar-button-up: $(scrollbar-button-up)
	//  - scrollbar-button-down: $(scrollbar-button-down)
	//  - toolbar-more: $(toolbar-more)
	//  - quick-input-back: $(quick-input-back)
	"terminal.integrated.tabs.defaultIcon": "terminal",

	// Controla a descrição do terminal, que aparece à direita do título. As variáveis são substituídas de acordo com o contexto:
	// - `${cwd}`: o diretório de trabalho atual do terminal
	// - `${cwdFolder}`: o diretório de trabalho atual do terminal, exibido para espaços de trabalho de várias raízes ou em um único espaço de trabalho raiz quando o valor difere do diretório de trabalho inicial. No Windows, isto só será exibido quando a integração do shell estiver ativada.
	// - `${workspaceFolder}`: o workspace no qual o terminal foi inicializado
	// - `${local}`: indica um terminal local em um workspace remoto
	// - `${process}`: o nome do processo de terminal
	// - `${separator}`: um separador condicional (” - “) que só será exibido quando cercado por variáveis com valores ou texto estático.
	// - `${sequence}`: o nome fornecido pelo processo ao terminal
	// - `${task}`: indica que este terminal está associado a uma tarefa
	"terminal.integrated.tabs.description": "${task}${separator}${local}${separator}${cwdFolder}",

	// Controla se os status da guia do terminal suportam animação (por exemplo, tarefas em andamento).
	"terminal.integrated.tabs.enableAnimation": true,

	// Controla se as guias de terminal são exibidas como uma lista no lado do terminal. Quando desabilitada, uma lista suspensa será exibida.
	"terminal.integrated.tabs.enabled": true,

	// Controla se a concentração do terminal de uma guia acontece com um clique duplo ou único.
	//  - singleClick: Focalizar o terminal ao clicar duas vezes em uma guia de terminal
	//  - doubleClick: Concentrar o terminal ao clicar duas vezes em uma guia de terminal
	"terminal.integrated.tabs.focusMode": "doubleClick",

	// Controla se a exibição de guias de terminal será ocultada em determinadas condições.
	//  - never: Nunca ocultar a exibição das guias do terminal
	//  - singleTerminal: Ocultar a visualização das guias do terminal quando houver apenas um único terminal aberto
	//  - singleGroup: Ocultar o modo de exibição das guias de terminal quando houver apenas um único grupo de terminal aberto
	"terminal.integrated.tabs.hideCondition": "singleTerminal",

	// Controla o local das guias de terminal, à esquerda ou à direita do(s) terminal(is) atual(is).
	//  - left: Mostrar o modo de exibição das guias do terminal à esquerda do terminal
	//  - right: Mostrar o modo de exibição das guias do terminal à direita do terminal
	"terminal.integrated.tabs.location": "right",

	// Separador usado por `terminal.integrated.tabs.title` e `terminal.integrated.tabs.title`.
	"terminal.integrated.tabs.separator": " - ",

	// Controla se os botões de divisão e eliminação do terminal são exibidos ao lado do novo botão do terminal.
	//  - always: Sempre mostrar as ações
	//  - singleTerminal: Mostrar as ações quando é o único terminal aberto
	//  - singleTerminalOrNarrow: Mostra as ações quando é o único terminal aberto ou quando as abas estão em seu estado estreito sem texto
	//  - never: Nunca mostrar as ações
	"terminal.integrated.tabs.showActions": "singleTerminalOrNarrow",

	// Mostra as informações de terminal ativas no modo de exibição, isso é particularmente útil quando o título dentro das guias não está visível.
	//  - always: Sempre mostrar o terminal ativo
	//  - singleTerminal: Mostrar o terminal ativo quando ele for o único terminal aberto
	//  - singleTerminalOrNarrow: Mostrar o terminal ativo quando ele for o único terminal aberto ou quando o modo de exibição de guias estiver em seu estado de texto restrito
	//  - never: Nunca mostrar o terminal ativo
	"terminal.integrated.tabs.showActiveTerminal": "singleTerminalOrNarrow",

	// Controla o título do terminal. As variáveis são substituídas de acordo com o contexto:
	// - `${cwd}`: o diretório de trabalho atual do terminal
	// - `${cwdFolder}`: o diretório de trabalho atual do terminal, exibido para espaços de trabalho de várias raízes ou em um único espaço de trabalho raiz quando o valor difere do diretório de trabalho inicial. No Windows, isto só será exibido quando a integração do shell estiver ativada.
	// - `${workspaceFolder}`: o workspace no qual o terminal foi inicializado
	// - `${local}`: indica um terminal local em um workspace remoto
	// - `${process}`: o nome do processo de terminal
	// - `${separator}`: um separador condicional (” - “) que só será exibido quando cercado por variáveis com valores ou texto estático.
	// - `${sequence}`: o nome fornecido pelo processo ao terminal
	// - `${task}`: indica que este terminal está associado a uma tarefa
	"terminal.integrated.tabs.title": "${process}",

	// Controla qual versão do unicode será usada ao avaliar a largura dos caracteres no terminal. Se um emoji ou outros caracteres largos não ocupar a quantidade correta de espaço ou backspace, excluindo demais ou muito pouco, talvez seja necessário tentar ajustar essa configuração.
	//  - 6: Versão 6 do Unicode. Esta é uma versão mais antiga que deve funcionar melhor em sistemas mais antigos.
	//  - 11: Versão 11 do Unicode. Esta versão fornece um suporte melhor em sistemas modernos que usam versões modernas do Unicode.
	"terminal.integrated.unicodeVersion": "11",

	// Controla se as distribuições do WSL são mostradas no menu suspenso do terminal
	"terminal.integrated.useWslProfiles": true,

	// Se deve ser usado o ConPTY para comunicação do processo de terminal do Windows (exige o número de build 18309 ou posteriores do Windows 10). Winpty será usado se isso for false.
	"terminal.integrated.windowsEnableConpty": true,

	// Uma cadeia de caracteres contendo todos os caracteres a serem considerados separadores de palavras ao clicar duas vezes para selecionar o recurso de palavra.
	"terminal.integrated.wordSeparators": " ()[]{}',\"`─‘’",

	// Controla se o modo de exibição de Problemas deve revelar os arquivos automaticamente ao abri-los.
	"problems.autoReveal": true,

	// Mostrar Erros & Avisos em arquivos e pastas.
	"problems.decorations.enabled": true,

	// Controla o modo de exibição padrão do modo de exibição Problemas.
	"problems.defaultViewMode": "tree",

	// Quando habilitado, mostra o problema atual na barra de status.
	"problems.showCurrentInStatus": false,

	// Controla a ordem em que os problemas são navegados.
	//  - severity: Navegar por problemas ordenados por severidade
	//  - position: Navegar por problemas ordenados por posição
	"problems.sortOrder": "severity",

	// Habilitar/desabilitar trilhas de navegação.
	"breadcrumbs.enabled": true,

	// Controla se e como os caminhos de arquivo são mostrados no modo de exibição de trilhas.
	//  - on: Mostrar o caminho do arquivo no modo de exibição de trilhas.
	//  - off: Não mostrar o caminho do arquivo no modo de exibição estrutural.
	//  - last: Somente mostrar o último elemento do caminho do arquivo no modo de exibição de trilhas.
	"breadcrumbs.filePath": "on",

	// Renderizar itens de trilha com ícones.
	"breadcrumbs.icons": true,

	// Quando as trilhas habilitadas mostram símbolos `array`.
	"breadcrumbs.showArrays": true,

	// Quando as trilhas habilitadas mostram símbolos `boolean`.
	"breadcrumbs.showBooleans": true,

	// Quando as trilhas habilitadas mostram símbolos `class`.
	"breadcrumbs.showClasses": true,

	// Quando as trilhas habilitadas mostram símbolos `constant`.
	"breadcrumbs.showConstants": true,

	// Quando as trilhas habilitadas mostram símbolos `constructor`.
	"breadcrumbs.showConstructors": true,

	// Quando as trilhas habilitadas mostram símbolos `enumMember`.
	"breadcrumbs.showEnumMembers": true,

	// Quando as trilhas habilitadas mostram símbolos `enum`.
	"breadcrumbs.showEnums": true,

	// Quando as trilhas habilitadas mostram símbolos `event`.
	"breadcrumbs.showEvents": true,

	// Quando as trilhas habilitadas mostram símbolos `field`.
	"breadcrumbs.showFields": true,

	// Quando as trilhas habilitadas mostram símbolos `file`.
	"breadcrumbs.showFiles": true,

	// Quando as trilhas habilitadas mostram símbolos `function`.
	"breadcrumbs.showFunctions": true,

	// Quando as trilhas habilitadas mostram símbolos `interface`.
	"breadcrumbs.showInterfaces": true,

	// Quando as trilhas habilitadas mostram símbolos `key`.
	"breadcrumbs.showKeys": true,

	// Quando as trilhas habilitadas mostram símbolos `method`.
	"breadcrumbs.showMethods": true,

	// Quando as trilhas habilitadas mostram símbolos `module`.
	"breadcrumbs.showModules": true,

	// Quando as trilhas habilitadas mostram símbolos `namespace`.
	"breadcrumbs.showNamespaces": true,

	// Quando as trilhas habilitadas mostram símbolos `null`.
	"breadcrumbs.showNull": true,

	// Quando as trilhas habilitadas mostram símbolos `number`.
	"breadcrumbs.showNumbers": true,

	// Quando as trilhas habilitadas mostram símbolos `object`.
	"breadcrumbs.showObjects": true,

	// Quando as trilhas habilitadas mostram símbolos `operator`.
	"breadcrumbs.showOperators": true,

	// Quando as trilhas habilitadas mostram símbolos `package`.
	"breadcrumbs.showPackages": true,

	// Quando as trilhas habilitadas mostram símbolos `property`.
	"breadcrumbs.showProperties": true,

	// Quando as trilhas habilitadas mostram símbolos `string`.
	"breadcrumbs.showStrings": true,

	// Quando as trilhas habilitadas mostram símbolos `struct`.
	"breadcrumbs.showStructs": true,

	// Quando as trilhas habilitadas mostram símbolos `typeParameter`.
	"breadcrumbs.showTypeParameters": true,

	// Quando as trilhas habilitadas mostram símbolos `variable`.
	"breadcrumbs.showVariables": true,

	// Controla se e como os símbolos são mostrados no modo de exibição de trilhas.
	//  - on: Mostrar todos os símbolos na exibição trilhas.
	//  - off: Não mostrar símbolos no modo de exibição estrutural.
	//  - last: Somente mostrar o símbolo atual no modo de exibição de trilhas.
	"breadcrumbs.symbolPath": "on",

	// Controla como os símbolos são classificados no modo de exibição da estrutura do código de trilha.
	//  - position: Mostrar estrutura de tópicos do símbolo na ordem de posição do arquivo.
	//  - name: Mostrar estrutura de tópicos do símbolo em ordem alfabética.
	//  - type: Mostrar estrutura de tópicos do símbolo em ordem de tipo de símbolo.
	"breadcrumbs.symbolSortOrder": "position",

	// Se esta configuração for falsa, nenhuma telemetria será enviada, independentemente do valor da nova configuração. Preterido devido à combinação na configuração `telemetry.telemetryLevel`.
	// Habilite os relatórios de erro que serão coletados. Isso nos ajuda a melhorar a estabilidade. 
	// Essa opção requer a reinicialização para ter efeito.
	"telemetry.enableCrashReporter": true,

	// Se esta configuração for falsa, nenhuma telemetria será enviada, independentemente do valor da nova configuração. Preterido em favor da configuração `telemetry.telemetryLevel`.
	// Habilite os dados de diagnóstico que serão coletados. Isso nos ajuda a melhor entender como Visual Studio Code é executado e onde as melhorias precisam ser feitas. [Leia mais](https://go.microsoft.com/fwlink/?LinkId=786907) sobre o que coletamos e nossa política de privacidade.
	"telemetry.enableTelemetry": true,

	// 
	// Controla a telemetria Visual Studio Code, a telemetria de extensão internar e a telemetria de extensão de terceiros participantes. Algumas extensões de terceiros podem não respeitar essa configuração. Consulte a documentação da extensão específica para ter certeza. A telemetria nos ajuda a entender melhor o desempenho de Visual Studio Code, onde as melhorias precisam ser feitas e como os recursos estão sendo usados. Leia mais sobre os [dados coletados](https://aka.ms/vscode-telemetry) e nossa [política de privacidade](https://go.microsoft.com/fwlink/?LinkId=786907). Será necessário uma reinicialização completa do aplicativo para que as alterações do relatório de falhas entrem em vigor.
	// 
	// &nbsp;
	// 
	// A tabela a seguir descreve os dados enviados com cada configuração:
	// 
	// |       | Relatórios de Falhas | Telemetria de Erro | Dados de Uso |
	// |:------|:---------------------:|:---------------:|:--------------:|
	// | all   |            ✓          |        ✓        |        ✓       |
	// | error |            ✓          |        ✓        |        -       |
	// | crash |            ✓          |        -        |        -       |
	// | off   |            -          |        -        |        -       |
	// 
	// 
	// &nbsp;
	// 
	// ****Observação:*** se esta configuração estiver “desativada”, nenhuma telemetria será enviada independentemente de outras configurações de telemetria. Se essa configuração estiver definida como qualquer coisa, exceto “desativada”, e a telemetria estiver desabilitada com configurações preteridas, nenhuma telemetria será enviada.*
	// 
	//  - all: Envia dados de uso, erros e relatórios de falhas.
	//  - error: Envia relatórios gerais de telemetria e falhas de erros.
	//  - crash: Envia relatórios de falhas no nível do sistema operacional.
	//  - off: Desabilita toda a telemetria do produto.
	"telemetry.telemetryLevel": "all",

	// Renderizar Elementos de Estrutura de Tópicos com Ícones.
	"outline.icons": true,

	// Usar selos para Erros & Avisos.
	"outline.problems.badges": true,

	// Usar cores para Erros & Avisos.
	"outline.problems.colors": true,

	// Mostrar Erros & Avisos nos Elementos da Estrutura de Tópicos.
	"outline.problems.enabled": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `array`.
	"outline.showArrays": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `boolean`.
	"outline.showBooleans": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `class`.
	"outline.showClasses": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `constant`.
	"outline.showConstants": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `constructor`.
	"outline.showConstructors": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `enumMember`.
	"outline.showEnumMembers": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `enum`.
	"outline.showEnums": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `event`.
	"outline.showEvents": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `field`.
	"outline.showFields": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `file`.
	"outline.showFiles": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `function`.
	"outline.showFunctions": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `interface`.
	"outline.showInterfaces": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `key`.
	"outline.showKeys": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `method`.
	"outline.showMethods": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `module`.
	"outline.showModules": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `namespace`.
	"outline.showNamespaces": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `null`.
	"outline.showNull": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `number`.
	"outline.showNumbers": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `object`.
	"outline.showObjects": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `operator`.
	"outline.showOperators": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `package`.
	"outline.showPackages": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `property`.
	"outline.showProperties": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `string`.
	"outline.showStrings": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `struct`.
	"outline.showStructs": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `typeParameter`.
	"outline.showTypeParameters": true,

	// Quando habilitada, a estrutura de tópicos mostra símbolos `variable`.
	"outline.showVariables": true,

	// Uma matriz de origens de Linha do tempo que deve ser excluída da Exibição de linha do tempo.
	"timeline.excludeSources": null,

	// Experimental. Controla se a Exibição de linha do tempo carregará a próxima página de itens quando você rolar até o final da lista.
	"timeline.pageOnScroll": false,

	// O número de itens a serem mostrados na Exibição de linha do tempo por padrão e ao carregar mais itens. A configuração como `null` (o padrão) escolherá automaticamente um tamanho de página com base na área visível da Exibição de linha do tempo.
	"timeline.pageSize": null,

	// Definir configurações que serão substituídas pela css linguagem.
	"[css]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela dockercompose linguagem.
	"[dockercompose]":  {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced"
	},

	// Definir configurações que serão substituídas pela dockerfile linguagem.
	"[dockerfile]":  {
		"editor.quickSuggestions": {
				"strings": true
		}
	},

	// Definir configurações que serão substituídas pela git-commit linguagem.
	"[git-commit]":  {
		"editor.rulers": [
				72
		],
		"workbench.editor.restoreViewState": false
	},

	// Definir configurações que serão substituídas pela git-rebase linguagem.
	"[git-rebase]":  {
		"workbench.editor.restoreViewState": false
	},

	// Definir configurações que serão substituídas pela go linguagem.
	"[go]":  {
		"editor.insertSpaces": false
	},

	// Definir configurações que serão substituídas pela handlebars linguagem.
	"[handlebars]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela html linguagem.
	"[html]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela javascript linguagem.
	"[javascript]":  {
		"editor.maxTokenizationLineLength": 2500
	},

	// Definir configurações que serão substituídas pela json linguagem.
	"[json]":  {
		"editor.quickSuggestions": {
				"strings": true
		},
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela jsonc linguagem.
	"[jsonc]":  {
		"editor.quickSuggestions": {
				"strings": true
		},
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela less linguagem.
	"[less]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela makefile linguagem.
	"[makefile]":  {
		"editor.insertSpaces": false
	},

	// Definir configurações que serão substituídas pela markdown linguagem.
	"[markdown]":  {
		"editor.unicodeHighlight.ambiguousCharacters": false,
		"editor.unicodeHighlight.invisibleCharacters": false,
		"editor.wordWrap": "on",
		"editor.quickSuggestions": false
	},

	// Definir configurações que serão substituídas pela plaintext linguagem.
	"[plaintext]":  {
		"editor.unicodeHighlight.ambiguousCharacters": false,
		"editor.unicodeHighlight.invisibleCharacters": false
	},

	// Definir configurações que serão substituídas pela scss linguagem.
	"[scss]":  {
		"editor.suggest.insertMode": "replace"
	},

	// Definir configurações que serão substituídas pela search-result linguagem.
	"[search-result]":  {
		"editor.lineNumbers": "off"
	},

	// Definir configurações que serão substituídas pela shellscript linguagem.
	"[shellscript]":  {
		"files.eol": "\n"
	},

	// Definir configurações que serão substituídas pela yaml linguagem.
	"[yaml]":  {
		"editor.insertSpaces": true,
		"editor.tabSize": 2,
		"editor.autoIndent": "advanced"
	},

	// Deprecated. Use the specific setting for each audio cue instead (`audioCues.*`).
	// 
	"audioCues.enabled": null,

	// Reproduz um som quando a linha ativa tem um ponto de interrupção.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasBreakpoint": "auto",

	// Reproduz um som quando a linha ativa tem um erro.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasError": "auto",

	// Reproduz um som quando a linha ativa tem uma área dobrada que pode ser desdobrada.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasFoldedArea": "auto",

	// Reproduz um som quando a linha ativa tem uma sugestão embutida.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasInlineSuggestion": "auto",

	// Reproduz um som quando a linha ativa tem um aviso.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.lineHasWarning": "off",

	// Reproduz um som ao tentar ler uma linha com dicas embutidas que não tenhas estas dicas.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.noInlayHints": "auto",

	// Reproduz um som quando o depurador parou em um ponto de interrupção.
	//  - auto: Habilitar dicas de áudio quando um leitor de tela estiver conectado.
	//  - on: Habilitar dica de áudio.
	//  - off: Desabilitar as dicas de áudio.
	"audioCues.onDebugBreak": "auto",

	// O volume das dicas de áudio em porcentagem (0-100).
	"audioCues.volume": 70,

	// Quando habilitada, novos processos em execução são detectados e as portas nas quais eles escutam são encaminhadas automaticamente. Desabilitar esta configuração não impedirá que todas as portas sejam encaminhadas. Mesmo quando desabilitadas, as extensões ainda poderão fazer com que as portas sejam encaminhadas, e a abertura de alguns URLs ainda fará com que as portas sejam encaminhadas.
	"remote.autoForwardPorts": true,

	// Define a origem da qual as portas são encaminhadas automaticamente quando `remote.autoForwardPorts` é verdadeiro. Em controles remotos Windows e Mac, a opção `process` não tem efeito e `output` será usado. Requer uma recarga para ter efeito.
	//  - process: As portas serão encaminhadas automaticamente quando descobertas pela inspeção dos processos que forem iniciados e incluírem uma porta.
	//  - output: As portas serão encaminhadas automaticamente quando descobertas pela leitura da saída do terminal e da depuração. Nem todos os processos que usam portas serão impressos no terminal integrado ou no console de depuração, portanto algumas portas serão perdidas. As portas encaminhadas com base na saída não serão "revertidas" até a recarga ou até que a porta seja fechada pelo usuário na exibição Portas.
	"remote.autoForwardPortsSource": "process",

	// Quando ativado, as extensões são baixadas localmente e instaladas no local remoto.
	"remote.downloadExtensionsLocally": false,

	// Substituir o tipo de uma extensão. As extensões `ui` são instaladas e executadas no computador local, enquanto as extensões `workspace` são executadas no repositório remoto. Ao substituir o tipo padrão de uma extensão usando essa configuração, você deve especificar se essa extensão deve ser instalada e habilitada local ou remotamente.
	"remote.extensionKind": {
		"pub.name": [
			"ui"
		]
	},

	// Especifica o nome do host local que será usado para o encaminhamento de porta.
	"remote.localPortHost": "localhost",

	// Defina as propriedades padrão que são aplicadas a todas as portas que não obtêm propriedades da configuração `remote.portsAttributes`. Por exemplo:
	// 
	// ```
	// {
	//   "onAutoForward": "ignore"
	// }
	// ```
	"remote.otherPortsAttributes": {},

	// Definir as propriedades que são aplicadas quando um número de porta específico é encaminhado. Por exemplo:
	// 
	// 
	// ```"3000": {
	//   "label": "Application"
	// },
	// "40000-55000": {
	//  "onAutoForward": "ignore"
	// },
	// ".+\\/server.js": {
	//  "onAutoForward": "openPreview"
	// }
	// ```
	"remote.portsAttributes": {
		"443": {
			"protocol": "https"
		},
		"8443": {
			"protocol": "https"
		}
	},

	// Restaura as portas que você encaminhou em um espaço de trabalho.
	"remote.restoreForwardedPorts": true,

	// Uma matriz de linguagens na qual as abreviações Emmet não devem ser expandidas.
	"emmet.excludeLanguages": [
		"markdown"
	],

	// Uma matriz de caminhos, em que cada caminho pode conter Emmet syntaxProfiles e/ou arquivos de Snippet.
	// No caso de conflitos, os perfis/snippets de caminhos posteriores substituirão os caminhos anteriores.
	// Consulte https://code.visualstudio.com/docs/editor/emmet para obter mais informações e um arquivo de snippet de exemplo.
	"emmet.extensionsPath": [],

	// Habilitar as abreviações do Emmet em linguagens sem suporte por padrão. Adicione um mapeamento aqui entre a linguagem e a linguagem compatível com o Emmet.
	//  Por exemplo: `{"vue-html": "html", "javascript": "javascriptreact"}`
	"emmet.includeLanguages": {},

	// Quando esta opção está definida como `false`, o arquivo inteiro é analisado para determinar se a posição atual é válida para expandir as abreviações do Emmet. Quando definida como `true`, é analisado somente o conteúdo próximo da posição atual nos arquivos CSS/SCSS/Less.
	"emmet.optimizeStylesheetParsing": true,

	// Preferências usadas para modificar o comportamento de algumas ações e resolvedores do Emmet.
	"emmet.preferences": {},

	// Mostra possíveis abreviações do Emmet como sugestões. Não aplicável em folhas de estilos ou quando emmet.showExpandedAbbreviation está definido como `"never"`.
	"emmet.showAbbreviationSuggestions": true,

	// Mostra abreviações do Emmet expandidas como sugestões.
	// A opção `"inMarkupAndStylesheetFilesOnly"` aplica-se a html, haml, jade, slim, xml, xsl, css, scss, sass, less e stylus. 
	// A opção `"always"` aplica-se a todas as partes do arquivo, independentemente da marcação/css.
	"emmet.showExpandedAbbreviation": "always",

	// Se `true`, as sugestões do Emmet serão mostradas como snippets que permitem que você as ordene de acordo com a configuração `editor.snippetSuggestions`.
	"emmet.showSuggestionsAsSnippets": false,

	// Definir o perfil para a sintaxe especificada ou usar seu próprio perfil com regras específicas.
	"emmet.syntaxProfiles": {},

	// Quando habilitadas, as abreviações do Emmet são expandidas ao pressionar TAB.
	"emmet.triggerExpansionOnTab": false,

	// Se `true`, o Emmet usará conclusões embutidas para sugerir expansões. Para evitar que o provedor de item de conclusão não embutido apareça com tanta frequência enquanto essa configuração for `true`, mude `editor.quickSuggestions` para `inline` ou `off` para o item `other`.
	"emmet.useInlineCompletions": false,

	// Variáveis a serem usadas em snippets do Emmet.
	"emmet.variables": {},

	// Controla se o envio forçado por push (com ou sem concessão) está habilitado.
	"git.allowForcePush": false,

	// Controla se as confirmações sem executar ganchos pre-commit e commit-msg são permitidas.
	"git.allowNoVerifyCommit": false,

	// Sempre mostrar o grupo de recursos Alterações em Etapas.
	"git.alwaysShowStagedChangesResourceGroup": false,

	// Controla o sinalizador de aprovação para todas as confirmações.
	"git.alwaysSignOff": false,

	// Quando esta opção estiver definida como true, os commits serão buscados automaticamente no repositório remoto padrão do repositório do Git atual. Quando ela estiver definida como `all` os commits serão buscados de todos os repositórios remotos.
	"git.autofetch": false,

	// Duração em segundos entre cada busca automática de git, quando `git.autofetch` está habilitado.
	"git.autofetchPeriod": 180,

	// Se a atualização automática está habilitada.
	"git.autorefresh": true,

	// Configura quando os repositórios devem ser detectados automaticamente.
	//  - true: Examinar as duas subpastas da pasta aberta no momento e das pastas pai de arquivos abertos.
	//  - false: Desabilitar verificação automática do repositório.
	//  - subFolders: Examinar subpastas da pasta aberta no momento.
	//  - openEditors: Examinar pastas pai de arquivos abertos.
	"git.autoRepositoryDetection": true,

	// Efetuar stash das alterações antes de acioná-las e restaurá-las após o êxito.
	"git.autoStash": false,

	// Prefixo usado ao criar um novo branch.
	"git.branchPrefix": "",

	// Lista de branches protegidos. Por padrão, um prompt é mostrado antes que as alterações sejam confirmadas em um branch protegido. O prompt pode ser controlado usando a configuração `git.branchProtectionPrompt`.
	"git.branchProtection": [],

	// Controla se um prompt está sendo usado antes que as alterações sejam confirmadas em um branch protegido.
	//  - alwaysCommit: Sempre faça commit nas alterações no branch protegido.
	//  - alwaysCommitToNewBranch: Sempre fazer commit nas alterações em um novo branch.
	//  - alwaysPrompt: Sempre solicitar antes que as alterações sejam confirmadas em um branch protegido.
	"git.branchProtectionPrompt": "alwaysPrompt",

	// Lista de dicionários usados para o nome do branch gerado aleatoriamente. Cada valor representa o dicionário usado para gerar o segmento do nome da ramificação. Dicionários suportados: `adjetivos`, `animais`, `cores` e `números`.
	//  - adjectives: Um adjetivo aleatório
	//  - animals: Um nome de animal aleatório
	//  - colors: Um nome de cor aleatório
	//  - numbers: Um número aleatório entre 100 e 999
	"git.branchRandomName.dictionary": [
		"adjectives",
		"animals"
	],

	// Controla se um nome aleatório é gerado ao criar um novo branch.
	"git.branchRandomName.enable": false,

	// Controla a ordem de classificação de ramificações.
	"git.branchSortOrder": "committerdate",

	// Uma expressão regular para validar novos nomes de branch.
	"git.branchValidationRegex": "",

	// O caractere para substituir o espaço em branco em novos nomes de branch e para separar segmentos de um nome de branch gerado aleatoriamente.
	"git.branchWhitespaceChar": "-",

	// Controla o tipo de referências do Git que são listadas ao executar `Checkout to...`.
	//  - local: Branches locais
	//  - tags: Tags
	//  - remote: Branches remotos
	"git.checkoutType": [
		"local",
		"remote",
		"tags"
	],

	// Controla se o editor de comparação deve ser fechado automaticamente quando as alterações são ocultadas, confirmadas, descartadas, preparadas ou não.
	"git.closeDiffOnOperation": false,

	// Lista de comandos git (por exemplo: commit, push) que teriam seu 'stdout' registrado no [git output](command:git.showOutput). Se o comando git tiver um gancho do lado do cliente configurado, o 'stdout' do gancho do lado do cliente também será registrado no [git output](command:git.showOutput).
	"git.commandsToLog": [],

	// Sempre confirmar a criação de confirmações vazias para o comando 'Git: Commit Empty'.
	"git.confirmEmptyCommits": true,

	// Controla se é necessário solicitar confirmação antes de forçar o envio por push.
	"git.confirmForcePush": true,

	// Controla se deve solicitar confirmação antes de confirmar sem verificação.
	"git.confirmNoVerifyCommit": true,

	// Confirmar antes de sincronizar os repositórios git.
	"git.confirmSync": true,

	// Controla o selo da contagem de Git.
	//  - all: Contar todas as alterações.
	//  - tracked: Contar somente as alterações controladas.
	//  - off: Desligar o contador.
	"git.countBadge": "all",

	// Controla se o Git contribui com cores e selos para o Explorador e para a exibição Editores Abertos.
	"git.decorations.enabled": true,

	// A localização padrão para clonar um repositório git.
	"git.defaultCloneDirectory": null,

	// Controla se os submódulos git devem ser detectados automaticamente.
	"git.detectSubmodules": true,

	// Controla o limite de submódulos git detectados.
	"git.detectSubmodulesLimit": 10,

	// Habilita a assinatura de confirmação com GPG ou X.509.
	"git.enableCommitSigning": false,

	// Se o Git está habilitado.
	"git.enabled": true,

	// Confirmar todas as alterações quando não houver alterações preparadas.
	"git.enableSmartCommit": false,

	// Controla se o comando de sincronização do Git aparece na barra de status.
	"git.enableStatusBarSync": true,

	// Quando habilitado, busque todas as ramificações efetuando pull. Caso contrário, busque apenas a atual.
	"git.fetchOnPull": false,

	// Seguir as marcas de envio de tudo por push ao executar o comando de sincronização.
	"git.followTagsWhenSync": false,

	// This setting is now deprecated, please use `github.gitAuthentication` instead.
	// 
	"git.githubAuthentication": null,

	// Lista de repositórios git a serem ignorados.
	"git.ignoredRepositories": [],

	// Ignora o aviso de Git herdado.
	"git.ignoreLegacyWarning": false,

	// Ignora o aviso quando há muitas alterações em um repositório.
	"git.ignoreLimitWarning": false,

	// Ignora o aviso quando o Git está ausente.
	"git.ignoreMissingGitWarning": false,

	// Ignora o aviso quando parece que a base do branch pode ter sido trocada ao efetuar pull.
	"git.ignoreRebaseWarning": false,

	// Ignorar as modificações em submódulos na árvore de arquivos.
	"git.ignoreSubmodules": false,

	// Ignora o aviso quando as versões 2.25 – 2.26 do Git estão instaladas no Windows.
	"git.ignoreWindowsGit27Warning": false,

	// Controla quando mostrar a validação de entrada da mensagem de confirmação.
	"git.inputValidation": "warn",

	// Controla o limite de tamanho da mensagem de confirmação para mostrar um aviso.
	"git.inputValidationLength": 72,

	// Controla o limite de tamanho do assunto da mensagem de confirmação para mostrar um aviso. Remova a definição dele para herdar o valor de `config.inputValidationLength`.
	"git.inputValidationSubjectLength": 50,

	// Especifica a quantidade de informações (se houver) para registrar no [git output](command:git.showOutput).
	//  - Trace: Registrar todas as informações
	//  - Debug: Registrar apenas depuração, informações, avisos, erros e informações críticas
	//  - Info: Registrar apenas informações, avisos, erros e informações críticas
	//  - Warning: Registrar apenas avisos, erros e informações críticas
	//  - Error: Erro somente de log e informações críticas
	//  - Critical: Registrar somente informações críticas
	//  - Off: Não registrar nada
	"git.logLevel": "Info",

	// Abra o editor de mesclagem para arquivos que estão atualmente em conflito.
	"git.mergeEditor": true,

	// Controla se um repositório deve ser aberto automaticamente após a clonagem.
	//  - always: Sempre abrir o repositório na janela atual.
	//  - alwaysNewWindow: Sempre abrir o repositório em uma nova janela.
	//  - whenNoFolderOpen: Abrir somente na janela atual quando não for aberta nenhuma pasta.
	//  - prompt: Sempre solicitar uma ação.
	"git.openAfterClone": "prompt",

	// Controla se o editor de comparação deve ser aberto ao clicar em uma alteração. Caso contrário, o editor regular será aberto.
	"git.openDiffOnClick": true,

	// Caminho e nome de arquivo do executável git, por exemplo, `C:\Program Files\Git\bin\git.exe` (Windows). Isso também pode ser uma matriz de valores de cadeia de caracteres contendo vários caminhos para pesquisar.
	"git.path": null,

	// Executa um comando git após uma confirmação com êxito.
	//  - none: Não executar nenhum comando após uma confirmação.
	//  - push: Executar 'Git Push' após uma confirmação com êxito.
	//  - sync: Executar 'Git Sync' após uma confirmação com êxito.
	"git.postCommitCommand": "none",

	// Controla se o Git deve verificar arquivos não salvos antes de confirmar.
	//  - always: Verificar se há arquivos não salvos.
	//  - staged: Verificar somente os arquivos preparados não salvos.
	//  - never: Desabilitar essa verificação.
	"git.promptToSaveFilesBeforeCommit": "always",

	// Controla se o Git deve verificar se há arquivos não salvos antes de fazer stash das alterações.
	//  - always: Verificar se há arquivos não salvos.
	//  - staged: Verificar somente os arquivos preparados não salvos.
	//  - never: Desabilitar esta verificação.
	"git.promptToSaveFilesBeforeStash": "always",

	// Fazer a remoção durante a busca.
	"git.pruneOnFetch": false,

	// Buscar todas as marcas ao efetuar pull.
	"git.pullTags": true,

	// Forçar o git a usar a troca de base ao executar o comando de sincronização.
	"git.rebaseWhenSync": false,

	// Lista de pastas ignoradas durante a verificação de repositórios Git quando '#git.autoRepositoryDetection#' está definido como 'true' ou 'subFolders'.
	"git.repositoryScanIgnoredFolders": [
		"node_modules"
	],

	// Controla a profundidade usada ao verificar as pastas do workspace para repositórios Git quando `git.autoRepositoryDetection` está definido como `true` ou` subFolders`. Pode ser definido como `-1` para nenhum limite.
	"git.repositoryScanMaxDepth": 1,

	// Controla se a configuração explícita do usuário do Git deve ser exigida ou se o Git pode adivinhar a configuração quando ela estiver ausente.
	"git.requireGitUserConfig": true,

	// Lista de caminhos nos quais pesquisar repositórios git.
	"git.scanRepositories": [],

	// Controla se um botão de ação é mostrado na visualização Source Control.
	"git.showActionButton": {
		"commit": true,
		"publish": true,
		"sync": true
	},

	// Controla se a entrada de confirmação deve ser mostrada no painel de controle do código-fonte do Git.
	"git.showCommitInput": true,

	// Controla se uma ação de abertura de arquivo embutida deve ser mostrada no modo de exibição de alterações do Git.
	"git.showInlineOpenFileAction": true,

	// Controla se as ações git devem mostrar o progresso.
	"git.showProgress": true,

	// Controla se uma notificação deve ser mostrada quando um envio por push é bem-sucedido.
	"git.showPushSuccessNotification": false,

	// Controlar quais alterações são automaticamente testadas por Confirmação Inteligente.
	//  - all: Preparar automaticamente todas as alterações.
	//  - tracked: Somente preparar automaticamente as alterações controladas.
	"git.smartCommitChanges": "all",

	// Controla como limitar o número de alterações que podem ser analisadas a partir do comando de status do Git. Pode ser definido como 0 para nenhum limite.
	"git.statusLimit": 10000,

	// Sugere habilitar a confirmação inteligente (confirmar todas as alterações quando não há alterações preparadas).
	"git.suggestSmartCommit": true,

	// Controla se uma notificação aparece durante a execução da ação de sincronização, o que permite ao usuário cancelar a operação.
	"git.supportCancellation": false,

	// Controla se o VS Code deve ser habilitado para ser o manipulador de autenticação para processos git gerados no terminal integrado. Observação: os terminais precisam ser reiniciados para retirar uma alteração nesta configuração.
	"git.terminalAuthentication": true,

	// Controla se o VS Code deve ser ativado como editor git para processos git gerados no terminal integrado. Nota: os terminais precisam ser reiniciados para detectar uma alteração nesta configuração.
	"git.terminalGitEditor": false,

	// Controla qual data deve ser usada para os itens na exibição Linha do tempo.
	//  - committed: Usar a data confirmada
	//  - authored: Usar a data de criação
	"git.timeline.date": "committed",

	// Controla se o autor do commit deve ser mostrado na exibição Linha do tempo.
	"git.timeline.showAuthor": true,

	// Controla se as alterações não confirmadas devem ser mostradas no modo de exibição de Linha do Tempo.
	"git.timeline.showUncommitted": false,

	// Controla como as alterações não controladas se comportam.
	//  - mixed: Todas as alterações, controladas e não controladas, aparecem juntas e se comportam igualmente.
	//  - separate: As alterações não controladas são exibidas separadamente no modo de exibição de Controle do Código-fonte. Elas também são excluídas de várias ações.
	//  - hidden: As alterações não controladas são ocultas e excluídas de várias ações.
	"git.untrackedChanges": "mixed",

	// Controla se a mensagem da caixa de entrada de commit deve ser usada como a mensagem de stash padrão.
	"git.useCommitInputAsStashMessage": false,

	// Controla se um editor de texto completo será usado para criar mensagens de confirmação, sempre que nenhuma mensagem for fornecida na caixa de entrada de confirmação.
	"git.useEditorAsCommitInput": true,

	// Controla se o envio por push forçado usa a variante force-with-lease mais segura.
	"git.useForcePushWithLease": true,

	// Controla se o GIT_ASKPASS deve ser substituído para usar a versão integrada.
	"git.useIntegratedAskPass": true,

	// Habilite a saída detalhada quando `git.useEditorAsCommitInput` estiver habilitado.
	"git.verboseCommit": false,

	// Controla se a autenticação automática do GitHub deve ser habilitada para comandos git no VS Code.
	"github.gitAuthentication": true,

	// Controla qual protocolo é utilizado para clonar um repositório do GitHub
	"github.gitProtocol": "https",

	// URI of your GitHub Enterprise Instance
	"github-enterprise.uri": "",

	// Controla a habilitação da detecção de tarefas Grunt. A detecção de tarefas Grunt pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"grunt.autoDetect": "off",

	// Controla a habilitação da detecção de tarefas Gulp. A detecção de tarefas Gulp pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"gulp.autoDetect": "off",

	// Controla a habilitação da detecção de tarefas Jake. A detecção de tarefas Jake pode causar a execução de arquivos em qualquer espaço de trabalho aberto.
	"jake.autoDetect": "off",

	// Habilitar/desabilitar a matemática da renderização da visualização interna do Markdown.
	"markdown.math.enabled": true,

	// Se é necessário navegar automaticamente até o próximo conflito de mesclagem após resolver um conflito de mesclagem.
	"merge-conflict.autoNavigateNextConflict.enabled": false,

	// Criar um CodeLens para blocos de conflitos de mesclagem no editor.
	"merge-conflict.codeLens.enabled": true,

	// Criar decoradores para blocos de conflitos de mesclagem no editor.
	"merge-conflict.decorators.enabled": true,

	// Controla onde a exibição de comparação deve ser aberta ao comparar as alterações nos conflitos de mesclagem.
	//  - Current: Abrir o modo de exibição de comparação no grupo do editor atual.
	//  - Beside: Abrir o modo de exibição de comparação próximo ao grupo do editor atual.
	//  - Below: Abrir o modo de exibição de comparação abaixo do grupo do editor atual.
	"merge-conflict.diffViewPosition": "Current",

	// Configures which processes to automatically attach and debug when `debug.node.autoAttach` is on. A Node process launched with the `--inspect` flag will always be attached to, regardless of this setting.
	//  - always: Auto attach to every Node.js process launched in the terminal.
	//  - smart: Auto attach when running scripts that aren't in a node_modules folder.
	//  - onlyWithFlag: Only auto attach when the `--inspect` is given.
	//  - disabled: Auto attach is disabled and not shown in status bar.
	"debug.javascript.autoAttachFilter": "disabled",

	// Configures glob patterns for determining when to attach in "smart" `debug.javascript.autoAttachFilter` mode. `$KNOWN_TOOLS$` is replaced with a list of names of common test and code runners. [Read more on the VS Code docs](https://code.visualstudio.com/docs/nodejs/nodejs-debugging#_auto-attach-smart-patterns).
	"debug.javascript.autoAttachSmartPattern": [
		"${workspaceFolder}/**",
		"!**/node_modules/**",
		"**/$KNOWN_TOOLS$/**"
	],

	// When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.
	"debug.javascript.automaticallyTunnelRemoteServer": true,

	// Whether to stop when conditional breakpoints throw an error.
	"debug.javascript.breakOnConditionalError": false,

	// Where a "Run" and "Debug" code lens should be shown in your npm scripts. It may be on "all", scripts, on "top" of the script section, or "never".
	"debug.javascript.codelens.npmScripts": "top",

	// Options used when debugging open links clicked from inside the JavaScript Debug Terminal. Can be set to "off" to disable this behavior, or "always" to enable debugging in all terminals.
	"debug.javascript.debugByLinkOptions": "on",

	// The default `runtimeExecutable` used for launch configurations, if unspecified. This can be used to config custom paths to Node.js or browser installations.
	"debug.javascript.defaultRuntimeExecutable": {
		"pwa-node": "node"
	},

	// Default options used when debugging a process through the `Debug: Attach to Node.js Process` command
	"debug.javascript.pickAndAttachOptions": {},

	// Request options to use when loading resources, such as source maps, in the debugger. You may need to configure this if your sourcemaps require authentication or use a self-signed certificate, for instance. Options are used to create a request using the [`got`](https://github.com/sindresorhus/got) library.
	// 
	// A common case to disable certificate verification can be done by passing `{ "https": { "rejectUnauthorized": false } }`.
	"debug.javascript.resourceRequestOptions": {},

	// Default launch options for the JavaScript debug terminal and npm scripts.
	"debug.javascript.terminalOptions": {},

	// Configures whether sourcemapped file where the original file can't be read will automatically be unmapped. If this is false (default), a prompt is shown.
	"debug.javascript.unmapMissingSources": false,

	// Controla se os scripts npm devem ser automaticamente detectados.
	"npm.autoDetect": "on",

	// Habilitar a execução de scripts npm contidos em uma pasta no menu de contexto do Explorador.
	"npm.enableRunFromFolder": false,

	// The NPM Script Explorer is now available in 'Views' menu in the Explorer in all folders.
	// Habilitar um modo de exibição do explorador para scripts npm quando não houver arquivo 'package.json' de nível superior.
	"npm.enableScriptExplorer": false,

	// Configurar padrões glob para pastas que devem ser excluídas da detecção automática de script.
	"npm.exclude": "",

	// Buscar dados de https://registry.npmjs.org e https://registry.bower.io para fornecer preenchimento automático e informações sobre os recursos de foco em dependências npm.
	"npm.fetchOnlinePackageInfo": true,

	// O gerenciador de pacotes usado para executar scripts.
	//  - auto: Detectar automaticamente qual gerenciador de pacotes deve ser usado para executar scripts com base nos arquivos de bloqueio e nos gerenciadores de pacotes instalados.
	//  - npm: Usar o npm como o gerenciador de pacotes para executar scripts.
	//  - yarn: Usar o YARN como o gerenciador de pacotes para executar scripts.
	//  - pnpm: Usar o pnpm como o gerenciador de pacotes para executar scripts.
	"npm.packageManager": "auto",

	// Execute comandos npm com a opção `--silent`.
	"npm.runSilent": false,

	// A ação de clique padrão usada no explorador de scripts npm: `open` ou `run`, o padrão é `open`.
	"npm.scriptExplorerAction": "open",

	// Uma matriz de expressões regulares que indicam quais scripts devem ser excluídos da exibição de Scripts NPM.
	"npm.scriptExplorerExclude": [],

	// Controla se 'Espiar Referências' ou 'Localizar Referências' é invocado ao selecionar referências de lente de código
	//  - peek: Mostrar referências no editor de espiada.
	//  - view: Mostrar referências em modo de exibição separado.
	"references.preferredLocation": "peek",

	// Habilita/desabilita o indicador flutuante que é exibido quando focalizado no navegador simples.
	"simpleBrowser.focusLockIndicator.enabled": true,

	// Include parentheses around a sole arrow function parameter
	"prettier.arrowParens": "always",

	// Controls the printing of spaces inside object literals
	"prettier.bracketSpacing": true,

	// Path to the prettier configuration file
	"prettier.configPath": "",

	// This feature is no longer supported. Instead, configure VS Code [default formatters](https://github.com/prettier/prettier-vscode#default-formatter) or use .prettierignore.
	// A list of languages IDs to disable this extension on
	"prettier.disableLanguages": [],

	// A list of [glob patterns](https://code.visualstudio.com/api/references/vscode-api#GlobPattern) to register Prettier formatter
	"prettier.documentSelectors": [],

	// Control whether Prettier formats quoted code embedded in the file.
	"prettier.embeddedLanguageFormatting": "auto",

	// Controls whether prettier is enabled or not.
	"prettier.enable": true,

	// Enable debug logs for troubleshooting.
	"prettier.enableDebugLogs": false,

	// Specify the end of line used by prettier
	"prettier.endOfLine": "lf",

	// Specify the global whitespace sensitivity for HTML files.
	//  Valid options:
	// - `css` - Respect the default value of CSS display property.
	// - `strict` - Whitespaces are considered sensitive.
	// - `ignore` - Whitespaces are considered insensitive.
	"prettier.htmlWhitespaceSensitivity": "css",

	// Path to a .prettierignore file
	"prettier.ignorePath": ".prettierignore",

	// Prettier can insert a special @format marker at the top of files specifying that the file has been formatted with prettier. This works well when used in tandem with the `--require-pragma` option. If there is already a docblock at the top of the file then this option will add a newline to it with the @format marker.
	"prettier.insertPragma": false,

	// If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line
	"prettier.jsxBracketSameLine": false,

	// Use single quotes instead of double quotes in JSX
	"prettier.jsxSingleQuote": false,

	// Package manager is now automatically detected by VS Code. This setting is no longer used.
	// The package manager you use to install node modules.
	"prettier.packageManager": "npm",

	// Path to the prettier module
	"prettier.prettierPath": "",

	// Fit code within this line limit
	"prettier.printWidth": 80,

	// (Markdown) wrap prose over multiple lines
	"prettier.proseWrap": "preserve",

	// Change when properties in objects are quoted
	"prettier.quoteProps": "as-needed",

	// Require a prettier configuration file to format. See [documentation for valid configuration files](https://prettier.io/docs/en/configuration.html).
	// 
	// > _Note, untitled files will still be formatted using the VS Code prettier settings even when this setting is set._
	"prettier.requireConfig": false,

	// Prettier can restrict itself to only format files that contain a special comment, called a pragma, at the top of the file. This is very useful when gradually transitioning large, unformatted codebases to prettier.
	"prettier.requirePragma": false,

	// When enabled, this extension will attempt to use global npm or yarn modules if local modules cannot be resolved.
	// > _This setting can have a negative performance impact, particularly on Windows when you have attached network drives. Only enable this if you must use global modules._
	"prettier.resolveGlobalModules": false,

	// Whether to add a semicolon at the end of every line
	"prettier.semi": true,

	// If true, will use single instead of double quotes
	"prettier.singleQuote": false,

	// Number of spaces it should use per tab
	"prettier.tabWidth": 2,

	// Controls the printing of trailing commas wherever possible. Valid options:
	// - `none` - No trailing commas
	// - `es5` - Trailing commas where valid in ES5 (objects, arrays, etc)
	// - `all` - Trailing commas wherever possible (function arguments)
	"prettier.trailingComma": "es5",

	// Whether or not to take `.editorconfig` into account when parsing configuration. See the [prettier.resolveConfig](https://prettier.io/docs/en/api.html) docs for details.
	"prettier.useEditorConfig": true,

	// Indent lines with tabs
	"prettier.useTabs": false,

	// Whether or not to indent the code inside `<script>` and `<style>` tags in Vue files. Some people (like the creator of Vue) don’t indent to save an indentation level, but this might break code folding in your editor.
	"prettier.vueIndentScriptAndStyle": false,

	// If true, this extension will process files in node_modules
	"prettier.withNodeModules": false,

	// Additional arguments passed to Firefox
	"firefox.args": [],

	// Absolute path to the Firefox executable
	"firefox.executable": "",

	// Use the specified profile directly instead of a temporary copy
	"firefox.keepProfileChanges": false,

	// The remote debugging port to use
	"firefox.port": 0,

	// The name of the Firefox profile to use
	"firefox.profile": "",

	// The path of the Firefox profile directory to use
	"firefox.profileDir": "",

	// Launch Microsoft Edge with specified args. (requires relaunching Visual Studio Code)
	"vscode-edge-devtools.browserArgs": [],

	// 
	//  - Default: Microsoft Edge Tools for VS Code will try to open the Microsoft Edge flavors in the following order: Stable, Beta, Dev and Canary
	//  - Stable: Microsoft Edge Tools for VS Code will use Microsoft Edge Stable version
	//  - Beta: Microsoft Edge Tools for VS Code will use Microsoft Edge Beta version
	//  - Dev: Microsoft Edge Tools for VS Code will use Microsoft Edge Dev version
	//  - Canary: Microsoft Edge Tools for VS Code will use Microsoft Edge Canary version
	"vscode-edge-devtools.browserFlavor": "",

	// The default entrypoint into your webpage. Used to resolve debugging urls without a pathname
	"vscode-edge-devtools.defaultEntrypoint": "index.html",

	// The default url to open when launching the browser without a target
	"vscode-edge-devtools.defaultUrl": "",

	// Launch Microsoft Edge in headless mode. (requires relaunching Visual Studio Code)
	"vscode-edge-devtools.headless": true,

	// The hostname on which to search for remote debuggable instances
	"vscode-edge-devtools.hostname": "localhost",

	// A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk
	"vscode-edge-devtools.pathMapping": {
		"/": "${workspaceFolder}"
	},

	// The port on which to search for remote debuggable instances
	"vscode-edge-devtools.port": 9222,

	// Show service and shared workers in the target list.
	"vscode-edge-devtools.showWorkers": false,

	// A set of mappings to override the locations of source map files.
	"vscode-edge-devtools.sourceMapPathOverrides": {
		"webpack:///./*": "${webRoot}/*",
		"webpack:///src/*": "${webRoot}/*",
		"webpack:///*": "*",
		"webpack:///./~/*": "${webRoot}/node_modules/*",
		"webpack://*": "${webRoot}/*",
		"meteor://💻app/*": "${webRoot}/*"
	},

	// Use JavaScript source maps (if they exist)
	"vscode-edge-devtools.sourceMaps": true,

	// The number of milliseconds that the Microsoft Edge Tools will keep trying to attach the browser before timing out
	"vscode-edge-devtools.timeout": 10000,

	// Should we request the remote target list using https rather than http
	"vscode-edge-devtools.useHttps": false,

	// By default, Microsoft Edge is launched with a separate user profile in a temp folder. Use this option to override the path. You can also set to false to launch with your default user profile instead.
	"vscode-edge-devtools.userDataDir": true,

	// Enable feedback from webhint on source files to improve accessibility, compatibility, security and more.
	"vscode-edge-devtools.webhint": true,

	// The absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk
	"vscode-edge-devtools.webRoot": "${workspaceFolder}",

	// Selecione um pacote de ícones que habilitam ícones específicos.
	//  - angular: Ícones para Angular.
	//  - angular_ngrx: Ícones para Angular e ngrx.
	//  - react: Ícones para React.
	//  - react_redux: Ícones para React e ngrx.
	//  - vue: Ícones para Vue.
	//  - vue_vuex: Ícones para Vue e Vuex.
	//  - nest: Ícones para NestJS.
	//  - none: Nenhum pacote de ícones ativado.
	"material-icon-theme.activeIconPack": "angular",

	// Definir ícones para associações de arquivos customizadas.
	"material-icon-theme.files.associations": {},

	// Definir ícones para associações de pastas customizadas.
	"material-icon-theme.folders.associations": {},

	// Alterar a cor dos ícones das pastas.
	"material-icon-theme.folders.color": "#90a4ae",

	// Definir o tipo dos ícones das pastas.
	//  - specific: Selecione ícones de pastas específicas.
	//  - classic: Selecione ícones de pastas clássicas.
	//  - none: Nenhum ícone de pasta.
	"material-icon-theme.folders.theme": "specific",

	// Ocultar as setas ao lado das pastas no explorador de arquivos.
	"material-icon-theme.hidesExplorerArrows": false,

	// Definir ícones para associações de idiomas customizadas.
	"material-icon-theme.languages.associations": {},

	// Alterar a opacidade dos ícones.
	"material-icon-theme.opacity": 1,

	// Change the saturation of the icons.
	"material-icon-theme.saturation": 1,

	// Mostrar mensagem da reinicialização.
	"material-icon-theme.showReloadMessage": true,

	// Mostrar mensagem de atualização após cada atualização.
	"material-icon-theme.showUpdateMessage": false,

	// Mostrar mensagem de bem-vindo após a primeira instalação.
	"material-icon-theme.showWelcomeMessage": true,

	// Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.
	// 
	//  Examples : 
	// chrome --incognito --headless --remote-debugging-port=9222 
	//  C:\\Program Files\\Firefox Developer Edition\\firefox.exe --private-window
	"liveServer.settings.AdvanceCustomBrowserCmdLine": null,

	// Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.
	//  NOTE: You have to install 'Debugger for Chrome' 
	// If the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. 
	// 
	//  CAUTION: If it is true, 'Launch Chrome against localhost' may not work.
	"liveServer.settings.ChromeDebuggingAttachment": false,

	// Specify custom browser settings for Live Server. 
	// By Default it will open your default favorite browser.
	"liveServer.settings.CustomBrowser": null,

	// To disable information pop up messages.
	"liveServer.settings.donotShowInfoMsg": false,

	// To turn off prompt warning message if body or head or other supporting tag is missing in your HTML.
	"liveServer.settings.donotVerifyTags": false,

	// When set, serve this file (server root relative) for every 404 (useful for single-page applications)
	"liveServer.settings.file": "",

	// By Default Live Server inject CSS changes without full reloading of browser. You can change this behavior by making this setting as `true`
	"liveServer.settings.fullReload": false,

	// To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1
	"liveServer.settings.host": "127.0.0.1",

	// Setup https configuration
	"liveServer.settings.https": {
		"enable": false,
		"cert": "",
		"key": "",
		"passphrase": ""
	},

	// To ignore specific file changes
	"liveServer.settings.ignoreFiles": [
		".vscode/**",
		"**/*.scss",
		"**/*.sass",
		"**/*.ts"
	],

	// Mount a directory to a route. Such as [['/components', './node_modules']]
	"liveServer.settings.mount": [],

	// This the entry point of server when you're in multiroot workspace
	"liveServer.settings.multiRootWorkspaceName": null,

	// If it is true live server will start without browser opened.
	"liveServer.settings.NoBrowser": false,

	// Set Custom Port Number of Live Server. Set 0 if you want random port.
	"liveServer.settings.port": 5500,

	// To Setup Proxy
	"liveServer.settings.proxy": {
		"enable": false,
		"baseUri": "/",
		"proxyUri": "http://127.0.0.1:80"
	},

	// Set Custom root of Live Server. 
	// To change root the the server to sub folder of workspace, use '/' and relative path from workspace. 
	// Example: /subfolder1/subfolder2
	"liveServer.settings.root": "/",

	// Change this to false if you don't want the button to show in the statusbar
	"liveServer.settings.showOnStatusbar": true,

	// Open in Browser Preview inside VS Code, instead of default browser
	"liveServer.settings.useBrowserPreview": false,

	// Use local IP as host
	"liveServer.settings.useLocalIp": false,

	// You have to install a browser extension. That will be works for your dynamic pages (like PHP).
	"liveServer.settings.useWebExt": false,

	// Delay before live reloading. Value in milliseconds. Default is 100
	"liveServer.settings.wait": 100,

	// Open a specific browser instead of the default one. `string[]`
	"fiveServer.browser": [],

	// Files/Folders to ignore from watching. `Array<string | RegExp | Glob>`
	// 
*dotfiles, node_modules, bower_components and jspm_packages are excluded by default*
	"fiveServer.ignore": [],

	// Navigates your browser automatically to the current working file. `boolean`
	"fiveServer.navigate": false,

	// 
	"fiveServer.openTerminal": true,

	// Absolute path to PHP executable. `string`
	"fiveServer.php.executable": "",

	// Absolute path to php.ini file. `string`
	"fiveServer.php.ini": "",

	// Set the server port. `number`
	// 
*usually between 3000 and 9999*
	"fiveServer.port": 5555,

}